"use strict";(self.webpackChunkloan_calculator=self.webpackChunkloan_calculator||[]).push([[323],{265:function(t,e,n){n.d(e,{A:function(){return m}});var a=n(287),i=n(956),s=n(364),r=n(663),o=n(719);var l=class{constructor(t={}){this.container=t.container||document.getElementById("market-rates-container"),this.language=t.language||"en",this.currentLoanType=t.loanType||"mortgage",this.currentRate=t.currentRate||0,this.onRateSelect=t.onRateSelect||(()=>{}),this.marketRatesData={mortgage:{average:6.75,min:5.85,max:7.65,trend:"stable",lastUpdated:new Date("2025-07-15")},auto:{average:7.25,min:6.5,max:9.75,trend:"up",lastUpdated:new Date("2025-07-16")},personal:{average:11.5,min:8.75,max:17.99,trend:"up",lastUpdated:new Date("2025-07-16")},student:{average:5.5,min:4.99,max:7.25,trend:"down",lastUpdated:new Date("2025-07-14")}},this.init()}init(){this.render(),this.bindEvents()}render(){if(!this.container)return;const t=t=>(0,r.sC)(t,this.language),e=this.marketRatesData[this.currentLoanType]||this.marketRatesData.mortgage,n=s.Vb(this.language),a=e.lastUpdated.toLocaleDateString(n,{year:"numeric",month:"short",day:"numeric"}),i=this.getTrendIcon(e.trend),o=`\n      <div class="market-rates">\n        <div class="market-rates-header">\n          <h3>${t("marketRates.title")}</h3>\n          <div class="market-rates-disclaimer">${t("marketRates.disclaimer")}</div>\n        </div>\n        \n        <div class="market-rates-content">\n          <div class="market-rates-summary">\n            <div class="market-rates-average">\n              <span class="market-rates-label">${t("marketRates.averageRate")}</span>\n              <span class="market-rates-value">${e.average.toFixed(2)}%</span>\n              <span class="market-rates-trend ${e.trend}">${i}</span>\n            </div>\n            <div class="market-rates-range">\n              <span class="market-rates-label">${t("marketRates.rateRange")}</span>\n              <span class="market-rates-value">${e.min.toFixed(2)}% - ${e.max.toFixed(2)}%</span>\n            </div>\n          </div>\n          \n          <div class="market-rates-comparison">\n            <div class="market-rates-your-rate">\n              <span class="market-rates-label">${t("marketRates.yourRate")}</span>\n              <span class="market-rates-value ${this.getRateComparisonClass(this.currentRate,e.average)}">\n                ${this.currentRate.toFixed(2)}%\n              </span>\n            </div>\n            <div class="market-rates-difference">\n              <span class="market-rates-label">${t("marketRates.difference")}</span>\n              <span class="market-rates-value ${this.getRateComparisonClass(this.currentRate,e.average)}">\n                ${this.formatRateDifference(this.currentRate,e.average)}\n              </span>\n            </div>\n          </div>\n          \n          <div class="market-rates-actions">\n            <button id="use-average-rate" class="market-rates-button">\n              ${t("marketRates.useAverageRate")}\n            </button>\n          </div>\n          \n          <div class="market-rates-footer">\n            <span class="market-rates-updated">${t("marketRates.lastUpdated")}: ${a}</span>\n          </div>\n        </div>\n      </div>\n    `;this.container.innerHTML=o}bindEvents(){if(!this.container)return;const t=this.container.querySelector("#use-average-rate");t&&t.addEventListener("click",()=>{const t=this.marketRatesData[this.currentLoanType]||this.marketRatesData.mortgage;this.onRateSelect(t.average)})}getTrendIcon(t){switch(t){case"up":return'<span class="trend-icon trend-up" aria-hidden="true">\u2191</span>';case"down":return'<span class="trend-icon trend-down" aria-hidden="true">\u2193</span>';default:return'<span class="trend-icon trend-stable" aria-hidden="true">\u2192</span>'}}getRateComparisonClass(t,e){const n=t-e;return Math.abs(n)<=.25?"rate-average":n<0?"rate-below":"rate-above"}formatRateDifference(t,e){const n=t-e,a=t=>(0,r.sC)(t,this.language);return Math.abs(n)<=.1?a("marketRates.sameAsAverage"):n<0?`${Math.abs(n).toFixed(2)}% ${a("marketRates.belowAverage")}`:`${n.toFixed(2)}% ${a("marketRates.aboveAverage")}`}updateLoanType(t){a.fx[t]&&this.currentLoanType!==t&&(this.currentLoanType=t,this.render(),this.bindEvents())}updateCurrentRate(t){this.currentRate!==t&&(this.currentRate=t,this.render(),this.bindEvents())}updateLanguage(t){this.language!==t&&(this.language=t,this.render(),this.bindEvents())}},c=n(149),d=n(799);var m=class{constructor(t={}){this.container=t.container||document.getElementById("calculator-form-container"),this.onCalculate=t.onCalculate||(()=>{}),this.validators={principal:i.F5,interestRate:i.B6,term:i.xK,downPayment:i.Et,additionalPayment:i.Et,inflationRate:i.VT,...t.validators},this.language=t.language||"en",this.locale=s.Vb(this.language),this.formData=a.Ay.createDefault("mortgage").toJSON(),void 0===this.formData.inflationRate&&(this.formData.inflationRate=2.5),this.marketRatesComponent=null,this.init()}init(){this.render(),this.bindEvents(),this.initMarketRates(),this.handleCalculate()}initMarketRates(){const t=this.container.querySelector("#market-rates-container");t&&(this.marketRatesComponent=new l({container:t,language:this.language,loanType:this.formData.type,currentRate:this.formData.interestRate,onRateSelect:t=>{const e=this.container.querySelector("#interestRate"),n=this.container.querySelector("#interestRate-slider");e&&n&&(e.value=t,n.value=t,this.handleCalculate())}}))}render(){if(!this.container)return;const t=t=>(0,r.sC)(t,this.language),e=`\n      <div class="calculator-form">\n        <h2>${t("form.title")}</h2>\n        <form id="loan-calculator-form">\n          \x3c!-- Loan Type Selector --\x3e\n          <div class="form-group">\n            <div class="form-input-wrapper">\n              <select id="loan-type" class="form-select" name="type">\n                ${Object.entries(a.fx).map(([e,n])=>{const a=`form.${e}`,i=t(a)!==a?t(a):n.description;return`<option value="${e}" ${this.formData.type===e?"selected":""}>${i}</option>`}).join("")}\n              </select>\n              <label for="loan-type" class="form-label floating">\n                ${t("form.loanType")}\n                <span class="info-icon" data-tooltip="${t("tooltips.loanType")}" data-tooltip-position="top">?</span>\n              </label>\n            </div>\n          </div>\n          \n          \x3c!-- Loan Amount --\x3e\n          <div class="form-group">\n            <div class="form-input-wrapper">\n              <input \n                type="number" \n                id="principal" \n                class="form-input" \n                name="principal" \n                value="${this.formData.principal}" \n                min="${a.fx[this.formData.type].minAmount}" \n                max="${a.fx[this.formData.type].maxAmount}" \n                step="1000"\n                placeholder=" "\n              >\n              <label for="principal" class="form-label">\n                ${t("form.loanAmount")} (${this.formData.currency||"USD"})\n              </label>\n            </div>\n            <div class="range-container">\n              <input \n                type="range" \n                id="principal-slider" \n                class="form-slider" \n                min="${a.fx[this.formData.type].minAmount}" \n                max="${a.fx[this.formData.type].maxAmount}" \n                step="1000" \n                value="${this.formData.principal}"\n              >\n              <div class="range-values">\n                <span>${s.vv(a.fx[this.formData.type].minAmount,this.formData.currency||"USD",this.locale)}</span>\n                <span>${s.vv(a.fx[this.formData.type].maxAmount,this.formData.currency||"USD",this.locale)}</span>\n              </div>\n            </div>\n            <div class="invalid-feedback" id="principal-error"></div>\n          </div>\n          \n          \x3c!-- Down Payment --\x3e\n          <div class="form-group">\n            <div class="form-input-wrapper">\n              <input \n                type="number" \n                id="downPayment" \n                class="form-input" \n                name="downPayment" \n                value="${this.formData.downPayment}" \n                min="0" \n                max="${this.formData.principal}" \n                step="1000"\n                placeholder=" "\n              >\n              <label for="downPayment" class="form-label">${t("form.downPayment")} (${this.formData.currency||"USD"})</label>\n            </div>\n            <div class="range-container">\n              <input \n                type="range" \n                id="downPayment-slider" \n                class="form-slider" \n                min="0" \n                max="${this.formData.principal}" \n                step="1000" \n                value="${this.formData.downPayment}"\n              >\n              <div class="range-values">\n                <span>${s.vv(0,this.formData.currency||"USD",this.locale)}</span>\n                <span>${s.vv(this.formData.principal,this.formData.currency||"USD",this.locale)}</span>\n              </div>\n            </div>\n            <div class="invalid-feedback" id="downPayment-error"></div>\n          </div>\n          \n          \x3c!-- Interest Rate --\x3e\n          <div class="form-group">\n            <div class="form-input-wrapper">\n              <input \n                type="number" \n                id="interestRate" \n                class="form-input" \n                name="interestRate" \n                value="${this.formData.interestRate}" \n                min="0" \n                max="30" \n                step="0.125"\n                placeholder=" "\n              >\n              <label for="interestRate" class="form-label">${t("form.interestRate")} (%)</label>\n            </div>\n            <div class="range-container">\n              <input \n                type="range" \n                id="interestRate-slider" \n                class="form-slider" \n                min="0" \n                max="30" \n                step="0.125" \n                value="${this.formData.interestRate}"\n              >\n              <div class="range-values">\n                <span>0%</span>\n                <span>30%</span>\n              </div>\n            </div>\n            <div class="invalid-feedback" id="interestRate-error"></div>\n          </div>\n          \n          \x3c!-- Market Rates --\x3e\n          <div id="market-rates-container" class="market-rates-container"></div>\n          \n          \x3c!-- Loan Term --\x3e\n          <div class="form-group">\n            <div class="form-input-wrapper">\n              <input \n                type="number" \n                id="term" \n                class="form-input" \n                name="term" \n                value="${this.formData.term}" \n                min="1" \n                max="600" \n                step="1"\n                placeholder=" "\n              >\n              <label for="term" class="form-label">${t("form.loanTerm")} (${t("form.months")})</label>\n            </div>\n            <div class="range-container">\n              <input \n                type="range" \n                id="term-slider" \n                class="form-slider" \n                min="1" \n                max="600" \n                step="1" \n                value="${this.formData.term}"\n              >\n              <div class="range-values">\n                <span>1 ${t("form.months")}</span>\n                <span>600 ${t("form.months")}</span>\n              </div>\n            </div>\n            <div class="term-presets">\n              <button type="button" class="term-preset outline small" data-term="60">5 ${t("form.years")}</button>\n              <button type="button" class="term-preset outline small" data-term="180">15 ${t("form.years")}</button>\n              <button type="button" class="term-preset outline small" data-term="360">30 ${t("form.years")}</button>\n            </div>\n            <div class="invalid-feedback" id="term-error"></div>\n          </div>\n          \n          \x3c!-- Payment Frequency --\x3e\n          <div class="form-group">\n            <div class="form-input-wrapper">\n              <select id="paymentFrequency" class="form-select" name="paymentFrequency">\n                ${Object.entries(a._2).map(([e,n])=>{const a=`form.${e}`,i=t(a)!==a?t(a):n.description;return`<option value="${e}" ${this.formData.paymentFrequency===e?"selected":""}>${i}</option>`}).join("")}\n              </select>\n              <label for="paymentFrequency" class="form-label floating">${t("form.paymentFrequency")}</label>\n            </div>\n          </div>\n          \n          \x3c!-- Start Date --\x3e\n          <div class="form-group">\n            <div class="form-input-wrapper">\n              <input \n                type="date" \n                id="startDate" \n                class="form-input" \n                name="startDate" \n                value="${new Date(this.formData.startDate).toISOString().split("T")[0]}"\n                placeholder=" "\n              >\n              <label for="startDate" class="form-label">${t("form.startDate")}</label>\n            </div>\n            <div class="invalid-feedback" id="startDate-error"></div>\n          </div>\n          \n          \x3c!-- Additional Payment --\x3e\n          <div class="form-group">\n            <div class="form-input-wrapper">\n              <input \n                type="number" \n                id="additionalPayment" \n                class="form-input" \n                name="additionalPayment" \n                value="${this.formData.additionalPayment}" \n                min="0" \n                step="10"\n                placeholder=" "\n              >\n              <label for="additionalPayment" class="form-label">${t("form.additionalPayment")} (${this.formData.currency||"USD"})</label>\n            </div>\n            <div class="invalid-feedback" id="additionalPayment-error"></div>\n          </div>\n          \n          \x3c!-- Inflation Rate --\x3e\n          <div class="form-group">\n            <div class="form-input-wrapper">\n              <input \n                type="number" \n                id="inflationRate" \n                class="form-input" \n                name="inflationRate" \n                value="${this.formData.inflationRate||2.5}" \n                min="0" \n                max="20" \n                step="0.1"\n                placeholder=" "\n              >\n              <label for="inflationRate" class="form-label">\n                ${t("form.inflationRate")||"Inflation Rate"} (%)\n                <span class="info-icon" data-tooltip="${t("tooltips.inflationRate")||"Annual inflation rate used to calculate the real value of future payments."}" data-tooltip-position="top">?</span>\n              </label>\n            </div>\n            <div class="range-container">\n              <input \n                type="range" \n                id="inflationRate-slider" \n                class="form-slider" \n                min="0" \n                max="20" \n                step="0.1" \n                value="${this.formData.inflationRate||2.5}"\n              >\n              <div class="range-values">\n                <span>0%</span>\n                <span>20%</span>\n              </div>\n            </div>\n            <div class="invalid-feedback" id="inflationRate-error"></div>\n          </div>\n          \n          \x3c!-- Calculate Button --\x3e\n          <div class="form-group">\n            <div class="form-buttons">\n              <button type="submit" class="form-button" id="calculate-button">${t("form.calculate")}</button>\n              <button type="button" class="form-button secondary" id="reset-button">${t("form.reset")}</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    `;this.container.innerHTML=e}bindEvents(){if(!this.container)return;const t=this.container.querySelector("#loan-calculator-form");if(!t)return;t.addEventListener("submit",t=>{t.preventDefault(),this.handleCalculate()});const e=this.container.querySelector("#calculate-button");e&&e.addEventListener("click",t=>{d.A.createRippleEffect(e,t)});const n=this.container.querySelector("#reset-button");n&&n.addEventListener("click",()=>this.reset());const a=this.container.querySelector("#loan-type");a&&a.addEventListener("change",t=>{const e=t.target.value;this.updateLoanTypeParameters(e)}),this.bindSliderInputSync("principal"),this.bindSliderInputSync("downPayment"),this.bindSliderInputSync("interestRate"),this.bindSliderInputSync("term"),this.bindSliderInputSync("inflationRate");this.container.querySelectorAll(".term-preset").forEach(t=>{t.addEventListener("click",t=>{const e=parseInt(t.target.dataset.term,10),n=this.container.querySelector("#term"),a=this.container.querySelector("#term-slider");n&&a&&(n.value=e,a.value=e,this.validateField("term",e),this.handleCalculate())})});t.querySelectorAll("input, select").forEach(t=>{t.addEventListener("input",t=>{const e=t.target.name||t.target.id,{value:n}=t.target;if(this.validateField(e,n),"principal"===e){const t=this.container.querySelector("#downPayment"),e=this.container.querySelector("#downPayment-slider");if(t&&e){const a=parseFloat(n);if(t.max=a,e.max=a,parseFloat(t.value)>a){t.value=a,e.value=a;const n=new Event("input");t.dispatchEvent(n)}}}this.handleCalculate()})}),(0,o.Dc)(this.container),this.initFloatingLabels()}bindSliderInputSync(t){const e=this.container.querySelector(`#${t}`),n=this.container.querySelector(`#${t}-slider`);e&&n&&(n.addEventListener("input",n=>{e.value=n.target.value,this.validateField(t,n.target.value)}),e.addEventListener("input",t=>{n.value=t.target.value}))}updateLoanTypeParameters(t){if(!a.fx[t])return;const e=a.fx[t],n=this.container.querySelector("#principal"),i=this.container.querySelector("#principal-slider");if(n&&i){n.min=e.minAmount,n.max=e.maxAmount,i.min=e.minAmount,i.max=e.maxAmount;const t=i.parentElement.querySelector(".range-values");t&&(t.innerHTML=`\n          <span>${s.vv(e.minAmount,this.formData.currency||"USD",this.locale)}</span>\n          <span>${s.vv(e.maxAmount,this.formData.currency||"USD",this.locale)}</span>\n        `);const a=parseFloat(n.value);a<e.minAmount?(n.value=e.minAmount,i.value=e.minAmount):a>e.maxAmount&&(n.value=e.maxAmount,i.value=e.maxAmount)}const r=this.container.querySelector("#term"),o=this.container.querySelector("#term-slider");r&&o&&(r.value=e.defaultTerm,o.value=e.defaultTerm);const l=this.container.querySelector("#interestRate"),c=this.container.querySelector("#interestRate-slider");l&&c&&(l.value=e.defaultRate,c.value=e.defaultRate),this.marketRatesComponent&&(this.marketRatesComponent.updateLoanType(t),this.marketRatesComponent.updateCurrentRate(e.defaultRate)),this.handleCalculate()}validateField(t,e){const n=this.validators[t];if(!n)return!0;let a=!0,i="";try{a=n(e),a||(i=this.getFieldErrorMessage(t,e))}catch(o){a=!1,i=`Validation error: ${o.message}`}const s=this.container.querySelector(`#${t}`),r=this.container.querySelector(`#${t}-error`);return s&&r&&(a?(s.classList.remove("is-invalid"),r.textContent=""):(s.classList.add("is-invalid"),r.textContent=i)),a}getFieldErrorMessage(t,e){const n=this.container.querySelector(`#${t}`),a=n?parseFloat(n.min):null,i=n?parseFloat(n.max):null,s=parseFloat(e);switch(t){case"principal":return isNaN(s)||s<=0?"Please enter a valid loan amount greater than $0":null!==a&&s<a?`Loan amount must be at least $${a.toLocaleString()}`:null!==i&&s>i?`Loan amount cannot exceed $${i.toLocaleString()}`:"Please enter a valid loan amount";case"interestRate":return isNaN(s)||s<0?"Interest rate must be 0% or higher":s>50?"Interest rate seems unusually high. Please verify.":"Please enter a valid interest rate";case"term":return isNaN(s)||s<=0?"Loan term must be greater than 0 months":s>600?"Loan term cannot exceed 600 months (50 years)":"Please enter a valid loan term";case"downPayment":return isNaN(s)||s<0?"Down payment cannot be negative":null!==i&&s>i?"Down payment cannot exceed the loan amount":"Please enter a valid down payment";case"additionalPayment":return isNaN(s)||s<0?"Additional payment cannot be negative":"Please enter a valid additional payment amount";case"inflationRate":return isNaN(s)||s<0?"Inflation rate cannot be negative":s>20?"Inflation rate seems unusually high. Please verify.":"Please enter a valid inflation rate";default:return"Please enter a valid value"}}validate(){let t=!0;const e=this.container.querySelector("#loan-calculator-form");if(!e)return!1;return e.querySelectorAll("input, select").forEach(e=>{const n=e.name||e.id,{value:a}=e;if(this.validators[n]){const e=this.validateField(n,a);t=t&&e}}),t}async handleCalculate(){const t=this.getFormData();if(!this.validate())return void this.showFormError("Please correct the errors in the form before calculating.");c.A.showProgressOverlay([{id:"validate",label:"Validating Input",status:"completed"},{id:"calculate",label:"Calculating Loan",status:"active"},{id:"amortization",label:"Building Schedule",status:"pending"},{id:"render",label:"Rendering Results",status:"pending"}],{title:"Calculating Your Loan",message:"Please wait while we process your loan calculation...",cancellable:!1});const e=this.container.querySelector("#calculate-button");e&&(e.disabled=!0,e.classList.add("loading"),e.setAttribute("data-original-text",e.textContent),e.innerHTML='\n        <div class="loading-spinner-dots" style="display: inline-flex; margin-right: 0.5rem;">\n          <div class="loading-dot" style="width: 6px; height: 6px; margin: 0 2px;"></div>\n          <div class="loading-dot" style="width: 6px; height: 6px; margin: 0 2px;"></div>\n          <div class="loading-dot" style="width: 6px; height: 6px; margin: 0 2px;"></div>\n        </div>\n        Calculating...\n      ');try{c.A.updateProgress(25,"Creating loan object...","calculate");const e=a.Ay.fromJSON(t);this.marketRatesComponent&&this.marketRatesComponent.updateCurrentRate(t.interestRate),c.A.updateProgress(50,"Processing calculation...","calculate"),c.A.updateStepStatus("calculate","completed"),c.A.updateStepStatus("amortization","active"),await new Promise(t=>setTimeout(t,300)),c.A.updateProgress(75,"Building amortization schedule...","amortization"),"function"===typeof this.onCalculate&&await this.onCalculate(e),c.A.updateProgress(100,"Finalizing results...","render"),c.A.updateStepStatus("amortization","completed"),c.A.updateStepStatus("render","active"),await new Promise(t=>setTimeout(t,500)),c.A.updateStepStatus("render","completed")}catch(n){c.A.updateStepStatus("calculate","error"),c.A.updateProgress(0,"Calculation failed","calculate"),setTimeout(()=>{c.A.hideProgressOverlay()},1500),this.showFormError(`Calculation error: ${n.message||"Unknown error occurred"}`)}finally{if(e){e.disabled=!1,e.classList.remove("loading");const t=e.getAttribute("data-original-text")||"Calculate";e.textContent=t}setTimeout(()=>{c.A.hideProgressOverlay()},800)}}showFormError(t){const e=this.container.querySelector(".form-error-message");e&&e.remove();const n=document.createElement("div");n.className="form-error-message",n.innerHTML=`\n      <div class="error-content">\n        <span class="error-icon">\u26a0\ufe0f</span>\n        <span class="error-text">${t}</span>\n        <button class="error-close" onclick="this.parentElement.parentElement.remove()">\xd7</button>\n      </div>\n    `;const a=this.container.querySelector("#loan-calculator-form");a&&(a.insertBefore(n,a.firstChild),setTimeout(()=>{n.parentNode&&n.remove()},8e3))}getFormData(){const t=this.container.querySelector("#loan-calculator-form");if(!t)return this.formData;const e={...this.formData};return t.querySelectorAll("input, select").forEach(t=>{const n=t.name||t.id;let{value:a}=t;"number"!==t.type&&"range"!==t.type||(a=parseFloat(a)),"date"===t.type&&(a=new Date(a)),e[n]=a}),this.formData=e,e}setFormData(t){this.formData={...this.formData,...t};const e=this.container.querySelector("#loan-calculator-form");e&&(Object.entries(t).forEach(([t,n])=>{const a=e.querySelector(`#${t}`),i=e.querySelector(`#${t}-slider`);if(a)if("date"===a.type&&n instanceof Date){const[t]=n.toISOString().split("T");a.value=t}else a.value=n;i&&(i.value=n)}),this.validate(),this.handleCalculate())}reset(){const t=this.formData.type||"mortgage",e=a.Ay.createDefault(t),n=this.formData.inflationRate||2.5;this.setFormData({...e.toJSON(),inflationRate:n})}updateLanguage(t){this.language!==t&&(this.language=t,this.locale=s.Vb(t),this.render(),this.bindEvents(),this.initMarketRates(),this.marketRatesComponent&&this.marketRatesComponent.updateLanguage(t))}updateCurrencyFormat(t){this.formData.currency!==t&&(this.formData.currency=t,this.render(),this.bindEvents())}initFloatingLabels(){if(!this.container)return;this.container.querySelectorAll(".form-input, .form-select").forEach(t=>{const e=t.nextElementSibling;e&&e.classList.contains("form-label")&&(this.updateFloatingLabel(t,e),t.addEventListener("focus",()=>{e.classList.add("floating")}),t.addEventListener("blur",()=>{this.updateFloatingLabel(t,e)}),t.addEventListener("input",()=>{this.updateFloatingLabel(t,e)}))})}updateFloatingLabel(t,e){const n=t.value&&""!==t.value.trim(),a="select"===t.tagName.toLowerCase(),i="date"===t.type;n||a||i?e.classList.add("floating"):e.classList.remove("floating")}}},287:function(t,e,n){n.d(e,{_2:function(){return i},fx:function(){return a}});const a={mortgage:{defaultTerm:360,defaultRate:4.5,minAmount:1e4,maxAmount:1e7,description:"Home Mortgage"},auto:{defaultTerm:60,defaultRate:5,minAmount:1e3,maxAmount:2e5,description:"Auto Loan"},personal:{defaultTerm:36,defaultRate:10,minAmount:1e3,maxAmount:5e4,description:"Personal Loan"},student:{defaultTerm:120,defaultRate:5.5,minAmount:1e3,maxAmount:5e5,description:"Student Loan"}},i={monthly:{paymentsPerYear:12,description:"Monthly"},"bi-weekly":{paymentsPerYear:26,description:"Bi-Weekly"},weekly:{paymentsPerYear:52,description:"Weekly"}};class s{constructor(t={}){this.id=t.id||this.generateUniqueId(),this.name=t.name||"Unnamed Calculation",this.type=this.validateLoanType(t.type||"mortgage");const e=a[this.type];this.principal=this.validateNumber(t.principal,e.minAmount,e.minAmount,e.maxAmount),this.interestRate=this.validateNumber(t.interestRate,e.defaultRate,0,30),this.term=this.validateNumber(t.term,e.defaultTerm,1,600),this.paymentFrequency=this.validatePaymentFrequency(t.paymentFrequency||"monthly"),this.downPayment=this.validateNumber(t.downPayment,0,0,this.principal),this.additionalPayment=this.validateNumber(t.additionalPayment,0,0),this.inflationRate=this.validateNumber(t.inflationRate,2.5,0,20),this.startDate=t.startDate instanceof Date?t.startDate:new Date,this.createdAt=t.createdAt instanceof Date?t.createdAt:new Date,this.updatedAt=t.updatedAt instanceof Date?t.updatedAt:new Date,this.validate()}totalLoanAmount(){return Math.max(0,this.principal-this.downPayment)}numberOfPayments(){const{paymentsPerYear:t}=i[this.paymentFrequency];return Math.ceil(this.term*t/12)}periodicInterestRate(){const{paymentsPerYear:t}=i[this.paymentFrequency];return this.interestRate/100/t}paymentAmount(){const t=this.totalLoanAmount(),e=this.periodicInterestRate(),n=this.numberOfPayments();if(t<=0)return 0;if(e<=0)return t/n;return t*e*(1+e)**n/((1+e)**n-1)}totalInterest(){return this.paymentAmount()*this.numberOfPayments()-this.totalLoanAmount()}payoffDate(){const t=new Date(this.startDate);switch(this.paymentFrequency){case"monthly":default:t.setMonth(t.getMonth()+this.term);break;case"bi-weekly":t.setDate(t.getDate()+Math.ceil(14*this.numberOfPayments()));break;case"weekly":t.setDate(t.getDate()+Math.ceil(7*this.numberOfPayments()))}return t}generateUniqueId(){return`loan_${Date.now()}_${Math.floor(1e6*Math.random())}`}validateLoanType(t){if(!a[t]){const e=Object.keys(a).join(", ");throw new Error(`Invalid loan type: ${t}. Valid types are: ${e}`)}return t}validatePaymentFrequency(t){if(!i[t]){const e=Object.keys(i).join(", ");throw new Error(`Invalid payment frequency: ${t}. Valid frequencies are: ${e}`)}return t}validateNumber(t,e,n=null,a=null){const i="string"===typeof t?parseFloat(t):t;return isNaN(i)||"number"!==typeof i?e:null!==n&&i<n?n:null!==a&&i>a?a:i}validate(){const t=[];return this.principal<=0&&t.push("Principal amount must be greater than zero"),this.interestRate<0?t.push("Interest rate cannot be negative"):this.interestRate>20&&t.push("Warning: Interest rate is unusually high"),this.term<=0&&t.push("Loan term must be greater than zero"),this.downPayment<0?t.push("Down payment cannot be negative"):this.downPayment>=this.principal&&t.push("Down payment cannot be greater than or equal to the principal"),this.additionalPayment<0?t.push("Additional payment cannot be negative"):this.additionalPayment>this.paymentAmount()&&this.paymentAmount()>0&&t.push("Additional payment is greater than the regular payment"),{isValid:0===t.length,warnings:t}}update(t={}){const e=new Date,n=new s({...this.toJSON(),...t,updatedAt:e});return n.id=this.id,n.createdAt=this.createdAt,n.updatedAt<=this.updatedAt&&(n.updatedAt=new Date(this.updatedAt.getTime()+1)),n}toJSON(){return{id:this.id,name:this.name,type:this.type,principal:this.principal,interestRate:this.interestRate,term:this.term,paymentFrequency:this.paymentFrequency,downPayment:this.downPayment,additionalPayment:this.additionalPayment,inflationRate:this.inflationRate,startDate:this.startDate.toISOString(),createdAt:this.createdAt.toISOString(),updatedAt:this.updatedAt.toISOString()}}calculateAdditionalPaymentImpact(t=this.additionalPayment){const e=this.update({additionalPayment:0}),a=this.update({additionalPayment:t});return Promise.resolve().then(n.bind(n,478)).then(({AmortizationSchedule:n})=>{const i=new n(e),s=new n(a),r=i.payments.length-s.payments.length,o=i.totalInterest(),l=s.totalInterest(),c=o-l;let d=0,m=0;switch(this.paymentFrequency){case"monthly":default:d=r;break;case"bi-weekly":d=Math.round(12*r/26);break;case"weekly":d=Math.round(12*r/52)}m=Math.floor(d/12),d%=12;return{paymentsSaved:r,interestSaved:c,timeSavedMonths:d,timeSavedYears:m,newPayoffDate:s.payoffDate(),originalTerm:this.term,newTerm:this.term-d-12*m,originalPayment:e.paymentAmount(),newPayment:a.paymentAmount()+t,originalTotalInterest:o,newTotalInterest:l}})}calculateRefinance(t){if(!t.interestRate&&0!==t.interestRate)throw new Error("New interest rate is required for refinance calculation");return Promise.resolve().then(n.bind(n,478)).then(({AmortizationSchedule:e})=>{const n=new e(this),a=n.payments.length>0?n.payments[0].balance:this.totalLoanAmount(),i={principal:t.principal||a,interestRate:t.interestRate,term:t.term||this.term,paymentFrequency:t.paymentFrequency||this.paymentFrequency,additionalPayment:t.additionalPayment||0,startDate:new Date,name:"Refinance Option"},r=new s(i),o=new e(r),l=n.payments.length,c=n.totalInterest(),d=o.payments.length,m=o.totalInterest(),u=this.paymentAmount(),h=r.paymentAmount(),p=u-h,y=t.closingCosts||0,f=c+a,g=m+i.principal+y,v=f-g,b=p>0?Math.ceil(y/p):1/0;return{currentLoan:{payment:u,remainingBalance:a,remainingPayments:l,remainingInterest:c,totalCost:f},newLoan:{payment:h,principal:i.principal,term:i.term,interestRate:i.interestRate,totalPayments:d,totalInterest:m,totalCost:g},comparison:{monthlySavings:p,lifetimeSavings:v,closingCosts:y,breakEvenMonths:b,isWorthwhile:v>0&&b<d},refinanceLoan:r}})}static fromJSON(t){if(!t)return new s;const e={...t,startDate:t.startDate?new Date(t.startDate):new Date,createdAt:t.createdAt?new Date(t.createdAt):new Date,updatedAt:t.updatedAt?new Date(t.updatedAt):new Date},n=new s(e);return t.id&&(n.id=t.id),n}static createDefault(t="mortgage"){if(!a[t])throw new Error(`Invalid loan type: ${t}`);const e=a[t];return new s({name:`New ${e.description}`,type:t,principal:2*e.minAmount,interestRate:e.defaultRate,term:e.defaultTerm,paymentFrequency:"monthly",downPayment:0,additionalPayment:0,startDate:new Date})}static calculateAffordableLoan(t){if(!t.desiredPayment||t.desiredPayment<=0)throw new Error("Desired payment must be greater than zero");const{desiredPayment:e}=t,n=t.interestRate||4.5,a=t.term||360,i=t.paymentFrequency||"monthly",r=t.downPayment||0,o=new s({principal:1e5,interestRate:n,term:a,paymentFrequency:i,downPayment:0}),l=o.periodicInterestRate(),c=o.numberOfPayments();let d=0;d=l<=0?e*c:e*((1+l)**c-1)/(l*(1+l)**c);const m=d+r,u=new s({principal:m,interestRate:n,term:a,paymentFrequency:i,downPayment:r,name:"Affordable Loan"});return{affordablePrincipal:d,totalPurchasePrice:m,downPayment:r,monthlyPayment:u.paymentAmount(),totalInterest:u.totalInterest(),loan:u}}}e.Ay=s},408:function(t,e,n){var a=n(663),i=n(719);e.A=class{constructor(t={}){this.container=t.container||document.getElementById("guidance-container"),this.language=t.language||"en",this.calculatorForm=t.calculatorForm,this.resultsDisplay=t.resultsDisplay,this.init()}init(){this.render(),this.bindEvents(),this.initializeTooltips()}render(){if(!this.container)return;const t=t=>(0,a.sC)(t,this.language),e=`\n      <div class="guidance-manager">\n        <button id="show-tutorial" class="guidance-button" data-tooltip="${t("tooltips.startTutorial")}" data-tooltip-position="bottom">\n          <span class="guidance-icon">\ud83d\udd0d</span>\n          <span class="guidance-text">${t("guidance.tutorial")}</span>\n        </button>\n        <button id="show-guidance" class="guidance-button" data-tooltip="${t("tooltips.showGuidance")}" data-tooltip-position="bottom">\n          <span class="guidance-icon">\ud83d\udca1</span>\n          <span class="guidance-text">${t("guidance.help")}</span>\n        </button>\n      </div>\n    `;this.container.innerHTML=e}bindEvents(){if(!this.container)return;const t=this.container.querySelector("#show-tutorial");t&&t.addEventListener("click",()=>this.startTutorial());const e=this.container.querySelector("#show-guidance");e&&e.addEventListener("click",()=>this.showGuidance()),(0,i.Dc)(this.container)}initializeTooltips(){(0,i.Dc)(document),this.calculatorForm&&this.calculatorForm.container&&this.addFormTooltips(),this.resultsDisplay&&this.resultsDisplay.container&&this.addResultsTooltips()}addFormTooltips(){const t=t=>(0,a.sC)(t,this.language),e=this.calculatorForm.container,n=(n,a,i="top")=>{const s=e.querySelector(`label[for="${n}"]`);if(s&&!s.querySelector(".info-icon")){const e=document.createElement("span");e.className="info-icon",e.textContent="?",e.setAttribute("data-tooltip",t(a)),e.setAttribute("data-tooltip-position",i),s.appendChild(e)}};n("loan-type","tooltips.loanType"),n("principal","tooltips.loanAmount"),n("interestRate","tooltips.interestRate"),n("term","tooltips.loanTerm"),n("downPayment","tooltips.downPayment"),n("additionalPayment","tooltips.additionalPayment"),n("paymentFrequency","tooltips.paymentFrequency"),n("startDate","tooltips.startDate"),(0,i.Dc)(e)}addResultsTooltips(){const t=t=>(0,a.sC)(t,this.language),e=this.resultsDisplay.container,n=(n,a,i="top")=>{const s=e.querySelector(n);if(s&&!s.querySelector(".info-icon")){const e=document.createElement("span");e.className="info-icon",e.textContent="?",e.setAttribute("data-tooltip",t(a)),e.setAttribute("data-tooltip-position",i),s.appendChild(e)}};n(".monthly-payment-label","tooltips.monthlyPayment"),n(".total-payment-label","tooltips.totalPayment"),n(".total-interest-label","tooltips.totalInterest"),n(".payoff-date-label","tooltips.payoffDate"),n(".interest-savings-label","tooltips.interestSavings"),(0,i.Dc)(e)}startTutorial(){const t=t=>(0,a.sC)(t,this.language),e=[{selector:"#loan-type",title:t("tutorial.loanTypeTitle"),content:t("tutorial.loanTypeContent"),position:"bottom"},{selector:"#principal",title:t("tutorial.loanAmountTitle"),content:t("tutorial.loanAmountContent"),position:"bottom"},{selector:"#interestRate",title:t("tutorial.interestRateTitle"),content:t("tutorial.interestRateContent"),position:"bottom"},{selector:"#term",title:t("tutorial.loanTermTitle"),content:t("tutorial.loanTermContent"),position:"bottom"},{selector:".term-presets",title:t("tutorial.termPresetsTitle"),content:t("tutorial.termPresetsContent"),position:"top"},{selector:"#additionalPayment",title:t("tutorial.additionalPaymentTitle"),content:t("tutorial.additionalPaymentContent"),position:"top"},{selector:"#calculate-button",title:t("tutorial.calculateTitle"),content:t("tutorial.calculateContent"),position:"top"},{selector:".results-summary",title:t("tutorial.resultsTitle"),content:t("tutorial.resultsContent"),position:"bottom"},{selector:"#amortization-table-container",title:t("tutorial.amortizationTitle"),content:t("tutorial.amortizationContent"),position:"top"},{selector:"#charts-container",title:t("tutorial.chartsTitle"),content:t("tutorial.chartsContent"),position:"top"}];(0,i.Xo)(e,()=>{this.showGuidancePanel(t("tutorial.completedTitle"),t("tutorial.completedContent"),"tutorial-completed")})}showGuidance(){const t=t=>(0,a.sC)(t,this.language),e=`\n      <div class="guidance-sections">\n        <div class="guidance-section">\n          <h4>${t("guidance.interpretingResultsTitle")}</h4>\n          <p>${t("guidance.interpretingResultsContent")}</p>\n        </div>\n        \n        <div class="guidance-section">\n          <h4>${t("guidance.affordabilityTitle")}</h4>\n          <p>${t("guidance.affordabilityContent")}</p>\n          <ul>\n            <li>${t("guidance.affordabilityTip1")}</li>\n            <li>${t("guidance.affordabilityTip2")}</li>\n            <li>${t("guidance.affordabilityTip3")}</li>\n          </ul>\n        </div>\n        \n        <div class="guidance-section">\n          <h4>${t("guidance.additionalPaymentsTitle")}</h4>\n          <p>${t("guidance.additionalPaymentsContent")}</p>\n        </div>\n        \n        <div class="guidance-section">\n          <h4>${t("guidance.refinanceTitle")}</h4>\n          <p>${t("guidance.refinanceContent")}</p>\n          <ul>\n            <li>${t("guidance.refinanceTip1")}</li>\n            <li>${t("guidance.refinanceTip2")}</li>\n            <li>${t("guidance.refinanceTip3")}</li>\n          </ul>\n        </div>\n      </div>\n    `;this.showGuidancePanel(t("guidance.title"),e,"loan-guidance")}showGuidancePanel(t,e,n){let a=document.getElementById("guidance-panels-container");a||(a=document.createElement("div"),a.id="guidance-panels-container",document.body.appendChild(a)),(0,i.ZB)(a,t,e,n)}updateLanguage(t){this.language!==t&&(this.language=t,this.render(),this.bindEvents(),this.initializeTooltips())}}},455:function(t,e,n){var a=n(364),i=n(741),s=n(149),r=n(799);e.A=class{constructor(t={}){this.container=t.container||(t.containerId?document.getElementById(t.containerId):null)||document.getElementById("results-display"),this.formatters={currency:a.vv,percentage:a.Ee,number:a.ZV,date:a.Yq,duration:a.a3,...t.formatters},this.onSave=t.onSave||null,this.init()}init(){this.container&&(this.container.innerHTML='\n      <div class="results-display">\n        <div class="results-header">\n          <h2>Loan Summary</h2>\n          <div class="results-actions">\n            <button class="btn-save" id="save-calculation">Save</button>\n            <button class="btn-export" id="export-calculation">Export</button>\n          </div>\n        </div>\n        <div class="results-content">\n          <div class="results-summary" id="results-summary"></div>\n          <div class="results-breakdown" id="results-breakdown"></div>\n          <div class="results-charts" id="charts-container"></div>\n        </div>\n      </div>\n    ',this.charts=new i.default({container:this.container.querySelector("#charts-container")}),this._initEventListeners())}_initEventListeners(){const t=this.container.querySelector("#save-calculation"),e=this.container.querySelector("#export-calculation");t&&t.addEventListener("click",()=>{"function"===typeof this.onSave&&this._currentLoan&&this._currentAmortizationSchedule&&this.onSave(this._currentLoan,this._currentAmortizationSchedule)}),e&&e.addEventListener("click",()=>{})}render(t){if(!this.container||!t||!t.loan)return;this.hideLoading();const{loan:e,amortizationSchedule:n,inflationAdjusted:a,comparisonScenarios:i}=t;this._currentLoan=e,this._currentAmortizationSchedule=n;const s={loanAmount:e.totalLoanAmount,paymentAmount:e.paymentAmount,totalInterest:n?n.totalInterest:e.totalInterest,totalPayment:n?n.totalPayment:e.paymentAmount*e.numberOfPayments,term:e.term,interestRate:e.interestRate,paymentFrequency:e.paymentFrequency,payoffDate:n?n.payoffDate:e.payoffDate,numberOfPayments:e.numberOfPayments,inflationRate:e.inflationRate,inflationAdjusted:a?{totalPayment:a.summary.totalInflationAdjustedPayment,totalInterest:a.summary.totalInflationAdjustedInterest,savingsFromInflation:a.summary.savingsFromInflation}:null},r={principal:e.totalLoanAmount,interest:s.totalInterest,total:s.totalPayment,interestRatio:s.totalInterest/s.totalPayment,principalRatio:e.totalLoanAmount/s.totalPayment};if(this.displaySummary(s),this.displayPaymentBreakdown(r),this.charts&&n&&(this.charts.clear(),this.charts.renderPrincipalVsInterestChart({loan:e,amortizationSchedule:n}),this.charts.renderPaymentBreakdownPieChart({loan:e,amortizationSchedule:n}),i&&i.length>0)){const t=[{id:"current",name:e.name||"Current Calculation",loan:e,amortizationSchedule:n}];i.forEach(e=>{"current"!==e.id&&t.push(e)}),t.length>=2&&this.charts.renderComparisonChart(t)}this.container.style.display="block",this._animateResultsReveal(s,r,n)}displaySummary(t){const e=this.container.querySelector("#results-summary");if(!e)return;const n=this.formatters.currency(t.loanAmount),a=this.formatters.currency(t.paymentAmount),i=this.formatters.currency(t.totalInterest),s=this.formatters.currency(t.totalPayment),r=this.formatters.duration(t.term),o=this.formatters.percentage(t.interestRate/100),l=this.formatters.date(t.payoffDate),c=t.numberOfPayments;let d="";if(t.inflationAdjusted&&t.inflationRate>0){const e={inflationRate:this.formatters.percentage(t.inflationRate/100),totalAdjustedPayment:this.formatters.currency(t.inflationAdjusted.totalPayment),savingsFromInflation:this.formatters.currency(t.inflationAdjusted.savingsFromInflation),savingsPercentage:this.formatters.percentage(t.inflationAdjusted.savingsFromInflation/t.totalPayment)};d=`\n        <div class="inflation-section">\n          <h3>Inflation-Adjusted Values (${e.inflationRate} inflation)</h3>\n          <div class="summary-grid">\n            <div class="summary-item">\n              <div class="summary-label">Inflation-Adjusted Total Payment</div>\n              <div class="summary-value">${e.totalAdjustedPayment}</div>\n            </div>\n            <div class="summary-item highlight">\n              <div class="summary-label">Real Savings Due to Inflation</div>\n              <div class="summary-value">${e.savingsFromInflation} (${e.savingsPercentage})</div>\n            </div>\n          </div>\n        </div>\n      `}const m=`\n      <div class="summary-grid">\n        <div class="summary-item">\n          <div class="summary-label">${{monthly:"Monthly","bi-weekly":"Bi-Weekly",weekly:"Weekly"}[t.paymentFrequency]||"Monthly"} Payment</div>\n          <div class="summary-value highlight">${a}</div>\n        </div>\n        <div class="summary-item">\n          <div class="summary-label">Loan Amount</div>\n          <div class="summary-value">${n}</div>\n        </div>\n        <div class="summary-item">\n          <div class="summary-label">Total Interest</div>\n          <div class="summary-value">${i}</div>\n        </div>\n        <div class="summary-item">\n          <div class="summary-label">Total Payment</div>\n          <div class="summary-value">${s}</div>\n        </div>\n        <div class="summary-item">\n          <div class="summary-label">Loan Term</div>\n          <div class="summary-value">${r}</div>\n        </div>\n        <div class="summary-item">\n          <div class="summary-label">Interest Rate</div>\n          <div class="summary-value">${o}</div>\n        </div>\n        <div class="summary-item">\n          <div class="summary-label">Number of Payments</div>\n          <div class="summary-value">${c}</div>\n        </div>\n        <div class="summary-item">\n          <div class="summary-label">Payoff Date</div>\n          <div class="summary-value">${l}</div>\n        </div>\n      </div>\n      ${d}\n    `;e.innerHTML=m,this._addInterestRateIndicator(t.interestRate)}_addInterestRateIndicator(t){const e=this.container.querySelector(".summary-item:nth-child(6) .summary-value");e&&(e.classList.remove("rate-low","rate-medium","rate-high"),t<4?(e.classList.add("rate-low"),e.setAttribute("title","This is a low interest rate")):t<7?(e.classList.add("rate-medium"),e.setAttribute("title","This is an average interest rate")):(e.classList.add("rate-high"),e.setAttribute("title","This is a high interest rate")))}displayPaymentBreakdown(t){const e=this.container.querySelector("#results-breakdown");if(!e)return;const n=this.formatters.currency(t.principal),a=this.formatters.currency(t.interest),i=this.formatters.currency(t.total),s=this.formatters.percentage(t.interestRatio),r=this.formatters.percentage(t.principalRatio),o=`\n      <h3>Payment Breakdown</h3>\n      <div class="breakdown-chart">\n        <div class="breakdown-bar">\n          <div class="breakdown-principal" style="width: ${Math.round(100*t.principalRatio)}%" title="Principal: ${r}">\n            <span class="breakdown-label">Principal</span>\n          </div>\n          <div class="breakdown-interest" style="width: ${Math.round(100*t.interestRatio)}%" title="Interest: ${s}">\n            <span class="breakdown-label">Interest</span>\n          </div>\n        </div>\n        <div class="breakdown-legend">\n          <div class="legend-item">\n            <div class="legend-color principal-color"></div>\n            <div class="legend-label">Principal: ${n} (${r})</div>\n          </div>\n          <div class="legend-item">\n            <div class="legend-color interest-color"></div>\n            <div class="legend-label">Interest: ${a} (${s})</div>\n          </div>\n        </div>\n      </div>\n      <div class="breakdown-total">\n        <span>Total Payment: ${i}</span>\n      </div>\n    `;e.innerHTML=o}showLoading(){if(!this.container)return;const t=this.container.querySelector("#results-summary");t&&(this.summarySkeleton=s.A.showSkeleton(t,"results",{items:8}));const e=this.container.querySelector("#results-breakdown");e&&(this.breakdownSkeleton=s.A.showSkeleton(e,"results",{items:3}));const n=this.container.querySelector("#charts-container");n&&(this.chartsSkeleton=s.A.showSkeleton(n,"chart",{title:!0,legend:!0})),this.container.style.display="block"}hideLoading(){this.summarySkeleton&&(s.A.hideSkeleton(this.summarySkeleton),this.summarySkeleton=null),this.breakdownSkeleton&&(s.A.hideSkeleton(this.breakdownSkeleton),this.breakdownSkeleton=null),this.chartsSkeleton&&(s.A.hideSkeleton(this.chartsSkeleton),this.chartsSkeleton=null)}clear(){if(!this.container)return;this.hideLoading();const t=this.container.querySelector("#results-summary"),e=this.container.querySelector("#results-breakdown");t&&(t.innerHTML=""),e&&(e.innerHTML=""),this.charts&&this.charts.clear(),this.container.style.display="none"}update(t){this.render(t)}updateResults(t,e,n=null){this.render({loan:t,amortizationSchedule:e,inflationAdjusted:n})}_animateResultsReveal(t,e,n){r.A.respectfulAnimate(()=>{this.container.querySelectorAll(".summary-item, .breakdown-chart, .chart-item, .results-header").forEach(t=>{t.style.opacity="0",t.style.transform="translateY(30px)"}),r.A.queueAnimation(()=>{const t=this.container.querySelector(".results-header");t&&(t.style.transition="all 0.5s cubic-bezier(0.4, 0, 0.2, 1)",t.style.opacity="1",t.style.transform="translateY(0)")},100),r.A.queueAnimation(()=>{r.A.animateResultsReveal(this.container.querySelector("#results-summary"),{stagger:!0,delay:0})},300),r.A.queueAnimation(()=>{const t=this.container.querySelector("#results-breakdown");if(t){const e=t.querySelector("h3");e&&(e.style.transition="all 0.4s cubic-bezier(0.4, 0, 0.2, 1)",e.style.opacity="1",e.style.transform="translateY(0)"),setTimeout(()=>{const e=t.querySelector(".breakdown-chart");e&&(e.style.transition="all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55)",e.style.opacity="1",e.style.transform="translateY(0) scale(1)",e.style.transformOrigin="center",this._animateProgressBars(e))},200),setTimeout(()=>{t.querySelectorAll(".legend-item").forEach((t,e)=>{setTimeout(()=>{t.style.transition="all 0.4s cubic-bezier(0.4, 0, 0.2, 1)",t.style.opacity="1",t.style.transform="translateX(0)"},100*e)})},400)}},800),this.charts&&n&&r.A.queueAnimation(()=>{r.A.animateChartReveal(this.container.querySelector("#charts-container"),{delay:0})},1400),r.A.queueAnimation(()=>{this._addMicroInteractions()},2e3)},()=>{this.container.querySelectorAll(".summary-item, .breakdown-chart, .chart-item, .results-header").forEach(t=>{t.style.opacity="1",t.style.transform="none"})})}_animateProgressBars(t){const e=t.querySelector(".breakdown-principal"),n=t.querySelector(".breakdown-interest");if(e){const t=e.style.width;e.style.width="0%",setTimeout(()=>{e.style.transition="width 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94)",e.style.width=t},100)}if(n){const t=n.style.width;n.style.width="0%",setTimeout(()=>{n.style.transition="width 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94)",n.style.width=t},300)}}_addMicroInteractions(){r.A.addHoverAnimations(this.container,".summary-item");this.container.querySelectorAll(".summary-item.highlight .summary-value").forEach(t=>{const e=t.textContent,n=e.match(/[\d,]+\.?\d*/);if(n){const a=parseFloat(n[0].replace(/,/g,""));isNaN(a)||r.A.animateNumber(t,0,a,{duration:1500,formatter:t=>{const n=t.toLocaleString();return e.replace(/[\d,]+\.?\d*/,n)}})}});this.container.querySelectorAll(".btn-save, .btn-export").forEach(t=>{t.addEventListener("click",e=>{r.A.createRippleEffect(t,e)})});this.container.querySelectorAll(".rate-low, .rate-medium, .rate-high").forEach(t=>{t.addEventListener("mouseenter",()=>{t.style.animation="numberPulse 0.6s cubic-bezier(0.4, 0, 0.2, 1)"}),t.addEventListener("animationend",()=>{t.style.animation=""})})}}},478:function(t,e,n){n.r(e),n.d(e,{AmortizationSchedule:function(){return a},Payment:function(){return i}});class a{constructor(t,e=!0){this.loan=t,this.payments=[],this.isGenerating=!1,this.generationProgress=0,e&&this.generateSchedule()}async generateScheduleAsync(t={}){const e=!1!==t.includeAdditionalPayments,n=t.onProgress||(()=>{}),a=t.timeout||5e3,s=t.batchSize||50;this.isGenerating=!0,this.generationProgress=0;try{this.payments=[];const t=this.loan.totalLoanAmount();if(!t||t<=0)throw new Error("Loan amount must be greater than zero.");if(t>1e8)throw new Error("Loan amount is too large. Please enter a reasonable loan amount.");const{interestRate:r}=this.loan;if(null==r||r<0||r>50)throw new Error("Interest rate must be between 0% and 50%.");const{term:o}=this.loan;if(!o||o<=0||o>600)throw new Error("Loan term must be between 1 and 600 months.");const l=this.loan.totalLoanAmount(),c=this.loan.periodicInterestRate(),d=this.loan.paymentAmount(),m=e?this.loan.additionalPayment:0,u=2*this.loan.numberOfPayments();if(isNaN(c)||c<0)throw new Error("Invalid interest rate calculation. Please check your interest rate.");if(isNaN(d)||d<=0)throw new Error("Invalid payment calculation. Please check your loan parameters.");if(d<=l*c)throw new Error("Monthly payment is too low to cover interest. Please increase the payment amount or reduce the loan amount.");let h=l,p=1;const y=new Date(this.loan.startDate),f=this.getPaymentInterval(),g=Date.now();for(;h>0&&p<=u;){if(Date.now()-g>a)throw new Error(`Calculation timeout after ${a}ms. The loan parameters may be invalid.`);const t=h*c,e=Math.min(d+m,h+t),r=e-t;h=Math.max(0,h-r);const o=new i(p,new Date(y),e,r,t,h);this.payments.push(o);const l=Math.min(this.loan.numberOfPayments(),u);this.generationProgress=Math.min(95,p/l*100),p%s===0&&(n(this.generationProgress,`Processing payment ${p}...`),await new Promise(t=>setTimeout(t,0))),p++,this.advanceDate(y,f),h>0&&h<.01&&(h=0)}if(p>u&&h>0)throw new Error("Maximum payment limit reached. Please check your loan parameters.");return this.isGenerating=!1,this.generationProgress=100,n(100,"Complete"),this.payments}catch(r){throw this.isGenerating=!1,this.generationProgress=0,r}}generateSchedule(t={}){const e=!1!==t.includeAdditionalPayments;if(this.payments=[],this.loan.totalLoanAmount()<=0)return this.payments;const n=this.loan.totalLoanAmount(),a=this.loan.periodicInterestRate(),s=this.loan.paymentAmount(),r=e?this.loan.additionalPayment:0;let o=n,l=1;const c=new Date(this.loan.startDate),d=this.getPaymentInterval();for(;o>0;){const t=o*a,e=Math.min(s+r,o+t),n=e-t;o=Math.max(0,o-n);const m=new i(l,new Date(c),e,n,t,o);if(this.payments.push(m),l++,this.advanceDate(c,d),l>2*this.loan.numberOfPayments())break;o>0&&o<.01&&(o=0)}return this.payments}getPaymentInterval(){switch(this.loan.paymentFrequency){case"weekly":return{days:7,type:"days"};case"bi-weekly":return{days:14,type:"days"};default:return{days:1,type:"months"}}}advanceDate(t,e){"days"===e.type?t.setDate(t.getDate()+e.days):"months"===e.type&&t.setMonth(t.getMonth()+e.days)}totalInterest(){return this.payments.reduce((t,e)=>t+e.interest,0)}totalPayment(){return this.payments.reduce((t,e)=>t+e.amount,0)}payoffDate(){return 0===this.payments.length?new Date(this.loan.startDate):new Date(this.payments[this.payments.length-1].date)}toJSON(){return{loanId:this.loan.id,payments:this.payments.map(t=>t.toJSON())}}static fromJSON(t,e){if(!t||!t.payments||!Array.isArray(t.payments))return new a(e);const n=new a(e);return n.payments=t.payments.map(t=>i.fromJSON(t)),n}}class i{constructor(t,e,n,a,i,s){this.number=t,this.date=e,this.amount=n,this.principal=a,this.interest=i,this.balance=s}month(){return this.date.getMonth()+1}year(){return this.date.getFullYear()}cumulativePrincipal(){return this.principal}cumulativeInterest(){return this.interest}toJSON(){return{number:this.number,date:this.date.toISOString(),amount:this.amount,principal:this.principal,interest:this.interest,balance:this.balance}}static fromJSON(t){return t?new i(t.number,new Date(t.date),t.amount,t.principal,t.interest,t.balance):null}}},741:function(t,e,n){n.r(e);var a=n(154),i=n(799);e.default=class{constructor(t={}){this.container=t.container||document.getElementById("charts-container"),this.colorScheme=t.colorScheme||{principal:"#007bff",interest:"#dc3545",balance:"#28a745",comparison:["#4e73df","#1cc88a","#36b9cc","#f6c23e"]},this.chartInstances={principalVsInterest:null,paymentBreakdown:null,comparison:null},this.theme="light",this.init()}init(){this.container&&(this._createChartContainers(),this._initEventListeners())}_createChartContainers(){if(!this.container.querySelector("#principal-interest-chart")){const t=document.createElement("div");t.id="principal-interest-chart",t.className="chart-container",t.innerHTML='\n        <div class="chart-title">Principal vs. Interest Over Time</div>\n        <canvas></canvas>\n        <div class="chart-legend"></div>\n      ',this.container.appendChild(t)}if(!this.container.querySelector("#payment-breakdown-chart")){const t=document.createElement("div");t.id="payment-breakdown-chart",t.className="chart-container",t.innerHTML='\n        <div class="chart-title">Payment Breakdown</div>\n        <canvas></canvas>\n        <div class="chart-legend"></div>\n      ',this.container.appendChild(t)}if(!this.container.querySelector("#comparison-chart")){const t=document.createElement("div");t.id="comparison-chart",t.className="chart-container",t.style.display="none",t.innerHTML='\n        <div class="chart-title">Loan Comparison</div>\n        <canvas></canvas>\n        <div class="chart-legend"></div>\n      ',this.container.appendChild(t)}if(!this.container.querySelector("#inflation-impact-chart")){const t=document.createElement("div");t.id="inflation-impact-chart",t.className="chart-container",t.style.display="none",t.innerHTML='\n        <div class="chart-title">Inflation Impact on Payments</div>\n        <canvas></canvas>\n        <div class="chart-legend"></div>\n      ',this.container.appendChild(t)}}_initEventListeners(){window.addEventListener("resize",()=>{this._resizeCharts()})}_resizeCharts(){Object.values(this.chartInstances).forEach(t=>{t&&t.resize()})}renderPrincipalVsInterestChart(t){if(!this.container||!t||!t.loan||!t.amortizationSchedule)return;const e=this.container.querySelector("#principal-interest-chart");if(!e)return;e.style.display="block";const n=e.querySelector("canvas");if(!n)return;const{loan:i,amortizationSchedule:s}=t,{payments:r}=s,o=Math.max(1,Math.floor(r.length/60)),l=r.filter((t,e)=>e%o===0||e===r.length-1),c=l.map(t=>t.number),d=l.map(t=>t.principal),m=l.map(t=>t.interest),u=l.map(t=>t.balance);this.chartInstances.principalVsInterest&&this.chartInstances.principalVsInterest.destroy(),this.chartInstances.principalVsInterest=new a.t1(n,{type:"line",data:{labels:c,datasets:[{label:"Principal",data:d,backgroundColor:this.colorScheme.principal,borderColor:this.colorScheme.principal,borderWidth:2,fill:!1,tension:.1},{label:"Interest",data:m,backgroundColor:this.colorScheme.interest,borderColor:this.colorScheme.interest,borderWidth:2,fill:!1,tension:.1},{label:"Remaining Balance",data:u,backgroundColor:this.colorScheme.balance,borderColor:this.colorScheme.balance,borderWidth:2,fill:!1,tension:.1}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{tooltip:{mode:"index",intersect:!1,callbacks:{label(t){let e=t.dataset.label||"";return e&&(e+=": "),null!==t.parsed.y&&(e+=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(t.parsed.y)),e}}},legend:{position:"bottom",labels:{boxWidth:12,padding:15}},title:{display:!1}},scales:{x:{title:{display:!0,text:"Payment Number"},ticks:{maxTicksLimit:10}},y:{title:{display:!0,text:"Amount ($)"},ticks:{callback(t){return new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",maximumFractionDigits:0}).format(t)}}}}}}),this._applyChartTheme(this.chartInstances.principalVsInterest),this._animateChartReveal(e,"principal-interest")}renderPaymentBreakdownPieChart(t){if(!this.container||!t||!t.loan||!t.amortizationSchedule)return;const e=this.container.querySelector("#payment-breakdown-chart");if(!e)return;e.style.display="block";const n=e.querySelector("canvas");if(!n)return;const{loan:i,amortizationSchedule:s}=t,r=i.totalLoanAmount,o=s.totalInterest;this.chartInstances.paymentBreakdown&&this.chartInstances.paymentBreakdown.destroy(),this.chartInstances.paymentBreakdown=new a.t1(n,{type:"pie",data:{labels:["Principal","Interest"],datasets:[{data:[r,o],backgroundColor:[this.colorScheme.principal,this.colorScheme.interest],borderColor:["dark"===this.theme?"#2c3034":"#ffffff","dark"===this.theme?"#2c3034":"#ffffff"],borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{tooltip:{callbacks:{label(t){const e=t.label||"",n=t.raw,a=t.dataset.data.reduce((t,e)=>t+e,0),i=Math.round(n/a*100);return`${e}: ${new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(n)} (${i}%)`}}},legend:{position:"bottom",labels:{boxWidth:12,padding:15}}}}}),this._applyChartTheme(this.chartInstances.paymentBreakdown),this._animateChartReveal(e,"payment-breakdown")}renderComparisonChart(t){if(!this.container||!t||t.length<2)return;const e=this.container.querySelector("#comparison-chart");if(!e)return;e.style.display="block";const n=e.querySelector("canvas");if(!n)return;const i=t.map((t,e)=>{const{loan:n,amortizationSchedule:a}=t,i=n.paymentAmount,s=a?a.totalInterest:n.totalInterest,r=a?a.totalPayment:n.paymentAmount*n.numberOfPayments;return{label:t.name||`Scenario ${e+1}`,data:[i,s,r],backgroundColor:this.colorScheme.comparison[e%this.colorScheme.comparison.length],borderColor:"dark"===this.theme?"#2c3034":"#ffffff",borderWidth:1}});this.chartInstances.comparison&&this.chartInstances.comparison.destroy(),this.chartInstances.comparison=new a.t1(n,{type:"bar",data:{labels:["Monthly Payment","Total Interest","Total Payment"],datasets:i},options:{responsive:!0,maintainAspectRatio:!1,plugins:{tooltip:{callbacks:{label(t){let e=t.dataset.label||"";return e&&(e+=": "),null!==t.parsed.y&&(e+=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(t.parsed.y)),e}}},legend:{position:"bottom",labels:{boxWidth:12,padding:15}}},scales:{x:{title:{display:!0,text:"Metrics"}},y:{title:{display:!0,text:"Amount ($)"},ticks:{callback(t){return new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",maximumFractionDigits:0}).format(t)}}}}}}),this._applyChartTheme(this.chartInstances.comparison)}updateChartTheme(t){"light"!==t&&"dark"!==t||(this.theme=t,Object.values(this.chartInstances).forEach(t=>{t&&this._applyChartTheme(t)}))}_applyChartTheme(t){if(!t)return;const e="dark"===this.theme,n=e?"#e9ecef":"#212529",a=e?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)";t.options.scales&&Object.values(t.options.scales).forEach(t=>{t.ticks&&(t.ticks.color=n),t.title&&(t.title.color=n),t.grid&&(t.grid.color=a)}),t.options.plugins&&t.options.plugins.legend&&(t.options.plugins.legend.labels.color=n),"pie"!==t.config.type&&"doughnut"!==t.config.type||t.data.datasets.forEach(t=>{t.borderColor=e?"#2c3034":"#ffffff"}),t.update()}renderInflationImpactChart(t){if(!this.container||!t||!t.loan||!t.amortizationSchedule||!t.inflationAdjusted)return;const e=this.container.querySelector("#inflation-impact-chart");if(!e)return;e.style.display="block";const n=e.querySelector("canvas");if(!n)return;const{loan:i,amortizationSchedule:s,inflationAdjusted:r}=t,{payments:o}=r,l=Math.max(1,Math.floor(o.length/60)),c=o.filter((t,e)=>e%l===0||e===o.length-1),d=c.map(t=>t.number),m=c.map(t=>t.originalAmount),u=c.map(t=>t.inflationAdjustedAmount);this.chartInstances.inflationImpact&&this.chartInstances.inflationImpact.destroy(),this.chartInstances.inflationImpact=new a.t1(n,{type:"line",data:{labels:d,datasets:[{label:"Nominal Payment",data:m,backgroundColor:this.colorScheme.principal,borderColor:this.colorScheme.principal,borderWidth:2,fill:!1,tension:.1},{label:"Inflation-Adjusted Payment",data:u,backgroundColor:this.colorScheme.balance,borderColor:this.colorScheme.balance,borderWidth:2,fill:!1,tension:.1}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{tooltip:{mode:"index",intersect:!1,callbacks:{label(t){let e=t.dataset.label||"";return e&&(e+=": "),null!==t.parsed.y&&(e+=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(t.parsed.y)),e}}},legend:{position:"bottom",labels:{boxWidth:12,padding:15}},title:{display:!0,text:`Inflation Rate: ${r.summary.inflationRate}%`}},scales:{x:{title:{display:!0,text:"Payment Number"},ticks:{maxTicksLimit:10}},y:{title:{display:!0,text:"Payment Amount ($)"},ticks:{callback(t){return new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",maximumFractionDigits:0}).format(t)}}}}}}),this._applyChartTheme(this.chartInstances.inflationImpact);const h=e.querySelector(".chart-legend");if(h){const t=r.summary.savingsFromInflation,e=r.summary.totalOriginalPayment,n=r.summary.totalInflationAdjustedPayment,a=t/e*100;h.innerHTML=`\n        <div class="inflation-summary">\n          <div class="summary-item">\n            <span class="label">Total Nominal Payments:</span>\n            <span class="value">${new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(e)}</span>\n          </div>\n          <div class="summary-item">\n            <span class="label">Total Inflation-Adjusted Payments:</span>\n            <span class="value">${new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(n)}</span>\n          </div>\n          <div class="summary-item highlight">\n            <span class="label">Real Savings Due to Inflation:</span>\n            <span class="value">${new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(t)} (${a.toFixed(1)}%)</span>\n          </div>\n        </div>\n      `}}clear(){Object.keys(this.chartInstances).forEach(t=>{this.chartInstances[t]&&(this.chartInstances[t].destroy(),this.chartInstances[t]=null)});["#principal-interest-chart","#payment-breakdown-chart","#comparison-chart","#inflation-impact-chart"].forEach(t=>{const e=this.container.querySelector(t);e&&(e.style.display="none")})}_animateChartReveal(t,e){t&&i.A.respectfulAnimate(()=>{t.style.opacity="0",t.style.transform="scale(0.9) translateY(20px)",t.style.transition="all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55)",setTimeout(()=>{t.style.opacity="1",t.style.transform="scale(1) translateY(0)"},100),setTimeout(()=>{this._addChartSpecificAnimations(t,e)},700)},()=>{t.style.opacity="1",t.style.transform="none"})}_addChartSpecificAnimations(t,e){switch(t.addEventListener("mouseenter",()=>{i.A.prefersReducedMotion()||(t.style.transform="scale(1.02)",t.style.boxShadow="0 8px 25px rgba(0, 0, 0, 0.15)",t.style.transition="all 0.3s cubic-bezier(0.4, 0, 0.2, 1)")}),t.addEventListener("mouseleave",()=>{i.A.prefersReducedMotion()||(t.style.transform="scale(1)",t.style.boxShadow="")}),e){case"principal-interest":this._animatePrincipalInterestChart(t);break;case"payment-breakdown":this._animatePaymentBreakdownChart(t)}}_animatePrincipalInterestChart(t){const e=t.querySelector("canvas");e&&this.chartInstances.principalVsInterest&&setInterval(()=>{!i.A.prefersReducedMotion()&&Math.random()<.1&&(e.style.filter="drop-shadow(0 0 8px rgba(59, 130, 246, 0.3))",setTimeout(()=>{e.style.filter=""},1e3))},5e3)}_animatePaymentBreakdownChart(t){const e=t.querySelector("canvas");e&&(t.addEventListener("mouseenter",()=>{i.A.prefersReducedMotion()||(e.style.transform="rotate(2deg)",e.style.transition="transform 0.3s cubic-bezier(0.4, 0, 0.2, 1)")}),t.addEventListener("mouseleave",()=>{i.A.prefersReducedMotion()||(e.style.transform="rotate(0deg)")}))}}},906:function(t,e,n){var a=n(663),i=n(935);e.A=class{constructor(t={}){this.container=t.container||document.getElementById("glossary-container"),this.language=t.language||"en",this.isOpen=!1,this.terms=this.getGlossaryTerms(),this.init()}init(){this.render(),this.bindEvents()}render(){if(!this.container)return;const t=t=>(0,a.sC)(t,this.language),e=`\n      <button id="glossary-toggle" class="glossary-toggle" aria-label="${t("glossary.openGlossary")}">\n        <span class="glossary-icon">\ud83d\udcda</span>\n        <span class="glossary-text">${t("glossary.title")}</span>\n      </button>\n    `,n=`\n      <div id="glossary-modal" class="glossary-modal" aria-hidden="true" role="dialog" aria-labelledby="glossary-title">\n        <div class="glossary-content">\n          <div class="glossary-header">\n            <h2 id="glossary-title">${t("glossary.title")}</h2>\n            <button id="glossary-close" class="glossary-close" aria-label="${t("glossary.close")}">\xd7</button>\n          </div>\n          <div class="glossary-search">\n            <input \n              type="text" \n              id="glossary-search-input" \n              class="glossary-search-input" \n              placeholder="${t("glossary.searchPlaceholder")}" \n              aria-label="${t("glossary.search")}"\n            >\n          </div>\n          <div class="glossary-terms" id="glossary-terms-list">\n            ${this.renderTermsList()}\n          </div>\n        </div>\n      </div>\n    `;this.container.innerHTML=e+n}renderTermsList(t=""){const e=t=>(0,a.sC)(t,this.language),n=t?this.terms.filter(e=>e.term.toLowerCase().includes(t.toLowerCase())||e.definition.toLowerCase().includes(t.toLowerCase())):this.terms;n.sort((t,e)=>t.term.localeCompare(e.term));const i=n.reduce((t,e)=>{const n=e.term.charAt(0).toUpperCase();return t[n]||(t[n]=[]),t[n].push(e),t},{});let s="";return 0===n.length?s=`<p class="glossary-no-results">${e("glossary.noResults")}</p>`:Object.keys(i).sort().forEach(t=>{s+=`\n          <div class="glossary-letter-group">\n            <h3 class="glossary-letter">${t}</h3>\n            <dl class="glossary-definitions">\n              ${i[t].map(t=>`\n                <div class="glossary-term">\n                  <dt>${t.term}</dt>\n                  <dd>${t.definition}</dd>\n                </div>\n              `).join("")}\n            </dl>\n          </div>\n        `}),s}bindEvents(){if(!this.container)return;const t=this.container.querySelector("#glossary-toggle");t&&t.addEventListener("click",()=>this.toggleGlossary());const e=this.container.querySelector("#glossary-close");e&&e.addEventListener("click",()=>this.closeGlossary());const n=this.container.querySelector("#glossary-search-input");n&&n.addEventListener("input",t=>this.handleSearch(t.target.value));const a=this.container.querySelector("#glossary-modal");a&&a.addEventListener("click",t=>{t.target===a&&this.closeGlossary()}),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.isOpen&&this.closeGlossary()});const s=this.container.querySelector(".glossary-content");s&&(0,i.pX)(s)}toggleGlossary(){this.isOpen?this.closeGlossary():this.openGlossary()}openGlossary(){const t=this.container.querySelector("#glossary-modal"),e=this.container.querySelector("#glossary-toggle");if(t&&e){t.classList.add("open"),t.setAttribute("aria-hidden","false"),e.setAttribute("aria-expanded","true");const n=this.container.querySelector("#glossary-search-input");n&&setTimeout(()=>n.focus(),100),this.isOpen=!0,(0,i.gL)((0,a.sC)("glossary.opened",this.language))}}closeGlossary(){const t=this.container.querySelector("#glossary-modal"),e=this.container.querySelector("#glossary-toggle");t&&e&&(t.classList.remove("open"),t.setAttribute("aria-hidden","true"),e.setAttribute("aria-expanded","false"),e.focus(),this.isOpen=!1,(0,i.gL)((0,a.sC)("glossary.closed",this.language)))}handleSearch(t){const e=this.container.querySelector("#glossary-terms-list");if(e){e.innerHTML=this.renderTermsList(t);const n=t=>(0,a.sC)(t,this.language),s=this.terms.filter(e=>e.term.toLowerCase().includes(t.toLowerCase())||e.definition.toLowerCase().includes(t.toLowerCase()));(0,i.gL)(n("glossary.searchResults").replace("{count}",s.length))}}updateLanguage(t){this.language!==t&&(this.language=t,this.terms=this.getGlossaryTerms(),this.render(),this.bindEvents())}getGlossaryTerms(){return[{term:"Amortization",definition:"The process of spreading out a loan into a series of fixed payments over time. Each payment is allocated between the principal and the interest."},{term:"Annual Percentage Rate (APR)",definition:"The yearly cost of a loan, including interest and fees, expressed as a percentage."},{term:"Balloon Payment",definition:"A large payment due at the end of a loan term, common in certain mortgage and auto loans."},{term:"Collateral",definition:"An asset that a borrower offers as a way for a lender to secure the loan. If the borrower stops making payments, the lender can seize the collateral."},{term:"Compound Interest",definition:"Interest calculated on both the initial principal and the accumulated interest from previous periods."},{term:"Down Payment",definition:"An initial upfront payment made when purchasing an expensive item such as a home or car using a loan."},{term:"Equity",definition:"The difference between the current market value of an asset and the amount owed on it."},{term:"Fixed-Rate Loan",definition:"A loan where the interest rate remains the same throughout the term of the loan."},{term:"Grace Period",definition:"A set period of time after a payment due date during which a late fee will not be charged."},{term:"Interest",definition:"The cost of borrowing money, typically expressed as an annual percentage rate."},{term:"Loan Term",definition:"The period of time during which a borrower makes monthly payments towards a loan."},{term:"Loan-to-Value (LTV) Ratio",definition:"The ratio of a loan amount to the value of the asset purchased, typically expressed as a percentage."},{term:"Mortgage",definition:"A loan used to purchase real estate, where the property serves as collateral."},{term:"Principal",definition:"The original amount of money borrowed in a loan, or the amount still owed, not including interest."},{term:"Refinancing",definition:"The process of replacing an existing loan with a new loan, typically with better terms."},{term:"Simple Interest",definition:"Interest calculated only on the principal amount, not on accumulated interest."},{term:"Underwriting",definition:"The process a lender uses to determine if the risk of offering a loan to a particular borrower under certain parameters is acceptable."},{term:"Variable-Rate Loan",definition:"A loan where the interest rate can change over time, based on an underlying benchmark or index."},{term:"Debt-to-Income Ratio",definition:"A personal finance measure that compares the amount of debt you have to your overall income."},{term:"Escrow",definition:"An account held by a third party on behalf of two other parties in a transaction."},{term:"Foreclosure",definition:"The legal process by which a lender takes control of a property, evicts the homeowner, and sells the home after the homeowner is unable to make full principal and interest payments on their mortgage."},{term:"Origination Fee",definition:"A fee charged by a lender for processing a new loan application, often expressed as a percentage of the loan amount."},{term:"Points",definition:"Fees paid to the lender at closing in exchange for a reduced interest rate. One point equals one percent of the loan amount."},{term:"Prepayment Penalty",definition:"A fee charged by some lenders when a borrower pays off a loan before the end of the loan term."},{term:"Private Mortgage Insurance (PMI)",definition:"Insurance that protects the lender if a borrower stops making payments on a loan. PMI is typically required for loans with a down payment of less than 20%."}]}}},962:function(t,e){e.A=class{constructor(t={}){this.container="string"===typeof t.container?document.getElementById(t.container):t.container||document.getElementById("settings-container"),this.onThemeChange=t.onThemeChange||(()=>{}),this.onLanguageChange=t.onLanguageChange||(()=>{}),this.onCurrencyChange=t.onCurrencyChange||(()=>{}),this.settings={theme:"light",language:"en",currency:"USD"},this.availableLanguages=[{code:"en",name:"English"},{code:"es",name:"Espa\xf1ol"}],this.availableCurrencies=[{code:"USD",symbol:"$",name:"US Dollar"},{code:"EUR",symbol:"\u20ac",name:"Euro"},{code:"GBP",symbol:"\xa3",name:"British Pound"},{code:"JPY",symbol:"\xa5",name:"Japanese Yen"},{code:"CAD",symbol:"C$",name:"Canadian Dollar"},{code:"AUD",symbol:"A$",name:"Australian Dollar"},{code:"MXN",symbol:"MX$",name:"Mexican Peso"}],this.storageKey="loan-calculator-settings",this.init()}init(){this.loadSettings(),this.applyTheme(this.settings.theme),this.render()}render(){if(!this.container)return;const t=document.createElement("div");t.className="settings-panel";const e=document.createElement("button");e.className="settings-toggle",e.setAttribute("aria-label","Open settings"),e.innerHTML='\n      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <circle cx="12" cy="12" r="3"></circle>\n        <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>\n      </svg>\n    ';const n=document.createElement("div");n.className="settings-dropdown",n.setAttribute("aria-hidden","true");const a=document.createElement("div");a.className="settings-section",a.appendChild(this.createThemeToggle()),n.appendChild(a);const i=document.createElement("div");i.className="settings-section",i.appendChild(this.createLanguageSelector()),n.appendChild(i);const s=document.createElement("div");s.className="settings-section",s.appendChild(this.createCurrencySelector()),n.appendChild(s),t.appendChild(e),t.appendChild(n),this.container.innerHTML="",this.container.appendChild(t),e.addEventListener("click",()=>{const t=n.classList.contains("active");n.classList.toggle("active"),n.setAttribute("aria-hidden",t?"true":"false"),e.setAttribute("aria-label",t?"Open settings":"Close settings")}),document.addEventListener("click",a=>{!t.contains(a.target)&&n.classList.contains("active")&&(n.classList.remove("active"),n.setAttribute("aria-hidden","true"),e.setAttribute("aria-label","Open settings"))})}createThemeToggle(){const t=document.createElement("div"),e=document.createElement("h3");e.textContent="Theme",t.appendChild(e);const n=document.createElement("div");n.className="theme-toggle";const a=document.createElement("span");a.textContent="Light";const i=document.createElement("label");i.className="toggle-switch";const s=document.createElement("input");s.type="checkbox",s.checked="dark"===this.settings.theme,s.setAttribute("aria-label","Toggle dark theme");const r=document.createElement("span");r.className="toggle-slider";const o=document.createElement("span");return o.textContent="Dark",i.appendChild(s),i.appendChild(r),n.appendChild(a),n.appendChild(i),n.appendChild(o),t.appendChild(n),s.addEventListener("change",()=>{const t=s.checked?"dark":"light";this.settings.theme=t,this.saveSettings(),this.applyTheme(t),this.onThemeChange(t)}),t}createLanguageSelector(){const t=document.createElement("div"),e=document.createElement("h3");e.textContent="Language",t.appendChild(e);const n=document.createElement("select");return n.className="settings-select",n.setAttribute("aria-label","Select language"),this.availableLanguages.forEach(t=>{const e=document.createElement("option");e.value=t.code,e.textContent=t.name,e.selected=this.settings.language===t.code,n.appendChild(e)}),t.appendChild(n),n.addEventListener("change",()=>{const t=n.value;this.settings.language=t,this.saveSettings(),this.onLanguageChange(t)}),t}createCurrencySelector(){const t=document.createElement("div"),e=document.createElement("h3");e.textContent="Currency",t.appendChild(e);const n=document.createElement("select");return n.className="settings-select",n.setAttribute("aria-label","Select currency"),this.availableCurrencies.forEach(t=>{const e=document.createElement("option");e.value=t.code,e.textContent=`${t.symbol} - ${t.name}`,e.selected=this.settings.currency===t.code,n.appendChild(e)}),t.appendChild(n),n.addEventListener("change",()=>{const t=n.value;this.settings.currency=t,this.saveSettings(),this.onCurrencyChange(t)}),t}applyTheme(t){"dark"===t?(document.body.classList.add("dark-theme"),localStorage.setItem("theme","dark")):(document.body.classList.remove("dark-theme"),localStorage.setItem("theme","light"));const e=new CustomEvent("themechange",{detail:{theme:t}});document.dispatchEvent(e)}loadSettings(){try{const t=localStorage.getItem(this.storageKey);if(t){const e=JSON.parse(t);this.settings={...this.settings,...e}}}catch(t){}}saveSettings(){try{localStorage.setItem(this.storageKey,JSON.stringify(this.settings))}catch(t){}}getSettings(){return{...this.settings}}updateSettings(t){this.settings={...this.settings,...t},t.theme&&this.applyTheme(t.theme),this.saveSettings()}}},970:function(t,e,n){var a=n(944);e.A=class{constructor(t={}){this.containerId=t.containerId||"saved-calculations-container",this.calculationManager=t.calculationManager||new a.A,this.onLoadCalculation=t.onLoadCalculation||(()=>{}),this.onCompareCalculations=t.onCompareCalculations||(()=>{}),this.container=null,this.calculationsList=null,this.comparisonView=null,this.isComparisonMode=!1,this.initialize()}initialize(){this.container=document.getElementById(this.containerId),this.container&&(this.render(),this.attachEventListeners())}render(){this.container.innerHTML="";this.container.innerHTML='\n      <div class="saved-calculations-manager">\n        <div class="saved-calculations-header">\n          <h2>Saved Calculations</h2>\n          <div class="saved-calculations-actions">\n            <button id="compare-button" class="btn btn-secondary" disabled>Compare Selected</button>\n            <button id="clear-selection-button" class="btn btn-outline-secondary" disabled>Clear Selection</button>\n          </div>\n        </div>\n        \n        <div class="saved-calculations-content">\n          <div id="saved-calculations-list" class="saved-calculations-list">\n            <p class="empty-state-message">No saved calculations yet. Save a calculation to see it here.</p>\n          </div>\n          \n          <div id="comparison-view" class="comparison-view" style="display: none;">\n            <div class="comparison-header">\n              <h3>Comparison</h3>\n              <button id="close-comparison-button" class="btn btn-outline-secondary">Close</button>\n            </div>\n            <div id="comparison-content" class="comparison-content"></div>\n          </div>\n        </div>\n      </div>\n    ',this.calculationsList=document.getElementById("saved-calculations-list"),this.comparisonView=document.getElementById("comparison-view"),this.comparisonContent=document.getElementById("comparison-content"),this.compareButton=document.getElementById("compare-button"),this.clearSelectionButton=document.getElementById("clear-selection-button"),this.loadCalculations()}attachEventListeners(){const t=document.getElementById("compare-button");t&&t.addEventListener("click",()=>this.showComparison());const e=document.getElementById("clear-selection-button");e&&e.addEventListener("click",()=>this.clearSelection());const n=document.getElementById("close-comparison-button");n&&n.addEventListener("click",()=>this.hideComparison())}loadCalculations(){const t=this.calculationManager.getAllCalculations();0!==t.length?(this.calculationsList.innerHTML="",t.forEach(t=>{const e=this.createCalculationCard(t);this.calculationsList.appendChild(e)}),this.updateButtonStates()):this.calculationsList.innerHTML='\n        <p class="empty-state-message">No saved calculations yet. Save a calculation to see it here.</p>\n      '}createCalculationCard(t){const{loan:e,savedAt:n,isSelected:a}=t,i=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}),s=document.createElement("div");s.className="calculation-card "+(a?"selected":""),s.dataset.id=e.id,s.innerHTML=`\n      <div class="calculation-card-header">\n        <h3 class="calculation-name">${e.name||"Unnamed Calculation"}</h3>\n        <div class="calculation-date">${t.formattedDate}</div>\n      </div>\n      \n      <div class="calculation-card-content">\n        <div class="calculation-details">\n          <div class="detail-row">\n            <span class="detail-label">Loan Amount:</span>\n            <span class="detail-value">${i.format(e.totalLoanAmount)}</span>\n          </div>\n          <div class="detail-row">\n            <span class="detail-label">Interest Rate:</span>\n            <span class="detail-value">${e.interestRate}%</span>\n          </div>\n          <div class="detail-row">\n            <span class="detail-label">Term:</span>\n            <span class="detail-value">${e.term} months</span>\n          </div>\n          <div class="detail-row">\n            <span class="detail-label">Payment:</span>\n            <span class="detail-value">${i.format(e.paymentAmount)}</span>\n          </div>\n        </div>\n      </div>\n      \n      <div class="calculation-card-actions">\n        <button class="btn btn-primary load-btn">Load</button>\n        <button class="btn btn-outline-danger delete-btn">Delete</button>\n        <div class="select-calculation">\n          <input type="checkbox" id="select-${e.id}" class="select-checkbox" ${a?"checked":""}>\n          <label for="select-${e.id}">Select for comparison</label>\n        </div>\n      </div>\n    `;s.querySelector(".load-btn").addEventListener("click",()=>this.loadCalculation(e.id));s.querySelector(".delete-btn").addEventListener("click",()=>this.deleteCalculation(e.id));return s.querySelector(".select-checkbox").addEventListener("change",t=>{t.target.checked?this.selectCalculation(e.id,s):this.deselectCalculation(e.id,s)}),s}loadCalculation(t){const e=this.calculationManager.getCalculation(t);e&&this.onLoadCalculation(e)}deleteCalculation(t){if(confirm("Are you sure you want to delete this calculation?")){this.calculationManager.deleteCalculation(t)&&this.loadCalculations()}}selectCalculation(t,e){if(!this.calculationManager.selectCalculation(t)){return e.querySelector(".select-checkbox").checked=!1,void alert(`You can only select up to ${this.calculationManager.maxComparisons} calculations for comparison.`)}e.classList.add("selected"),this.updateButtonStates()}deselectCalculation(t,e){this.calculationManager.deselectCalculation(t),e.classList.remove("selected"),this.updateButtonStates()}clearSelection(){this.calculationManager.clearSelection();this.calculationsList.querySelectorAll(".calculation-card.selected").forEach(t=>{t.classList.remove("selected");t.querySelector(".select-checkbox").checked=!1}),this.updateButtonStates()}updateButtonStates(){const t=this.calculationManager.selectedCalculations.length;this.compareButton.disabled=t<2,this.clearSelectionButton.disabled=0===t}showComparison(){const t=this.calculationManager.compareCalculations();t.success?(this.isComparisonMode=!0,this.calculationsList.style.display="none",this.comparisonView.style.display="block",this.renderComparison(t.comparison),this.onCompareCalculations(t.comparison)):alert(t.message)}hideComparison(){this.isComparisonMode=!1,this.calculationsList.style.display="block",this.comparisonView.style.display="none"}renderComparison(t){const{calculations:e,metrics:n,differences:a}=t,i=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"});let s=`\n      <table class="comparison-table">\n        <thead>\n          <tr>\n            <th>Metric</th>\n            ${n.map(t=>`<th>${t.name||"Unnamed"}</th>`).join("")}\n          </tr>\n        </thead>\n        <tbody>\n    `;if([{label:"Loan Amount",key:"loanAmount",format:t=>i.format(t)},{label:"Interest Rate",key:"interestRate",format:t=>`${t}%`},{label:"Term",key:"term",format:t=>`${t} months`},{label:"Payment Frequency",key:"paymentFrequency",format:t=>t},{label:"Payment Amount",key:"paymentAmount",format:t=>i.format(t)},{label:"Total Interest",key:"totalInterest",format:t=>i.format(t)},{label:"Total Payment",key:"totalPayment",format:t=>i.format(t)}].forEach(t=>{s+=`\n        <tr>\n          <td>${t.label}</td>\n          ${n.map(e=>`<td>${t.format(e[t.key])}</td>`).join("")}\n        </tr>\n      `}),n.length>1){s+=`\n        <tr class="comparison-separator">\n          <td colspan="${n.length+1}">Differences (compared to ${n[0].name||"first calculation"})</td>\n        </tr>\n      `;for(let t=1;t<n.length;t++){const e=a[n[t].id];e&&(s+=`\n            <tr>\n              <td>Monthly Payment Difference</td>\n              ${Array(t).fill("<td></td>").join("")}\n              <td class="${e.paymentDifference<0?"positive":"negative"}">${i.format(e.paymentDifference)}</td>\n              ${Array(n.length-t-1).fill("<td></td>").join("")}\n            </tr>\n            <tr>\n              <td>Total Interest Difference</td>\n              ${Array(t).fill("<td></td>").join("")}\n              <td class="${e.interestDifference<0?"positive":"negative"}">${i.format(e.interestDifference)}</td>\n              ${Array(n.length-t-1).fill("<td></td>").join("")}\n            </tr>\n            <tr>\n              <td>Total Payment Difference</td>\n              ${Array(t).fill("<td></td>").join("")}\n              <td class="${e.totalPaymentDifference<0?"positive":"negative"}">${i.format(e.totalPaymentDifference)}</td>\n              ${Array(n.length-t-1).fill("<td></td>").join("")}\n            </tr>\n          `)}}s+="\n        </tbody>\n      </table>\n    ",this.comparisonContent.innerHTML=s}refresh(){this.loadCalculations()}}}}]);
//# sourceMappingURL=main-30c3a00b.99b7d4e13640680d5932.js.map