{"version":3,"file":"js/npm.chart.js-98bfb331.5232ac80b4ef349dd595.js","mappings":"8LASA,MAAMA,EACF,WAAAC,GACIC,KAAKC,SAAW,KAChBD,KAAKE,QAAU,IAAIC,IACnBH,KAAKI,UAAW,EAChBJ,KAAKK,eAAYC,CACrB,CACH,OAAAC,CAAQC,EAAOC,EAAOC,EAAMC,GACrB,MAAMC,EAAYH,EAAMI,UAAUF,GAC5BG,EAAWL,EAAMM,SACvBH,EAAUI,QAASC,GAAKA,EAAG,CACnBT,QACAU,QAAST,EAAMS,QACfJ,WACAK,YAAaC,KAAKC,IAAIX,EAAOD,EAAMa,MAAOR,KAEtD,CACH,QAAAS,GACWvB,KAAKC,WAGTD,KAAKI,UAAW,EAChBJ,KAAKC,SAAW,EAAAuB,EAAiBC,KAAKC,OAAQ,KAC1C1B,KAAK2B,UACL3B,KAAKC,SAAW,KACZD,KAAKI,UACLJ,KAAKuB,aAGjB,CACH,OAAAI,CAAQjB,EAAOkB,KAAKC,OACb,IAAIC,EAAY,EAChB9B,KAAKE,QAAQc,QAAQ,CAACP,EAAOD,KACzB,IAAKC,EAAMsB,UAAYtB,EAAMuB,MAAMC,OAC/B,OAEJ,MAAMD,EAAQvB,EAAMuB,MACpB,IAEIE,EAFAC,EAAIH,EAAMC,OAAS,EACnBG,GAAO,EAEX,KAAMD,GAAK,IAAKA,EACZD,EAAOF,EAAMG,GACTD,EAAKG,SACDH,EAAKI,OAAS7B,EAAMM,WACpBN,EAAMM,SAAWmB,EAAKI,QAE1BJ,EAAKK,KAAK7B,GACV0B,GAAO,IAEPJ,EAAMG,GAAKH,EAAMA,EAAMC,OAAS,GAChCD,EAAMQ,OAGVJ,IACA5B,EAAM4B,OACNpC,KAAKO,QAAQC,EAAOC,EAAOC,EAAM,aAEhCsB,EAAMC,SACPxB,EAAMsB,SAAU,EAChB/B,KAAKO,QAAQC,EAAOC,EAAOC,EAAM,YACjCD,EAAMS,SAAU,GAEpBY,GAAaE,EAAMC,SAEvBjC,KAAKK,UAAYK,EACC,IAAdoB,IACA9B,KAAKI,UAAW,EAExB,CACH,SAAAqC,CAAUjC,GACH,MAAMkC,EAAS1C,KAAKE,QACpB,IAAIO,EAAQiC,EAAOC,IAAInC,GAavB,OAZKC,IACDA,EAAQ,CACJsB,SAAS,EACTb,SAAS,EACTc,MAAO,GACPnB,UAAW,CACP+B,SAAU,GACVC,SAAU,KAGlBH,EAAOI,IAAItC,EAAOC,IAEfA,CACX,CACH,MAAAsC,CAAOvC,EAAOwC,EAAOC,GACdjD,KAAKyC,UAAUjC,GAAOK,UAAUmC,GAAOE,KAAKD,EAChD,CACH,GAAAE,CAAI3C,EAAOwB,GACCA,GAAUA,EAAMC,QAGrBjC,KAAKyC,UAAUjC,GAAOwB,MAAMkB,QAAQlB,EACxC,CACH,GAAAoB,CAAI5C,GACG,OAAOR,KAAKyC,UAAUjC,GAAOwB,MAAMC,OAAS,CAChD,CACH,KAAAX,CAAMd,GACC,MAAMC,EAAQT,KAAKE,QAAQyC,IAAInC,GAC1BC,IAGLA,EAAMsB,SAAU,EAChBtB,EAAMa,MAAQM,KAAKC,MACnBpB,EAAMM,SAAWN,EAAMuB,MAAMqB,OAAO,CAACC,EAAKC,IAAMnC,KAAKoC,IAAIF,EAAKC,EAAIE,WAAY,GAC9EzD,KAAKuB,WACT,CACA,OAAAQ,CAAQvB,GACJ,IAAKR,KAAKI,SACN,OAAO,EAEX,MAAMK,EAAQT,KAAKE,QAAQyC,IAAInC,GAC/B,SAAKC,GAAUA,EAAMsB,SAAYtB,EAAMuB,MAAMC,OAIjD,CACH,IAAAyB,CAAKlD,GACE,MAAMC,EAAQT,KAAKE,QAAQyC,IAAInC,GAC/B,IAAKC,IAAUA,EAAMuB,MAAMC,OACvB,OAEJ,MAAMD,EAAQvB,EAAMuB,MACpB,IAAIG,EAAIH,EAAMC,OAAS,EACvB,KAAME,GAAK,IAAKA,EACZH,EAAMG,GAAGwB,SAEblD,EAAMuB,MAAQ,GACdhC,KAAKO,QAAQC,EAAOC,EAAOmB,KAAKC,MAAO,WAC3C,CACH,MAAA+B,CAAOpD,GACA,OAAOR,KAAKE,QAAQ2D,OAAOrD,EAC/B,EAEJ,IAAIsD,EAA2B,IAAIhE,EAEnC,MAAMiE,EAAc,cACdC,EAAgB,CAClB,OAAAC,CAASC,EAAMC,EAAIC,GACf,OAAOA,EAAS,GAAMD,EAAKD,CAC/B,EACH,KAAAG,CAAOH,EAAMC,EAAIC,GACV,MAAME,GAAK,IAAAC,GAAML,GAAQH,GACnBS,EAAKF,EAAGG,QAAS,IAAAF,GAAMJ,GAAMJ,GACnC,OAAOS,GAAMA,EAAGC,MAAQD,EAAGE,IAAIJ,EAAIF,GAAQO,YAAcR,CAC7D,EACA,MAAAS,CAAQV,EAAMC,EAAIC,GACd,OAAOF,GAAQC,EAAKD,GAAQE,CAChC,GAEJ,MAAMS,EACF,WAAA9E,CAAY+E,EAAKC,EAAQC,EAAMb,GAC3B,MAAMc,EAAeF,EAAOC,GAC5Bb,GAAK,OAAQ,CACTW,EAAIX,GACJA,EACAc,EACAH,EAAIZ,OAER,MAAMA,GAAO,OAAQ,CACjBY,EAAIZ,KACJe,EACAd,IAEJnE,KAAKqC,SAAU,EACfrC,KAAKkF,IAAMJ,EAAI7D,IAAM+C,EAAcc,EAAInE,aAAeuD,GACtDlE,KAAKmF,QAAU,EAAAC,EAAQN,EAAIO,SAAW,EAAAD,EAAQE,OAC9CtF,KAAKuF,OAASnE,KAAKoE,MAAM5D,KAAKC,OAASiD,EAAIW,OAAS,IACpDzF,KAAKyD,UAAYzD,KAAKsC,OAASlB,KAAKoE,MAAMV,EAAI/D,UAC9Cf,KAAK0F,QAAUZ,EAAIa,KACnB3F,KAAK4F,QAAUb,EACf/E,KAAK6F,MAAQb,EACbhF,KAAK8F,MAAQ5B,EACblE,KAAK+F,IAAM5B,EACXnE,KAAKgG,eAAY1F,CACrB,CACA,MAAA2F,GACI,OAAOjG,KAAKqC,OAChB,CACA,MAAA6D,CAAOpB,EAAKX,EAAIzD,GACZ,GAAIV,KAAKqC,QAAS,CACdrC,KAAKO,SAAQ,GACb,MAAM0E,EAAejF,KAAK4F,QAAQ5F,KAAK6F,OACjCM,EAAUzF,EAAOV,KAAKuF,OACtBa,EAASpG,KAAKyD,UAAY0C,EAChCnG,KAAKuF,OAAS7E,EACdV,KAAKyD,UAAYrC,KAAKoE,MAAMpE,KAAKoC,IAAI4C,EAAQtB,EAAI/D,WACjDf,KAAKsC,QAAU6D,EACfnG,KAAK0F,QAAUZ,EAAIa,KACnB3F,KAAK+F,KAAM,OAAQ,CACfjB,EAAIX,GACJA,EACAc,EACAH,EAAIZ,OAERlE,KAAK8F,OAAQ,OAAQ,CACjBhB,EAAIZ,KACJe,EACAd,GAER,CACJ,CACA,MAAAR,GACQ3D,KAAKqC,UACLrC,KAAKuC,KAAKX,KAAKC,OACf7B,KAAKqC,SAAU,EACfrC,KAAKO,SAAQ,GAErB,CACA,IAAAgC,CAAK7B,GACD,MAAMyF,EAAUzF,EAAOV,KAAKuF,OACtBxE,EAAWf,KAAKyD,UAChBuB,EAAOhF,KAAK6F,MACZ3B,EAAOlE,KAAK8F,MACZH,EAAO3F,KAAK0F,MACZvB,EAAKnE,KAAK+F,IAChB,IAAI3B,EAEJ,GADApE,KAAKqC,QAAU6B,IAASC,IAAOwB,GAAQQ,EAAUpF,IAC5Cf,KAAKqC,QAGN,OAFArC,KAAK4F,QAAQZ,GAAQb,OACrBnE,KAAKO,SAAQ,GAGb4F,EAAU,EACVnG,KAAK4F,QAAQZ,GAAQd,GAGzBE,EAAS+B,EAAUpF,EAAW,EAC9BqD,EAASuB,GAAQvB,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASpE,KAAKmF,QAAQ/D,KAAKC,IAAI,EAAGD,KAAKoC,IAAI,EAAGY,KAC9CpE,KAAK4F,QAAQZ,GAAQhF,KAAKkF,IAAIhB,EAAMC,EAAIC,GAC5C,CACA,IAAAiC,GACI,MAAMC,EAAWtG,KAAKgG,YAAchG,KAAKgG,UAAY,IACrD,OAAO,IAAIO,QAAQ,CAACC,EAAKC,KACrBH,EAASpD,KAAK,CACVsD,MACAC,SAGZ,CACA,OAAAlG,CAAQmG,GACJ,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAWtG,KAAKgG,WAAa,GACnC,IAAI,IAAI7D,EAAI,EAAGA,EAAImE,EAASrE,OAAQE,IAChCmE,EAASnE,GAAGwE,IAEpB,EAGJ,MAAMC,EACF,WAAA7G,CAAYS,EAAOqG,GACf7G,KAAK8G,OAAStG,EACdR,KAAK+G,YAAc,IAAI5G,IACvBH,KAAKgH,UAAUH,EACnB,CACA,SAAAG,CAAUH,GACN,KAAK,IAAA1E,GAAS0E,GACV,OAEJ,MAAMI,EAAmBC,OAAOC,KAAK,EAAAC,EAASC,WACxCC,EAAgBtH,KAAK+G,YAC3BG,OAAOK,oBAAoBV,GAAQ7F,QAASwG,IACxC,MAAM1C,EAAM+B,EAAOW,GACnB,KAAK,IAAArF,GAAS2C,GACV,OAEJ,MAAM4B,EAAW,CAAC,EAClB,IAAK,MAAMe,KAAUR,EACjBP,EAASe,GAAU3C,EAAI2C,KAE1B,OAAQ3C,EAAI4C,aAAe5C,EAAI4C,YAAc,CAC1CF,IACDxG,QAASgE,IACJA,IAASwC,GAAQF,EAAclE,IAAI4B,IACnCsC,EAAcxE,IAAIkC,EAAM0B,MAIxC,CACH,eAAAiB,CAAgB5C,EAAQ6C,GACjB,MAAMC,EAAaD,EAAOE,QACpBA,EAwEd,SAA8B/C,EAAQ8C,GAClC,IAAKA,EACD,OAEJ,IAAIC,EAAU/C,EAAO+C,QACrB,IAAKA,EAED,YADA/C,EAAO+C,QAAUD,GAGjBC,EAAQC,UACRhD,EAAO+C,QAAUA,EAAUZ,OAAOc,OAAO,CAAC,EAAGF,EAAS,CAClDC,SAAS,EACTE,YAAa,CAAC,KAGtB,OAAOH,CACX,CAxFwBI,CAAqBnD,EAAQ8C,GAC7C,IAAKC,EACD,MAAO,GAEX,MAAMK,EAAanI,KAAKoI,kBAAkBN,EAASD,GAOnD,OANIA,EAAWE,SAwDvB,SAAkBI,EAAYT,GAC1B,MAAM3F,EAAU,GACVoF,EAAOD,OAAOC,KAAKO,GACzB,IAAI,IAAIvF,EAAI,EAAGA,EAAIgF,EAAKlF,OAAQE,IAAI,CAChC,MAAMkG,EAAOF,EAAWhB,EAAKhF,IACzBkG,GAAQA,EAAKpC,UACblE,EAAQmB,KAAKmF,EAAKhC,OAE1B,CACA,OAAOE,QAAQ+B,IAAIvG,EACvB,CAjEYwG,CAASxD,EAAO+C,QAAQG,YAAaJ,GAAYW,KAAK,KAClDzD,EAAO+C,QAAUD,GAClB,QAGAM,CACX,CACH,iBAAAC,CAAkBrD,EAAQ6C,GACnB,MAAMN,EAAgBtH,KAAK+G,YACrBoB,EAAa,GACbpG,EAAUgD,EAAOkD,cAAgBlD,EAAOkD,YAAc,CAAC,GACvDQ,EAAQvB,OAAOC,KAAKS,GACpBlH,EAAOkB,KAAKC,MAClB,IAAIM,EACJ,IAAIA,EAAIsG,EAAMxG,OAAS,EAAGE,GAAK,IAAKA,EAAE,CAClC,MAAM6C,EAAOyD,EAAMtG,GACnB,GAAuB,MAAnB6C,EAAK0D,OAAO,GACZ,SAEJ,GAAa,YAAT1D,EAAoB,CACpBmD,EAAWjF,QAAQlD,KAAK2H,gBAAgB5C,EAAQ6C,IAChD,QACJ,CACA,MAAMe,EAAQf,EAAO5C,GACrB,IAAIqC,EAAYtF,EAAQiD,GACxB,MAAMF,EAAMwC,EAAc3E,IAAIqC,GAC9B,GAAIqC,EAAW,CACX,GAAIvC,GAAOuC,EAAUpB,SAAU,CAC3BoB,EAAUnB,OAAOpB,EAAK6D,EAAOjI,GAC7B,QACJ,CACI2G,EAAU1D,QAElB,CACKmB,GAAQA,EAAI/D,UAIjBgB,EAAQiD,GAAQqC,EAAY,IAAIxC,EAAUC,EAAKC,EAAQC,EAAM2D,GAC7DR,EAAWjF,KAAKmE,IAJZtC,EAAOC,GAAQ2D,CAKvB,CACA,OAAOR,CACX,CACH,MAAAjC,CAAOnB,EAAQ6C,GACR,GAA8B,IAA1B5H,KAAK+G,YAAY6B,KAEjB,YADA1B,OAAOc,OAAOjD,EAAQ6C,GAG1B,MAAMO,EAAanI,KAAKoI,kBAAkBrD,EAAQ6C,GAClD,OAAIO,EAAWlG,QACX6B,EAASX,IAAInD,KAAK8G,OAAQqB,IACnB,QAFX,CAIJ,EA+BJ,SAASU,EAAUC,EAAOC,GACtB,MAAMC,EAAOF,GAASA,EAAMhB,SAAW,CAAC,EAClCmB,EAAUD,EAAKC,QACf5H,OAAmBf,IAAb0I,EAAK3H,IAAoB0H,EAAkB,EACjDvF,OAAmBlD,IAAb0I,EAAKxF,IAAoBuF,EAAkB,EACvD,MAAO,CACHzH,MAAO2H,EAAUzF,EAAMnC,EACvB6H,IAAKD,EAAU5H,EAAMmC,EAE7B,CAgCA,SAAS2F,EAAwB3I,EAAO4I,GACpC,MAAMjC,EAAO,GACPkC,EAAW7I,EAAM8I,uBAAuBF,GAC9C,IAAIjH,EAAGoH,EACP,IAAIpH,EAAI,EAAGoH,EAAOF,EAASpH,OAAQE,EAAIoH,IAAQpH,EAC3CgF,EAAKjE,KAAKmG,EAASlH,GAAGqH,OAE1B,OAAOrC,CACX,CACA,SAASsC,EAAWC,EAAOf,EAAOgB,EAAS7B,EAAU,CAAC,GAClD,MAAMX,EAAOuC,EAAMvC,KACbyC,EAA8B,WAAjB9B,EAAQ+B,KAC3B,IAAI1H,EAAGoH,EAAMO,EAAcC,EAC3B,GAAc,OAAVpB,EACA,OAEJ,IAAIqB,GAAQ,EACZ,IAAI7H,EAAI,EAAGoH,EAAOpC,EAAKlF,OAAQE,EAAIoH,IAAQpH,EAAE,CAEzC,GADA2H,GAAgB3C,EAAKhF,GACjB2H,IAAiBH,EAAS,CAE1B,GADAK,GAAQ,EACJlC,EAAQQ,IACR,SAEJ,KACJ,CACAyB,EAAaL,EAAM9B,OAAOkC,IACtB,OAAeC,KAAgBH,GAAwB,IAAVjB,IAAe,IAAAsB,GAAKtB,MAAW,IAAAsB,GAAKF,MACjFpB,GAASoB,EAEjB,CACA,OAAKC,GAAUlC,EAAQQ,IAGhBK,EAFI,CAGf,CAiBA,SAASuB,EAAUpB,EAAOqB,GACtB,MAAMC,EAAUtB,GAASA,EAAMhB,QAAQsC,QACvC,OAAOA,QAAuB9J,IAAZ8J,QAAwC9J,IAAf6J,EAAKT,KACpD,CAWA,SAASW,EAAiBC,EAAQC,EAAUC,GACxC,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC5D,CACA,SAASE,EAAoBhB,EAAOiB,EAAQC,EAAUjK,GAClD,IAAK,MAAMwJ,KAAQQ,EAAOE,wBAAwBlK,GAAMsI,UAAU,CAC9D,MAAMN,EAAQe,EAAMS,EAAKX,OACzB,GAAIoB,GAAYjC,EAAQ,IAAMiC,GAAYjC,EAAQ,EAC9C,OAAOwB,EAAKX,KAEpB,CACA,OAAO,IACX,CACA,SAASsB,EAAaC,EAAYC,GAC9B,MAAM,MAAExK,EAAQyK,YAAad,GAAUY,EACjCT,EAAS9J,EAAM0K,UAAY1K,EAAM0K,QAAU,CAAC,IAC5C,OAAEC,EAAO,OAAER,EAASnB,MAAOM,GAAkBK,EAC7CiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf7D,EA7BV,SAAqB+D,EAAYC,EAAYrB,GACzC,MAAO,GAAGoB,EAAWE,MAAMD,EAAWC,MAAMtB,EAAKT,OAASS,EAAKxJ,MACnE,CA2BgB+K,CAAYP,EAAQR,EAAQR,GAClCZ,EAAOyB,EAAO/I,OACpB,IAAIyH,EACJ,IAAI,IAAIvH,EAAI,EAAGA,EAAIoH,IAAQpH,EAAE,CACzB,MAAMD,EAAO8I,EAAO7I,IACZ,CAACiJ,GAAQ5B,EAAQ,CAAC8B,GAAQ3C,GAAWzG,EAE7CwH,GADmBxH,EAAKgJ,UAAYhJ,EAAKgJ,QAAU,CAAC,IACjCI,GAASjB,EAAiBC,EAAQ9C,EAAKgC,GAC1DE,EAAMI,GAAgBnB,EACtBe,EAAMiC,KAAOjB,EAAoBhB,EAAOiB,GAAQ,EAAMR,EAAKxJ,MAC3D+I,EAAMkC,QAAUlB,EAAoBhB,EAAOiB,GAAQ,EAAOR,EAAKxJ,OAC1C+I,EAAMmC,gBAAkBnC,EAAMmC,cAAgB,CAAC,IACvD/B,GAAgBnB,CACjC,CACJ,CACA,SAASmD,EAAgBtL,EAAO6K,GAC5B,MAAMU,EAASvL,EAAMuL,OACrB,OAAO7E,OAAOC,KAAK4E,GAAQC,OAAQxE,GAAMuE,EAAOvE,GAAK6D,OAASA,GAAMY,OACxE,CAuBA,SAASC,EAAY/B,EAAMnI,GACvB,MAAM8H,EAAeK,EAAKY,WAAWvB,MAC/B6B,EAAOlB,EAAKQ,QAAUR,EAAKQ,OAAOU,KACxC,GAAKA,EAAL,CAGArJ,EAAQA,GAASmI,EAAKgC,QACtB,IAAK,MAAMnB,KAAUhJ,EAAM,CACvB,MAAMsI,EAASU,EAAOE,QACtB,IAAKZ,QAA2BhK,IAAjBgK,EAAOe,SAAsD/K,IAA/BgK,EAAOe,GAAMvB,GACtD,cAEGQ,EAAOe,GAAMvB,QACexJ,IAA/BgK,EAAOe,GAAMQ,oBAA4EvL,IAA7CgK,EAAOe,GAAMQ,cAAc/B,WAChEQ,EAAOe,GAAMQ,cAAc/B,EAE1C,CAXA,CAYJ,CACA,MAAMsC,EAAsBvC,GAAgB,UAATA,GAA6B,SAATA,EACjDwC,EAAmB,CAACC,EAAQC,IAASA,EAASD,EAASpF,OAAOc,OAAO,CAAC,EAAGsE,GAK/E,MAAME,EACLC,gBAAkB,CAAC,EACnBA,0BAA4B,KAC5BA,uBAAyB,KACzB,WAAA1M,CAAYS,EAAOsJ,GACZ9J,KAAKQ,MAAQA,EACbR,KAAK0M,KAAOlM,EAAMmM,IAClB3M,KAAKwJ,MAAQM,EACb9J,KAAK4M,gBAAkB,CAAC,EACxB5M,KAAKiL,YAAcjL,KAAK6M,UACxB7M,KAAK8M,MAAQ9M,KAAKiL,YAAYtK,KAC9BX,KAAK8H,aAAUxH,EACdN,KAAK+M,UAAW,EACjB/M,KAAKgN,WAAQ1M,EACbN,KAAKiN,iBAAc3M,EACnBN,KAAKkN,oBAAiB5M,EACtBN,KAAKmN,gBAAa7M,EAClBN,KAAKoN,gBAAa9M,EAClBN,KAAKqN,qBAAsB,EAC3BrN,KAAKsN,oBAAqB,EAC1BtN,KAAKuN,cAAWjN,EAChBN,KAAKwN,UAAY,GACjBxN,KAAKyN,8BAAgCA,mBACrCzN,KAAK0N,2BAA6BA,gBAClC1N,KAAK2N,YACT,CACA,UAAAA,GACI,MAAMxD,EAAOnK,KAAKiL,YAClBjL,KAAKgH,YACLhH,KAAK4N,aACLzD,EAAK0D,SAAW3D,EAAUC,EAAKQ,OAAQR,GACvCnK,KAAK8N,cACD9N,KAAK8H,QAAQiG,MAAS/N,KAAKQ,MAAMwN,gBAAgB,SAGzD,CACA,WAAAC,CAAYnE,GACJ9J,KAAKwJ,QAAUM,GACfoC,EAAYlM,KAAKiL,aAErBjL,KAAKwJ,MAAQM,CACjB,CACA,UAAA8D,GACI,MAAMpN,EAAQR,KAAKQ,MACb2J,EAAOnK,KAAKiL,YACZiD,EAAUlO,KAAKmO,aACfC,EAAW,CAAC/C,EAAMgD,EAAGC,EAAG9M,IAAa,MAAT6J,EAAegD,EAAa,MAAThD,EAAe7J,EAAI8M,EAClEC,EAAMpE,EAAKqE,SAAU,IAAAC,GAAeP,EAAQM,QAAS1C,EAAgBtL,EAAO,MAC5EkO,EAAMvE,EAAKwE,SAAU,IAAAF,GAAeP,EAAQS,QAAS7C,EAAgBtL,EAAO,MAC5EoO,EAAMzE,EAAK0E,SAAU,IAAAJ,GAAeP,EAAQW,QAAS/C,EAAgBtL,EAAO,MAC5EsO,EAAY3E,EAAK2E,UACjBC,EAAM5E,EAAK6E,QAAUZ,EAASU,EAAWP,EAAKG,EAAKE,GACnDK,EAAM9E,EAAK+E,QAAUd,EAASU,EAAWJ,EAAKH,EAAKK,GACzDzE,EAAKgF,OAASnP,KAAKoP,cAAcb,GACjCpE,EAAKkF,OAASrP,KAAKoP,cAAcV,GACjCvE,EAAKmF,OAAStP,KAAKoP,cAAcR,GACjCzE,EAAKgB,OAASnL,KAAKoP,cAAcL,GACjC5E,EAAKQ,OAAS3K,KAAKoP,cAAcH,EACrC,CACA,UAAAd,GACI,OAAOnO,KAAKQ,MAAM+O,KAAKC,SAASxP,KAAKwJ,MACzC,CACA,OAAAqD,GACI,OAAO7M,KAAKQ,MAAMiP,eAAezP,KAAKwJ,MAC1C,CACH,aAAA4F,CAAcM,GACP,OAAO1P,KAAKQ,MAAMuL,OAAO2D,EAC7B,CACH,cAAAC,CAAe7G,GACR,MAAMqB,EAAOnK,KAAKiL,YAClB,OAAOnC,IAAUqB,EAAKgB,OAAShB,EAAKQ,OAASR,EAAKgB,MACtD,CACA,KAAAyE,GACI5P,KAAK2B,QAAQ,QACjB,CACH,QAAAkO,GACO,MAAM1F,EAAOnK,KAAKiL,YACdjL,KAAKgN,QACL,IAAA8C,GAAoB9P,KAAKgN,MAAOhN,MAEhCmK,EAAK0D,UACL3B,EAAY/B,EAEpB,CACH,UAAA4F,GACO,MAAM7B,EAAUlO,KAAKmO,aACfoB,EAAOrB,EAAQqB,OAASrB,EAAQqB,KAAO,IACvCvC,EAAQhN,KAAKgN,MACnB,IAAI,IAAA7K,GAASoN,GAAO,CAChB,MAAMpF,EAAOnK,KAAKiL,YAClBjL,KAAKgN,MA5MjB,SAAkCuC,EAAMpF,GACpC,MAAM,OAAEgB,EAAO,OAAER,GAAYR,EACvB6F,EAA2B,MAAhB7E,EAAOE,KAAe,IAAM,IACvC4E,EAA2B,MAAhBtF,EAAOU,KAAe,IAAM,IACvClE,EAAOD,OAAOC,KAAKoI,GACnBW,EAAQ,IAAIC,MAAMhJ,EAAKlF,QAC7B,IAAIE,EAAGoH,EAAM/B,EACb,IAAIrF,EAAI,EAAGoH,EAAOpC,EAAKlF,OAAQE,EAAIoH,IAAQpH,EACvCqF,EAAML,EAAKhF,GACX+N,EAAM/N,GAAK,CACP,CAAC6N,GAAWxI,EACZ,CAACyI,GAAWV,EAAK/H,IAGzB,OAAO0I,CACX,CA6LyBE,CAAyBb,EAAMpF,EAChD,MAAO,GAAI6C,IAAUuC,EAAM,CACvB,GAAIvC,EAAO,EACP,IAAA8C,GAAoB9C,EAAOhN,MAC3B,MAAMmK,EAAOnK,KAAKiL,YAClBiB,EAAY/B,GACZA,EAAKgC,QAAU,EACnB,CACIoD,GAAQrI,OAAOmJ,aAAad,KAC5B,IAAAe,GAAkBf,EAAMvP,MAE5BA,KAAKwN,UAAY,GACjBxN,KAAKgN,MAAQuC,CACjB,CACJ,CACA,WAAAzB,GACI,MAAM3D,EAAOnK,KAAKiL,YAClBjL,KAAK+P,aACD/P,KAAKyN,qBACLtD,EAAK+D,QAAU,IAAIlO,KAAKyN,mBAEhC,CACA,qBAAA8C,CAAsBC,GAClB,MAAMrG,EAAOnK,KAAKiL,YACZiD,EAAUlO,KAAKmO,aACrB,IAAIsC,GAAe,EACnBzQ,KAAK+P,aACL,MAAMW,EAAavG,EAAK0D,SACxB1D,EAAK0D,SAAW3D,EAAUC,EAAKQ,OAAQR,GACnCA,EAAKT,QAAUwE,EAAQxE,QACvB+G,GAAe,EACfvE,EAAY/B,GACZA,EAAKT,MAAQwE,EAAQxE,OAEzB1J,KAAK2Q,gBAAgBH,IACjBC,GAAgBC,IAAevG,EAAK0D,YACpC/C,EAAa9K,KAAMmK,EAAKgC,SACxBhC,EAAK0D,SAAW3D,EAAUC,EAAKQ,OAAQR,GAE/C,CACH,SAAAnD,GACO,MAAMH,EAAS7G,KAAKQ,MAAMqG,OACpB+J,EAAY/J,EAAOgK,iBAAiB7Q,KAAK8M,OACzCgE,EAASjK,EAAOkK,gBAAgB/Q,KAAKmO,aAAcyC,GAAW,GACpE5Q,KAAK8H,QAAUjB,EAAOmK,eAAeF,EAAQ9Q,KAAKiR,cAClDjR,KAAK+M,SAAW/M,KAAK8H,QAAQoJ,QAC7BlR,KAAK4M,gBAAkB,CAAC,CAC5B,CACH,KAAAuE,CAAM7P,EAAO8P,GACN,MAAQnG,YAAad,EAAO6C,MAAOuC,GAAUvP,MACvC,OAAEmL,EAAO,SAAE0C,GAAc1D,EACzBiB,EAAQD,EAAOE,KACrB,IAEIlJ,EAAGoB,EAAKyH,EAFRqG,EAAmB,IAAV/P,GAAe8P,IAAU7B,EAAKtN,QAAgBkI,EAAKmH,QAC5DC,EAAOjQ,EAAQ,GAAK6I,EAAKgC,QAAQ7K,EAAQ,GAE7C,IAAsB,IAAlBtB,KAAK+M,SACL5C,EAAKgC,QAAUoD,EACfpF,EAAKmH,SAAU,EACftG,EAASuE,MACN,CAECvE,GADA,OAAQuE,EAAKjO,IACJtB,KAAKwR,eAAerH,EAAMoF,EAAMjO,EAAO8P,IACzC,IAAAjP,GAASoN,EAAKjO,IACZtB,KAAKyR,gBAAgBtH,EAAMoF,EAAMjO,EAAO8P,GAExCpR,KAAK0R,mBAAmBvH,EAAMoF,EAAMjO,EAAO8P,GAExD,MAAMO,EAA6B,IAAmB,OAAfpO,EAAI6H,IAAmBmG,GAAQhO,EAAI6H,GAASmG,EAAKnG,GACxF,IAAIjJ,EAAI,EAAGA,EAAIiP,IAASjP,EACpBgI,EAAKgC,QAAQhK,EAAIb,GAASiC,EAAMyH,EAAO7I,GACnCkP,IACIM,MACAN,GAAS,GAEbE,EAAOhO,GAGf4G,EAAKmH,QAAUD,CACnB,CACIxD,GACA/C,EAAa9K,KAAMgL,EAE3B,CACH,kBAAA0G,CAAmBvH,EAAMoF,EAAMjO,EAAO8P,GAC/B,MAAM,OAAEjG,EAAO,OAAER,GAAYR,EACvBiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACfuG,EAASzG,EAAO0G,YAChBC,EAAc3G,IAAWR,EACzBK,EAAS,IAAImF,MAAMiB,GACzB,IAAIjP,EAAGoH,EAAMC,EACb,IAAIrH,EAAI,EAAGoH,EAAO6H,EAAOjP,EAAIoH,IAAQpH,EACjCqH,EAAQrH,EAAIb,EACZ0J,EAAO7I,GAAK,CACR,CAACiJ,GAAQ0G,GAAe3G,EAAOgG,MAAMS,EAAOpI,GAAQA,GACpD,CAAC8B,GAAQX,EAAOwG,MAAM5B,EAAK/F,GAAQA,IAG3C,OAAOwB,CACX,CACH,cAAAwG,CAAerH,EAAMoF,EAAMjO,EAAO8P,GAC3B,MAAM,OAAEjC,EAAO,OAAEE,GAAYlF,EACvBa,EAAS,IAAImF,MAAMiB,GACzB,IAAIjP,EAAGoH,EAAMC,EAAOtH,EACpB,IAAIC,EAAI,EAAGoH,EAAO6H,EAAOjP,EAAIoH,IAAQpH,EACjCqH,EAAQrH,EAAIb,EACZY,EAAOqN,EAAK/F,GACZwB,EAAO7I,GAAK,CACRkM,EAAGc,EAAOgC,MAAMjP,EAAK,GAAIsH,GACzB8E,EAAGe,EAAO8B,MAAMjP,EAAK,GAAIsH,IAGjC,OAAOwB,CACX,CACH,eAAAyG,CAAgBtH,EAAMoF,EAAMjO,EAAO8P,GAC5B,MAAM,OAAEjC,EAAO,OAAEE,GAAYlF,GACvB,SAAE4H,EAAU,IAAI,SAAEC,EAAU,KAAShS,KAAK+M,SAC1C/B,EAAS,IAAImF,MAAMiB,GACzB,IAAIjP,EAAGoH,EAAMC,EAAOtH,EACpB,IAAIC,EAAI,EAAGoH,EAAO6H,EAAOjP,EAAIoH,IAAQpH,EACjCqH,EAAQrH,EAAIb,EACZY,EAAOqN,EAAK/F,GACZwB,EAAO7I,GAAK,CACRkM,EAAGc,EAAOgC,OAAM,OAAiBjP,EAAM6P,GAAWvI,GAClD8E,EAAGe,EAAO8B,OAAM,OAAiBjP,EAAM8P,GAAWxI,IAG1D,OAAOwB,CACX,CACH,SAAAiH,CAAUzI,GACH,OAAOxJ,KAAKiL,YAAYkB,QAAQ3C,EACpC,CACH,cAAA0I,CAAe1I,GACR,OAAOxJ,KAAKiL,YAAYsE,KAAK/F,EACjC,CACH,UAAAC,CAAWX,EAAOkC,EAAQnB,GACnB,MAAMrJ,EAAQR,KAAKQ,MACb2J,EAAOnK,KAAKiL,YACZtC,EAAQqC,EAAOlC,EAAMuC,MAK3B,OAAO5B,EAJO,CACVtC,KAAMgC,EAAwB3I,GAAO,GACrCoH,OAAQoD,EAAOE,QAAQpC,EAAMuC,MAAMQ,eAEdlD,EAAOwB,EAAKX,MAAO,CACxCK,QAER,CACH,qBAAAsI,CAAsBC,EAAOtJ,EAAOkC,EAAQtB,GACrC,MAAM2I,EAAcrH,EAAOlC,EAAMuC,MACjC,IAAI1C,EAAwB,OAAhB0J,EAAuBC,IAAMD,EACzC,MAAMzK,EAAS8B,GAASsB,EAAOE,QAAQpC,EAAMuC,MACzC3B,GAAS9B,IACT8B,EAAM9B,OAASA,EACfe,EAAQc,EAAWC,EAAO2I,EAAarS,KAAKiL,YAAYzB,QAE5D4I,EAAM/Q,IAAMD,KAAKC,IAAI+Q,EAAM/Q,IAAKsH,GAChCyJ,EAAM5O,IAAMpC,KAAKoC,IAAI4O,EAAM5O,IAAKmF,EACpC,CACH,SAAA4J,CAAUzJ,EAAO0J,GACV,MAAMrI,EAAOnK,KAAKiL,YACZkB,EAAUhC,EAAKgC,QACfkF,EAASlH,EAAKmH,SAAWxI,IAAUqB,EAAKgB,OACxC5B,EAAO4C,EAAQlK,OACfwQ,EAAazS,KAAK2P,eAAe7G,GACjCY,EAlQM,EAAC8I,EAAUrI,EAAM3J,IAAQgS,IAAarI,EAAKuI,QAAUvI,EAAK0D,UAAY,CAClF1G,KAAMgC,EAAwB3I,GAAO,GACrCoH,OAAQ,MAgQM+K,CAAYH,EAAUrI,EAAMnK,KAAKQ,OACzC4R,EAAQ,CACV/Q,IAAKuR,OAAOC,kBACZrP,IAAKoP,OAAOE,oBAERzR,IAAK0R,EAAWvP,IAAKwP,GA9VrC,SAAuBlK,GACnB,MAAM,IAAEzH,EAAI,IAAEmC,EAAI,WAAEyP,EAAW,WAAEC,GAAgBpK,EAAMqK,gBACvD,MAAO,CACH9R,IAAK4R,EAAa5R,EAAMuR,OAAOE,kBAC/BtP,IAAK0P,EAAa1P,EAAMoP,OAAOC,kBAEvC,CAwVmDM,CAAcV,GACzD,IAAItQ,EAAG6I,EACP,SAASoI,IACLpI,EAASmB,EAAQhK,GACjB,MAAM4H,EAAaiB,EAAOyH,EAAWpH,MACrC,QAAQ,OAAeL,EAAOlC,EAAMuC,QAAU0H,EAAWhJ,GAAciJ,EAAWjJ,CACtF,CACA,IAAI5H,EAAI,EAAGA,EAAIoH,IACP6J,MAGJpT,KAAKmS,sBAAsBC,EAAOtJ,EAAOkC,EAAQtB,IAC7C2H,MALelP,GASvB,GAAIkP,EACA,IAAIlP,EAAIoH,EAAO,EAAGpH,GAAK,IAAKA,EACxB,IAAIiR,IAAJ,CAGApT,KAAKmS,sBAAsBC,EAAOtJ,EAAOkC,EAAQtB,GACjD,KAFA,CAKR,OAAO0I,CACX,CACA,kBAAAiB,CAAmBvK,GACf,MAAMkC,EAAShL,KAAKiL,YAAYkB,QAC1BvE,EAAS,GACf,IAAIzF,EAAGoH,EAAMZ,EACb,IAAIxG,EAAI,EAAGoH,EAAOyB,EAAO/I,OAAQE,EAAIoH,IAAQpH,EACzCwG,EAAQqC,EAAO7I,GAAG2G,EAAMuC,OACpB,OAAe1C,IACff,EAAO1E,KAAKyF,GAGpB,OAAOf,CACX,CACH,cAAA0L,GACO,OAAO,CACX,CACH,gBAAAC,CAAiB/J,GACV,MAAMW,EAAOnK,KAAKiL,YACZE,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdK,EAAShL,KAAKiS,UAAUzI,GAC9B,MAAO,CACHgK,MAAOrI,EAAS,GAAKA,EAAOsI,iBAAiBzI,EAAOG,EAAOE,OAAS,GACpE1C,MAAOgC,EAAS,GAAKA,EAAO8I,iBAAiBzI,EAAOL,EAAOU,OAAS,GAE5E,CACH,OAAA1J,CAAQkI,GACD,MAAMM,EAAOnK,KAAKiL,YAClBjL,KAAKkG,OAAO2D,GAAQ,WACpBM,EAAKuJ,MAleb,SAAgB/K,GACZ,IAAIgL,EAAGnS,EAAGoS,EAAGtD,EASb,OARI,IAAAnO,GAASwG,IACTgL,EAAIhL,EAAMkL,IACVrS,EAAImH,EAAMmL,MACVF,EAAIjL,EAAMoL,OACVzD,EAAI3H,EAAMqL,MAEVL,EAAInS,EAAIoS,EAAItD,EAAI3H,EAEb,CACHkL,IAAKF,EACLG,MAAOtS,EACPuS,OAAQH,EACRI,KAAM1D,EACN2D,UAAoB,IAAVtL,EAElB,CAidqBuL,EAAO,IAAAzF,GAAezO,KAAK8H,QAAQqM,KA/exD,SAAqBhF,EAAQE,EAAQtG,GACjC,IAAwB,IAApBA,EACA,OAAO,EAEX,MAAMsF,EAAIxF,EAAUsG,EAAQpG,GACtBuF,EAAIzF,EAAUwG,EAAQtG,GAC5B,MAAO,CACH8K,IAAKvF,EAAEpF,IACP4K,MAAOzF,EAAEnF,IACT6K,OAAQzF,EAAEhN,MACV0S,KAAM3F,EAAE/M,MAEhB,CAme8D8S,CAAYjK,EAAKgF,OAAQhF,EAAKkF,OAAQrP,KAAKsT,mBACrG,CACH,MAAApN,CAAO2D,GAAO,CACX,IAAAzH,GACI,MAAMuK,EAAM3M,KAAK0M,KACXlM,EAAQR,KAAKQ,MACb2J,EAAOnK,KAAKiL,YACZoJ,EAAWlK,EAAKoF,MAAQ,GACxB+E,EAAO9T,EAAM+T,UACbtO,EAAS,GACT3E,EAAQtB,KAAKmN,YAAc,EAC3BiE,EAAQpR,KAAKoN,YAAciH,EAASpS,OAASX,EAC7CkT,EAA0BxU,KAAK8H,QAAQ0M,wBAC7C,IAAIrS,EAIJ,IAHIgI,EAAK+D,SACL/D,EAAK+D,QAAQ9L,KAAKuK,EAAK2H,EAAMhT,EAAO8P,GAEpCjP,EAAIb,EAAOa,EAAIb,EAAQ8P,IAASjP,EAAE,CAClC,MAAMsS,EAAUJ,EAASlS,GACrBsS,EAAQ/B,SAGR+B,EAAQxO,QAAUuO,EAClBvO,EAAO/C,KAAKuR,GAEZA,EAAQrS,KAAKuK,EAAK2H,GAE1B,CACA,IAAInS,EAAI,EAAGA,EAAI8D,EAAOhE,SAAUE,EAC5B8D,EAAO9D,GAAGC,KAAKuK,EAAK2H,EAE5B,CACH,QAAAI,CAASlL,EAAOvD,GACT,MAAM4D,EAAO5D,EAAS,SAAW,UACjC,YAAiB3F,IAAVkJ,GAAuBxJ,KAAKiL,YAAYiD,QAAUlO,KAAK2U,6BAA6B9K,GAAQ7J,KAAK4U,0BAA0BpL,GAAS,EAAGK,EAClJ,CACH,UAAAoH,CAAWzH,EAAOvD,EAAQ4D,GACnB,MAAMqE,EAAUlO,KAAKmO,aACrB,IAAI0G,EACJ,GAAIrL,GAAS,GAAKA,EAAQxJ,KAAKiL,YAAYsE,KAAKtN,OAAQ,CACpD,MAAMwS,EAAUzU,KAAKiL,YAAYsE,KAAK/F,GACtCqL,EAAUJ,EAAQlH,WAAakH,EAAQlH,SAvYnD,SAA2BuH,EAAQtL,EAAOiL,GACtC,OAAO,OAAcK,EAAQ,CACzB7O,QAAQ,EACR8O,UAAWvL,EACXwB,YAAQ1K,EACR0U,SAAK1U,EACLmU,UACAjL,QACAK,KAAM,UACNlJ,KAAM,QAEd,CA4X8DsU,CAAkBjV,KAAKiR,aAAczH,EAAOiL,IAC9FI,EAAQ7J,OAAShL,KAAKiS,UAAUzI,GAChCqL,EAAQG,IAAM9G,EAAQqB,KAAK/F,GAC3BqL,EAAQrL,MAAQqL,EAAQE,UAAYvL,CACxC,MACIqL,EAAU7U,KAAKuN,WAAavN,KAAKuN,SAtZ7C,SAA8BuH,EAAQtL,GAClC,OAAO,OAAcsL,EAAQ,CACzB7O,QAAQ,EACRiI,aAAS5N,EACTwJ,aAAcN,EACdA,QACAK,KAAM,UACNlJ,KAAM,WAEd,CA6YwDuU,CAAqBlV,KAAKQ,MAAMyQ,aAAcjR,KAAKwJ,QAC/FqL,EAAQ3G,QAAUA,EAClB2G,EAAQrL,MAAQqL,EAAQ/K,aAAe9J,KAAKwJ,MAIhD,OAFAqL,EAAQ5O,SAAWA,EACnB4O,EAAQhL,KAAOA,EACRgL,CACX,CACH,4BAAAF,CAA6B9K,GACtB,OAAO7J,KAAKmV,uBAAuBnV,KAAKyN,mBAAmBhC,GAAI5B,EACnE,CACH,yBAAA+K,CAA0BpL,EAAOK,GAC1B,OAAO7J,KAAKmV,uBAAuBnV,KAAK0N,gBAAgBjC,GAAI5B,EAAML,EACtE,CACH,sBAAA2L,CAAuBC,EAAavL,EAAO,UAAWL,GAC/C,MAAMvD,EAAkB,WAAT4D,EACTwL,EAAQrV,KAAK4M,gBACb0I,EAAWF,EAAc,IAAMvL,EAC/ByC,EAAS+I,EAAMC,GACfC,EAAUvV,KAAKqN,sBAAuB,OAAQ7D,GACpD,GAAI8C,EACA,OAAOD,EAAiBC,EAAQiJ,GAEpC,MAAM1O,EAAS7G,KAAKQ,MAAMqG,OACpB+J,EAAY/J,EAAO2O,wBAAwBxV,KAAK8M,MAAOsI,GACvDK,EAAWxP,EAAS,CACtB,GAAGmP,SACH,QACAA,EACA,IACA,CACAA,EACA,IAEEtE,EAASjK,EAAOkK,gBAAgB/Q,KAAKmO,aAAcyC,GACnD8E,EAAQxO,OAAOC,KAAK,EAAAC,EAASiN,SAASe,IAEtCxN,EAASf,EAAO8O,oBAAoB7E,EAAQ4E,EADlC,IAAI1V,KAAKiR,WAAWzH,EAAOvD,EAAQ4D,GACe4L,GAKlE,OAJI7N,EAAOG,UACPH,EAAOG,QAAUwN,EACjBF,EAAMC,GAAYpO,OAAO0O,OAAOvJ,EAAiBzE,EAAQ2N,KAEtD3N,CACX,CACH,kBAAAiO,CAAmBrM,EAAOsM,EAAY7P,GAC/B,MAAMzF,EAAQR,KAAKQ,MACb6U,EAAQrV,KAAK4M,gBACb0I,EAAW,aAAaQ,IACxBxJ,EAAS+I,EAAMC,GACrB,GAAIhJ,EACA,OAAOA,EAEX,IAAIxE,EACJ,IAAgC,IAA5BtH,EAAMsH,QAAQT,UAAqB,CACnC,MAAMR,EAAS7G,KAAKQ,MAAMqG,OACpB+J,EAAY/J,EAAOkP,0BAA0B/V,KAAK8M,MAAOgJ,GACzDhF,EAASjK,EAAOkK,gBAAgB/Q,KAAKmO,aAAcyC,GACzD9I,EAAUjB,EAAOmK,eAAeF,EAAQ9Q,KAAKiR,WAAWzH,EAAOvD,EAAQ6P,GAC3E,CACA,MAAM3N,EAAa,IAAIvB,EAAWpG,EAAOsH,GAAWA,EAAQK,YAI5D,OAHIL,GAAWA,EAAQkO,aACnBX,EAAMC,GAAYpO,OAAO0O,OAAOzN,IAE7BA,CACX,CACH,gBAAA8N,CAAiBnO,GACV,GAAKA,EAAQC,QAGb,OAAO/H,KAAKkN,iBAAmBlN,KAAKkN,eAAiBhG,OAAOc,OAAO,CAAC,EAAGF,GAC3E,CACH,cAAAoO,CAAerM,EAAMsM,GACd,OAAQA,GAAiB/J,EAAmBvC,IAAS7J,KAAKQ,MAAM4V,mBACpE,CACH,iBAAAC,CAAkB/U,EAAOuI,GAClB,MAAMyM,EAAYtW,KAAK4U,0BAA0BtT,EAAOuI,GAClD0M,EAA0BvW,KAAKkN,eAC/BiJ,EAAgBnW,KAAKiW,iBAAiBK,GACtCJ,EAAiBlW,KAAKkW,eAAerM,EAAMsM,IAAkBA,IAAkBI,EAErF,OADAvW,KAAKwW,oBAAoBL,EAAetM,EAAMyM,GACvC,CACHH,gBACAD,iBAER,CACH,aAAAO,CAAchC,EAASjL,EAAO9B,EAAYmC,GAC/BuC,EAAmBvC,GACnB3C,OAAOc,OAAOyM,EAAS/M,GAEvB1H,KAAK6V,mBAAmBrM,EAAOK,GAAM3D,OAAOuO,EAAS/M,EAE7D,CACH,mBAAA8O,CAAoBL,EAAetM,EAAMhC,GAC9BsO,IAAkB/J,EAAmBvC,IACrC7J,KAAK6V,wBAAmBvV,EAAWuJ,GAAM3D,OAAOiQ,EAAetO,EAEvE,CACH,SAAA6O,CAAUjC,EAASjL,EAAOK,EAAM5D,GACzBwO,EAAQxO,OAASA,EACjB,MAAM6B,EAAU9H,KAAK0U,SAASlL,EAAOvD,GACrCjG,KAAK6V,mBAAmBrM,EAAOK,EAAM5D,GAAQC,OAAOuO,EAAS,CACzD3M,SAAU7B,GAAUjG,KAAKiW,iBAAiBnO,IAAYA,GAE9D,CACA,gBAAA6O,CAAiBlC,EAAS3K,EAAcN,GACpCxJ,KAAK0W,UAAUjC,EAASjL,EAAO,UAAU,EAC7C,CACA,aAAAoN,CAAcnC,EAAS3K,EAAcN,GACjCxJ,KAAK0W,UAAUjC,EAASjL,EAAO,UAAU,EAC7C,CACH,wBAAAqN,GACO,MAAMpC,EAAUzU,KAAKiL,YAAYiD,QAC7BuG,GACAzU,KAAK0W,UAAUjC,OAASnU,EAAW,UAAU,EAErD,CACH,qBAAAwW,GACO,MAAMrC,EAAUzU,KAAKiL,YAAYiD,QAC7BuG,GACAzU,KAAK0W,UAAUjC,OAASnU,EAAW,UAAU,EAErD,CACH,eAAAqQ,CAAgBH,GACT,MAAMjB,EAAOvP,KAAKgN,MACZqH,EAAWrU,KAAKiL,YAAYsE,KAClC,IAAK,MAAO5I,EAAQoQ,EAAMC,KAAShX,KAAKwN,UACpCxN,KAAK2G,GAAQoQ,EAAMC,GAEvBhX,KAAKwN,UAAY,GACjB,MAAMyJ,EAAU5C,EAASpS,OACnBiV,EAAU3H,EAAKtN,OACfmP,EAAQhQ,KAAKC,IAAI6V,EAASD,GAC5B7F,GACApR,KAAKmR,MAAM,EAAGC,GAEd8F,EAAUD,EACVjX,KAAKmX,gBAAgBF,EAASC,EAAUD,EAASzG,GAC1C0G,EAAUD,GACjBjX,KAAKoX,gBAAgBF,EAASD,EAAUC,EAEhD,CACH,eAAAC,CAAgB7V,EAAO8P,EAAOZ,GAAmB,GAC1C,MAAMrG,EAAOnK,KAAKiL,YACZsE,EAAOpF,EAAKoF,KACZrG,EAAM5H,EAAQ8P,EACpB,IAAIjP,EACJ,MAAMkV,EAAQC,IAEV,IADAA,EAAIrV,QAAUmP,EACVjP,EAAImV,EAAIrV,OAAS,EAAGE,GAAK+G,EAAK/G,IAC9BmV,EAAInV,GAAKmV,EAAInV,EAAIiP,IAIzB,IADAiG,EAAK9H,GACDpN,EAAIb,EAAOa,EAAI+G,IAAO/G,EACtBoN,EAAKpN,GAAK,IAAInC,KAAK0N,gBAEnB1N,KAAK+M,UACLsK,EAAKlN,EAAKgC,SAEdnM,KAAKmR,MAAM7P,EAAO8P,GACdZ,GACAxQ,KAAKuX,eAAehI,EAAMjO,EAAO8P,EAAO,QAEhD,CACA,cAAAmG,CAAe9C,EAASnT,EAAO8P,EAAOvH,GAAO,CAChD,eAAAuN,CAAgB9V,EAAO8P,GAChB,MAAMjH,EAAOnK,KAAKiL,YAClB,GAAIjL,KAAK+M,SAAU,CACf,MAAMyK,EAAUrN,EAAKgC,QAAQsL,OAAOnW,EAAO8P,GACvCjH,EAAK0D,UACL3B,EAAY/B,EAAMqN,EAE1B,CACArN,EAAKoF,KAAKkI,OAAOnW,EAAO8P,EAC5B,CACH,KAAAsG,CAAMC,GACC,GAAI3X,KAAK+M,SACL/M,KAAKwN,UAAUtK,KAAKyU,OACjB,CACH,MAAOhR,EAAQoQ,EAAMC,GAAQW,EAC7B3X,KAAK2G,GAAQoQ,EAAMC,EACvB,CACAhX,KAAKQ,MAAMoX,aAAa1U,KAAK,CACzBlD,KAAKwJ,SACFmO,GAEX,CACA,WAAAE,GACI,MAAMzG,EAAQ0G,UAAU7V,OACxBjC,KAAK0X,MAAM,CACP,kBACA1X,KAAKmO,aAAaoB,KAAKtN,OAASmP,EAChCA,GAER,CACA,UAAA2G,GACI/X,KAAK0X,MAAM,CACP,kBACA1X,KAAKiL,YAAYsE,KAAKtN,OAAS,EAC/B,GAER,CACA,YAAA+V,GACIhY,KAAK0X,MAAM,CACP,kBACA,EACA,GAER,CACA,aAAAO,CAAc3W,EAAO8P,GACbA,GACApR,KAAK0X,MAAM,CACP,kBACApW,EACA8P,IAGR,MAAM8G,EAAWJ,UAAU7V,OAAS,EAChCiW,GACAlY,KAAK0X,MAAM,CACP,kBACApW,EACA4W,GAGZ,CACA,cAAAC,GACInY,KAAK0X,MAAM,CACP,kBACA,EACAI,UAAU7V,QAElB,EAcH,SAASmW,EAAqBjO,GAC3B,MAAMrB,EAAQqB,EAAKgB,OACbvD,EAbV,SAA2BkB,EAAOnI,GAC9B,IAAKmI,EAAMuP,OAAOC,KAAM,CACpB,MAAMC,EAAezP,EAAM+B,wBAAwBlK,GACnD,IAAIiH,EAAS,GACb,IAAI,IAAIzF,EAAI,EAAGoH,EAAOgP,EAAatW,OAAQE,EAAIoH,EAAMpH,IACjDyF,EAASA,EAAO4Q,OAAOD,EAAapW,GAAG4I,WAAWsI,mBAAmBvK,IAEzEA,EAAMuP,OAAOC,MAAO,IAAAG,GAAa7Q,EAAO8Q,KAAK,CAACC,EAAG/E,IAAI+E,EAAI/E,GAC7D,CACA,OAAO9K,EAAMuP,OAAOC,IACxB,CAGmBM,CAAkB9P,EAAOqB,EAAKxJ,MAC7C,IACIwB,EAAGoH,EAAMsP,EAAMtH,EADflQ,EAAMyH,EAAMgQ,QAEhB,MAAMC,EAAmB,KACR,QAATF,IAA4B,QAAVA,KAGlB,OAAQtH,KACRlQ,EAAMD,KAAKC,IAAIA,EAAKD,KAAK4X,IAAIH,EAAOtH,IAASlQ,IAEjDkQ,EAAOsH,IAEX,IAAI1W,EAAI,EAAGoH,EAAO3B,EAAO3F,OAAQE,EAAIoH,IAAQpH,EACzC0W,EAAO/P,EAAMmQ,iBAAiBrR,EAAOzF,IACrC4W,IAGJ,IADAxH,OAAOjR,EACH6B,EAAI,EAAGoH,EAAOT,EAAMoQ,MAAMjX,OAAQE,EAAIoH,IAAQpH,EAC9C0W,EAAO/P,EAAMqQ,gBAAgBhX,GAC7B4W,IAEJ,OAAO1X,CACX,CA0DA,SAAS+X,EAAWC,EAAOnX,EAAMyI,EAAQxI,GAMrC,OALI,OAAQkX,GAtBhB,SAAuBA,EAAOnX,EAAMyI,EAAQxI,GACxC,MAAMmX,EAAa3O,EAAOwG,MAAMkI,EAAM,GAAIlX,GACpCoX,EAAW5O,EAAOwG,MAAMkI,EAAM,GAAIlX,GAClCd,EAAMD,KAAKC,IAAIiY,EAAYC,GAC3B/V,EAAMpC,KAAKoC,IAAI8V,EAAYC,GACjC,IAAIC,EAAWnY,EACXoY,EAASjW,EACTpC,KAAK4X,IAAI3X,GAAOD,KAAK4X,IAAIxV,KACzBgW,EAAWhW,EACXiW,EAASpY,GAEba,EAAKyI,EAAOU,MAAQoO,EACpBvX,EAAKwX,QAAU,CACXF,WACAC,SACAnY,MAAOgY,EACPpQ,IAAKqQ,EACLlY,MACAmC,MAER,CAGQmW,CAAcN,EAAOnX,EAAMyI,EAAQxI,GAEnCD,EAAKyI,EAAOU,MAAQV,EAAOwG,MAAMkI,EAAOlX,GAErCD,CACX,CACA,SAAS0X,EAAsBzP,EAAMoF,EAAMjO,EAAO8P,GAC9C,MAAMjG,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdiH,EAASzG,EAAO0G,YAChBC,EAAc3G,IAAWR,EACzBK,EAAS,GACf,IAAI7I,EAAGoH,EAAMrH,EAAMmX,EACnB,IAAIlX,EAAIb,EAAOiI,EAAOjI,EAAQ8P,EAAOjP,EAAIoH,IAAQpH,EAC7CkX,EAAQ9J,EAAKpN,GACbD,EAAO,CAAC,EACRA,EAAKiJ,EAAOE,MAAQyG,GAAe3G,EAAOgG,MAAMS,EAAOzP,GAAIA,GAC3D6I,EAAO9H,KAAKkW,EAAWC,EAAOnX,EAAMyI,EAAQxI,IAEhD,OAAO6I,CACX,CACA,SAAS6O,EAAWC,GAChB,OAAOA,QAA8BxZ,IAApBwZ,EAAON,eAA4ClZ,IAAlBwZ,EAAOL,MAC7D,CAiCA,SAASM,EAAiBrS,EAAYI,EAAS4B,EAAOF,GAClD,IAAIwQ,EAAOlS,EAAQmS,cACnB,MAAMzT,EAAM,CAAC,EACb,IAAKwT,EAED,YADAtS,EAAWuS,cAAgBzT,GAG/B,IAAa,IAATwT,EAOA,YANAtS,EAAWuS,cAAgB,CACvBpG,KAAK,EACLC,OAAO,EACPC,QAAQ,EACRC,MAAM,IAId,MAAM,MAAE1S,EAAM,IAAE4H,EAAI,QAAED,EAAQ,IAAE4K,EAAI,OAAEE,GA1C1C,SAAqBrM,GACjB,IAAIuB,EAAS3H,EAAO4H,EAAK2K,EAAKE,EAiB9B,OAhBIrM,EAAWwS,YACXjR,EAAUvB,EAAWyS,KAAOzS,EAAW2G,EACvC/M,EAAQ,OACR4H,EAAM,UAEND,EAAUvB,EAAWyS,KAAOzS,EAAW4G,EACvChN,EAAQ,SACR4H,EAAM,OAEND,GACA4K,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEN,CACHzS,QACA4H,MACAD,UACA4K,MACAE,SAER,CAiBsDqG,CAAY1S,GACjD,WAATsS,GAAqBtQ,IACrBhC,EAAW2S,oBAAqB,GAC3B3Q,EAAMiC,MAAQ,KAAOnC,EACtBwQ,EAAOnG,GACCnK,EAAMkC,SAAW,KAAOpC,EAChCwQ,EAAOjG,GAEPvN,EAAI8T,EAAUvG,EAAQzS,EAAO4H,EAAKD,KAAY,EAC9C+Q,EAAOnG,IAGfrN,EAAI8T,EAAUN,EAAM1Y,EAAO4H,EAAKD,KAAY,EAC5CvB,EAAWuS,cAAgBzT,CAC/B,CACA,SAAS8T,EAAUN,EAAMrB,EAAG/E,EAAG3K,GAS/B,IAAcsR,EAAMC,EAAIC,EAFpB,OANIxR,GAQgBwR,EAPK7G,EACrBoG,EAAOU,EADPV,GAOMO,EAPMP,MAOAQ,EAPM7B,GAQD8B,EAAKF,IAASE,EAAKD,EAAKD,EAPnB3G,EAAG+E,IAEzBqB,EAAOU,EAASV,EAAMrB,EAAG/E,GAEtBoG,CACX,CAIA,SAASU,EAASjM,EAAGnN,EAAO4H,GACxB,MAAa,UAANuF,EAAgBnN,EAAc,QAANmN,EAAcvF,EAAMuF,CACvD,CACA,SAASkM,EAAiBjT,GAAY,cAAEkT,GAAkBC,GACtDnT,EAAWkT,cAAkC,SAAlBA,EAAqC,IAAVC,EAAc,IAAO,EAAID,CACnF,CA4bA,MAAME,UAA2BtO,EAC7BC,UAAY,WACfA,gBAAkB,CACXgB,oBAAoB,EACpBC,gBAAiB,MACjBrG,UAAW,CACP0T,eAAe,EACfC,cAAc,GAElB7S,WAAY,CACR8S,QAAS,CACLta,KAAM,SACN+G,WAAY,CACR,gBACA,WACA,cACA,cACA,aACA,IACA,IACA,SACA,cACA,aAIZwT,OAAQ,MACRC,SAAU,EACVC,cAAe,IACfC,OAAQ,OACRC,QAAS,EACTxM,UAAW,KAEfrC,mBAAqB,CACjB8O,YAAcC,GAAgB,YAATA,EACrBC,WAAaD,GAAgB,YAATA,IAAuBA,EAAKE,WAAW,gBAAkBF,EAAKE,WAAW,oBAEpGjP,iBAAmB,CACZkP,YAAa,EACbC,QAAS,CACLC,OAAQ,CACJjK,OAAQ,CACJ,cAAAkK,CAAgBtb,GACZ,MAAM+O,EAAO/O,EAAM+O,KACnB,GAAIA,EAAKqC,OAAO3P,QAAUsN,EAAKC,SAASvN,OAAQ,CAC5C,MAAQ2P,QAAQ,WAAEmK,EAAW,MAAE1X,IAAc7D,EAAMqb,OAAO/T,QAC1D,OAAOyH,EAAKqC,OAAOoK,IAAI,CAACxI,EAAOrR,KAC3B,MACM8Z,EADOzb,EAAMiP,eAAe,GACf1E,WAAW2J,SAASvS,GACvC,MAAO,CACH+Z,KAAM1I,EACN2I,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAWlY,EACXmY,UAAWP,EAAMQ,YACjBV,WAAYA,EACZrJ,QAASlS,EAAMkc,kBAAkBva,GACjCqH,MAAOrH,IAGnB,CACA,MAAO,EACX,GAEJ,OAAAwa,CAASvX,EAAGwX,EAAYf,GACpBA,EAAOrb,MAAMqc,qBAAqBD,EAAWpT,OAC7CqS,EAAOrb,MAAM0F,QACjB,KAIZ,WAAAnG,CAAYS,EAAOsJ,GACfgT,MAAMtc,EAAOsJ,GACb9J,KAAKqN,qBAAsB,EAC3BrN,KAAK+c,iBAAczc,EACnBN,KAAKgd,iBAAc1c,EACnBN,KAAKid,aAAU3c,EACfN,KAAKkd,aAAU5c,CACnB,CACA,UAAAsN,GAAc,CACjB,KAAAuD,CAAM7P,EAAO8P,GACN,MAAM7B,EAAOvP,KAAKmO,aAAaoB,KACzBpF,EAAOnK,KAAKiL,YAClB,IAAsB,IAAlBjL,KAAK+M,SACL5C,EAAKgC,QAAUoD,MACZ,CACH,IAKIpN,EAAGoH,EALH4T,EAAUhb,IAAKoN,EAAKpN,GACxB,IAAI,IAAAA,GAASoN,EAAKjO,IAAS,CACvB,MAAM,IAAEkG,EAAK,SAAaxH,KAAK+M,SAC/BoQ,EAAUhb,KAAK,OAAiBoN,EAAKpN,GAAIqF,EAC7C,CAEA,IAAIrF,EAAIb,EAAOiI,EAAOjI,EAAQ8P,EAAOjP,EAAIoH,IAAQpH,EAC7CgI,EAAKgC,QAAQhK,GAAKgb,EAAOhb,EAEjC,CACJ,CACH,YAAAib,GACO,OAAO,IAAAzJ,GAAU3T,KAAK8H,QAAQqT,SAAW,GAC7C,CACH,iBAAAkC,GACO,OAAO,IAAA1J,GAAU3T,KAAK8H,QAAQsT,cAClC,CACH,mBAAAkC,GACO,IAAIjc,EAAM,EAAAkc,EACN/Z,GAAO,EAAA+Z,EACX,IAAI,IAAIpb,EAAI,EAAGA,EAAInC,KAAKQ,MAAM+O,KAAKC,SAASvN,SAAUE,EAClD,GAAInC,KAAKQ,MAAMgd,iBAAiBrb,IAAMnC,KAAKQ,MAAMiP,eAAetN,GAAGxB,OAASX,KAAK8M,MAAO,CACpF,MAAM/B,EAAa/K,KAAKQ,MAAMiP,eAAetN,GAAG4I,WAC1CoQ,EAAWpQ,EAAWqS,eACtBhC,EAAgBrQ,EAAWsS,oBACjChc,EAAMD,KAAKC,IAAIA,EAAK8Z,GACpB3X,EAAMpC,KAAKoC,IAAIA,EAAK2X,EAAWC,EACnC,CAEJ,MAAO,CACHD,SAAU9Z,EACV+Z,cAAe5X,EAAMnC,EAE7B,CACH,MAAA6E,CAAO2D,GACA,MAAMrJ,EAAQR,KAAKQ,OACb,UAAE+T,GAAe/T,EACjB2J,EAAOnK,KAAKiL,YACZwS,EAAOtT,EAAKoF,KACZ+L,EAAUtb,KAAK0d,oBAAsB1d,KAAK2d,aAAaF,GAAQzd,KAAK8H,QAAQwT,QAC5EsC,EAAUxc,KAAKoC,KAAKpC,KAAKC,IAAIkT,EAAUsJ,MAAOtJ,EAAUuJ,QAAUxC,GAAW,EAAG,GAChFJ,EAAS9Z,KAAKC,KAAI,OAAarB,KAAK8H,QAAQoT,OAAQ0C,GAAU,GAC9DG,EAAc/d,KAAKge,eAAehe,KAAKwJ,QACvC,cAAE4R,EAAc,SAAED,GAAcnb,KAAKsd,uBACrC,OAAEW,EAAO,OAAEC,EAAO,QAAEjB,EAAQ,QAAEC,GAhK5C,SAA2B/B,EAAUC,EAAeF,GAChD,IAAI+C,EAAS,EACTC,EAAS,EACTjB,EAAU,EACVC,EAAU,EACd,GAAI9B,EAAgB,EAAAmC,EAAK,CACrB,MAAMY,EAAahD,EACbiD,EAAWD,EAAa/C,EACxBiD,EAASjd,KAAKkd,IAAIH,GAClBI,EAASnd,KAAKod,IAAIL,GAClBM,EAAOrd,KAAKkd,IAAIF,GAChBM,EAAOtd,KAAKod,IAAIJ,GAChBO,EAAU,CAACC,EAAOjG,EAAG/E,KAAI,OAAcgL,EAAOT,EAAYC,GAAU,GAAQ,EAAIhd,KAAKoC,IAAImV,EAAGA,EAAIuC,EAAQtH,EAAGA,EAAIsH,GAC/G2D,EAAU,CAACD,EAAOjG,EAAG/E,KAAI,OAAcgL,EAAOT,EAAYC,GAAU,IAAS,EAAIhd,KAAKC,IAAIsX,EAAGA,EAAIuC,EAAQtH,EAAGA,EAAIsH,GAChH4D,EAAOH,EAAQ,EAAGN,EAAQI,GAC1BM,EAAOJ,EAAQ,EAAAK,EAAST,EAAQG,GAChCO,EAAOJ,EAAQ,EAAAK,EAAIb,EAAQI,GAC3BU,EAAON,EAAQ,EAAAK,EAAK,EAAAF,EAAST,EAAQG,GAC3CT,GAAUa,EAAOG,GAAQ,EACzBf,GAAUa,EAAOI,GAAQ,EACzBlC,IAAY6B,EAAOG,GAAQ,EAC3B/B,IAAY6B,EAAOI,GAAQ,CAC/B,CACA,MAAO,CACHlB,SACAC,SACAjB,UACAC,UAER,CAmIyDkC,CAAkBjE,EAAUC,EAAeF,GACtFmE,GAAY9K,EAAUsJ,MAAQvC,GAAW2C,EACzCqB,GAAa/K,EAAUuJ,OAASxC,GAAW4C,EAC3CqB,EAAYne,KAAKoC,IAAIpC,KAAKC,IAAIge,EAAUC,GAAa,EAAG,GACxDtC,GAAc,OAAYhd,KAAK8H,QAAQuT,OAAQkE,GAE/CC,GAAgBxC,EADF5b,KAAKoC,IAAIwZ,EAAc9B,EAAQ,IACAlb,KAAKyf,gCACxDzf,KAAKid,QAAUA,EAAUD,EACzBhd,KAAKkd,QAAUA,EAAUF,EACzB7S,EAAKuV,MAAQ1f,KAAK2f,iBAClB3f,KAAKgd,YAAcA,EAAcwC,EAAexf,KAAK4f,qBAAqB5f,KAAKwJ,OAC/ExJ,KAAK+c,YAAc3b,KAAKoC,IAAIxD,KAAKgd,YAAcwC,EAAezB,EAAa,GAC3E/d,KAAKuX,eAAekG,EAAM,EAAGA,EAAKxb,OAAQ4H,EAC9C,CACH,cAAAgW,CAAe1d,EAAGyN,GACX,MAAM5G,EAAOhJ,KAAK8H,QACZqC,EAAOnK,KAAKiL,YACZmQ,EAAgBpb,KAAKqd,oBAC3B,OAAIzN,GAAS5G,EAAK3B,UAAU0T,gBAAkB/a,KAAKQ,MAAMkc,kBAAkBva,IAA0B,OAApBgI,EAAKgC,QAAQhK,IAAegI,EAAKoF,KAAKpN,GAAGuQ,OAC/G,EAEJ1S,KAAK8f,uBAAuB3V,EAAKgC,QAAQhK,GAAKiZ,EAAgB,EAAAmC,EACzE,CACA,cAAAhG,CAAekG,EAAMnc,EAAO8P,EAAOvH,GAC/B,MAAM+F,EAAiB,UAAT/F,EACRrJ,EAAQR,KAAKQ,MACb+T,EAAY/T,EAAM+T,UAElBwL,EADOvf,EAAMsH,QACQT,UACrB2Y,GAAWzL,EAAUP,KAAOO,EAAUT,OAAS,EAC/CmM,GAAW1L,EAAUV,IAAMU,EAAUR,QAAU,EAC/CiH,EAAepL,GAASmQ,EAAc/E,aACtC+B,EAAc/B,EAAe,EAAIhb,KAAK+c,YACtCC,EAAchC,EAAe,EAAIhb,KAAKgd,aACtC,cAAE7G,EAAc,eAAED,GAAoBlW,KAAKqW,kBAAkB/U,EAAOuI,GAC1E,IACI1H,EADAgc,EAAane,KAAKod,eAEtB,IAAIjb,EAAI,EAAGA,EAAIb,IAASa,EACpBgc,GAAcne,KAAK6f,eAAe1d,EAAGyN,GAEzC,IAAIzN,EAAIb,EAAOa,EAAIb,EAAQ8P,IAASjP,EAAE,CAClC,MAAMiZ,EAAgBpb,KAAK6f,eAAe1d,EAAGyN,GACvCsQ,EAAMzC,EAAKtb,GACXuF,EAAa,CACf2G,EAAG2R,EAAUhgB,KAAKid,QAClB3O,EAAG2R,EAAUjgB,KAAKkd,QAClBiB,aACAC,SAAUD,EAAa/C,EACvBA,gBACA4B,cACAD,eAEA7G,IACAxO,EAAWI,QAAUqO,GAAiBnW,KAAK4U,0BAA0BzS,EAAG+d,EAAIja,OAAS,SAAW4D,IAEpGsU,GAAc/C,EACdpb,KAAKyW,cAAcyJ,EAAK/d,EAAGuF,EAAYmC,EAC3C,CACJ,CACA,cAAA8V,GACI,MAAMxV,EAAOnK,KAAKiL,YACZkV,EAAWhW,EAAKoF,KACtB,IACIpN,EADAud,EAAQ,EAEZ,IAAIvd,EAAI,EAAGA,EAAIge,EAASle,OAAQE,IAAI,CAChC,MAAMwG,EAAQwB,EAAKgC,QAAQhK,GACb,OAAVwG,GAAmByX,MAAMzX,KAAU3I,KAAKQ,MAAMkc,kBAAkBva,IAAOge,EAAShe,GAAGuQ,SACnFgN,GAASte,KAAK4X,IAAIrQ,GAE1B,CACA,OAAO+W,CACX,CACA,sBAAAI,CAAuBnX,GACnB,MAAM+W,EAAQ1f,KAAKiL,YAAYyU,MAC/B,OAAIA,EAAQ,IAAMU,MAAMzX,GACb,EAAA4U,GAAOnc,KAAK4X,IAAIrQ,GAAS+W,GAE7B,CACX,CACA,gBAAAnM,CAAiB/J,GACb,MAAMW,EAAOnK,KAAKiL,YACZzK,EAAQR,KAAKQ,MACboR,EAASpR,EAAM+O,KAAKqC,QAAU,GAC9BjJ,GAAQ,OAAawB,EAAKgC,QAAQ3C,GAAQhJ,EAAMsH,QAAQuY,QAC9D,MAAO,CACH7M,MAAO5B,EAAOpI,IAAU,GACxBb,QAER,CACA,iBAAA+U,CAAkBD,GACd,IAAIja,EAAM,EACV,MAAMhD,EAAQR,KAAKQ,MACnB,IAAI2B,EAAGoH,EAAMY,EAAMY,EAAYjD,EAC/B,IAAK2V,EACD,IAAItb,EAAI,EAAGoH,EAAO/I,EAAM+O,KAAKC,SAASvN,OAAQE,EAAIoH,IAAQpH,EACtD,GAAI3B,EAAMgd,iBAAiBrb,GAAI,CAC3BgI,EAAO3J,EAAMiP,eAAetN,GAC5Bsb,EAAOtT,EAAKoF,KACZxE,EAAaZ,EAAKY,WAClB,KACJ,CAGR,IAAK0S,EACD,OAAO,EAEX,IAAItb,EAAI,EAAGoH,EAAOkU,EAAKxb,OAAQE,EAAIoH,IAAQpH,EACvC2F,EAAUiD,EAAW6J,0BAA0BzS,GACnB,UAAxB2F,EAAQwY,cACR9c,EAAMpC,KAAKoC,IAAIA,EAAKsE,EAAQ2U,aAAe,EAAG3U,EAAQyY,kBAAoB,IAGlF,OAAO/c,CACX,CACA,YAAAma,CAAaF,GACT,IAAIja,EAAM,EACV,IAAI,IAAIrB,EAAI,EAAGoH,EAAOkU,EAAKxb,OAAQE,EAAIoH,IAAQpH,EAAE,CAC7C,MAAM2F,EAAU9H,KAAK4U,0BAA0BzS,GAC/CqB,EAAMpC,KAAKoC,IAAIA,EAAKsE,EAAQ0Y,QAAU,EAAG1Y,EAAQ2Y,aAAe,EACpE,CACA,OAAOjd,CACX,CACH,oBAAAoc,CAAqB9V,GACd,IAAI4W,EAAmB,EACvB,IAAI,IAAIve,EAAI,EAAGA,EAAI2H,IAAgB3H,EAC3BnC,KAAKQ,MAAMgd,iBAAiBrb,KAC5Bue,GAAoB1gB,KAAKge,eAAe7b,IAGhD,OAAOue,CACX,CACH,cAAA1C,CAAelU,GACR,OAAO1I,KAAKoC,KAAI,IAAAiL,GAAezO,KAAKQ,MAAM+O,KAAKC,SAAS1F,GAAc6W,OAAQ,GAAI,EACtF,CACH,6BAAAlB,GACO,OAAOzf,KAAK4f,qBAAqB5f,KAAKQ,MAAM+O,KAAKC,SAASvN,SAAW,CACzE,EA6GJ,MAAM2e,UAA4BpU,EAC9BC,UAAY,YACfA,gBAAkB,CACXiB,gBAAiB,MACjBrG,UAAW,CACP0T,eAAe,EACfC,cAAc,GAElB7S,WAAY,CACR8S,QAAS,CACLta,KAAM,SACN+G,WAAY,CACR,IACA,IACA,aACA,WACA,cACA,iBAIZoH,UAAW,IACXqP,WAAY,GAEnB1R,iBAAmB,CACZkP,YAAa,EACbC,QAAS,CACLC,OAAQ,CACJjK,OAAQ,CACJ,cAAAkK,CAAgBtb,GACZ,MAAM+O,EAAO/O,EAAM+O,KACnB,GAAIA,EAAKqC,OAAO3P,QAAUsN,EAAKC,SAASvN,OAAQ,CAC5C,MAAQ2P,QAAQ,WAAEmK,EAAW,MAAE1X,IAAc7D,EAAMqb,OAAO/T,QAC1D,OAAOyH,EAAKqC,OAAOoK,IAAI,CAACxI,EAAOrR,KAC3B,MACM8Z,EADOzb,EAAMiP,eAAe,GACf1E,WAAW2J,SAASvS,GACvC,MAAO,CACH+Z,KAAM1I,EACN2I,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAWlY,EACXmY,UAAWP,EAAMQ,YACjBV,WAAYA,EACZrJ,QAASlS,EAAMkc,kBAAkBva,GACjCqH,MAAOrH,IAGnB,CACA,MAAO,EACX,GAEJ,OAAAwa,CAASvX,EAAGwX,EAAYf,GACpBA,EAAOrb,MAAMqc,qBAAqBD,EAAWpT,OAC7CqS,EAAOrb,MAAM0F,QACjB,IAGR6F,OAAQ,CACJvK,EAAG,CACCb,KAAM,eACNkgB,WAAY,CACRC,SAAS,GAEbC,aAAa,EACbC,KAAM,CACFC,UAAU,GAEdC,YAAa,CACTJ,SAAS,GAEb3C,WAAY,KAIxB,WAAApe,CAAYS,EAAOsJ,GACfgT,MAAMtc,EAAOsJ,GACb9J,KAAK+c,iBAAczc,EACnBN,KAAKgd,iBAAc1c,CACvB,CACA,gBAAAiT,CAAiB/J,GACb,MAAMW,EAAOnK,KAAKiL,YACZzK,EAAQR,KAAKQ,MACboR,EAASpR,EAAM+O,KAAKqC,QAAU,GAC9BjJ,GAAQ,OAAawB,EAAKgC,QAAQ3C,GAAOhI,EAAGhB,EAAMsH,QAAQuY,QAChE,MAAO,CACH7M,MAAO5B,EAAOpI,IAAU,GACxBb,QAER,CACA,eAAA8I,CAAgBtH,EAAMoF,EAAMjO,EAAO8P,GAC/B,OAAO,IAA4B+P,KAAKnhB,KAAjC,CAAuCmK,EAAMoF,EAAMjO,EAAO8P,EACrE,CACA,MAAAlL,CAAO2D,GACH,MAAM4T,EAAOzd,KAAKiL,YAAYsE,KAC9BvP,KAAKohB,gBACLphB,KAAKuX,eAAekG,EAAM,EAAGA,EAAKxb,OAAQ4H,EAC9C,CACH,SAAA0I,GACO,MAAMpI,EAAOnK,KAAKiL,YACZmH,EAAQ,CACV/Q,IAAKuR,OAAOC,kBACZrP,IAAKoP,OAAOE,mBAahB,OAXA3I,EAAKoF,KAAKvO,QAAQ,CAACyT,EAASjL,KACxB,MAAMwB,EAAShL,KAAKiS,UAAUzI,GAAOhI,GAChC4e,MAAMpV,IAAWhL,KAAKQ,MAAMkc,kBAAkBlT,KAC3CwB,EAASoH,EAAM/Q,MACf+Q,EAAM/Q,IAAM2J,GAEZA,EAASoH,EAAM5O,MACf4O,EAAM5O,IAAMwH,MAIjBoH,CACX,CACH,aAAAgP,GACO,MAAM5gB,EAAQR,KAAKQ,MACb+T,EAAY/T,EAAM+T,UAClBvL,EAAOxI,EAAMsH,QACbuZ,EAAUjgB,KAAKC,IAAIkT,EAAUT,MAAQS,EAAUP,KAAMO,EAAUR,OAASQ,EAAUV,KAClFmJ,EAAc5b,KAAKoC,IAAI6d,EAAU,EAAG,GAEpC7B,GAAgBxC,EADF5b,KAAKoC,IAAIwF,EAAKsY,iBAAmBtE,EAAc,IAAMhU,EAAKsY,iBAAmB,EAAG,IACjD9gB,EAAM+gB,yBACzDvhB,KAAKgd,YAAcA,EAAcwC,EAAexf,KAAKwJ,MACrDxJ,KAAK+c,YAAc/c,KAAKgd,YAAcwC,CAC1C,CACA,cAAAjI,CAAekG,EAAMnc,EAAO8P,EAAOvH,GAC/B,MAAM+F,EAAiB,UAAT/F,EACRrJ,EAAQR,KAAKQ,MAEbuf,EADOvf,EAAMsH,QACQT,UACrByB,EAAQ9I,KAAKiL,YAAYqE,OACzB0Q,EAAUlX,EAAM0Y,QAChBvB,EAAUnX,EAAM2Y,QAChBC,EAAoB5Y,EAAM6Y,cAAc,GAAK,GAAM,EAAAzC,EACzD,IACI/c,EADAyc,EAAQ8C,EAEZ,MAAME,EAAe,IAAM5hB,KAAK6hB,uBAChC,IAAI1f,EAAI,EAAGA,EAAIb,IAASa,EACpByc,GAAS5e,KAAK8hB,cAAc3f,EAAG0H,EAAM+X,GAEzC,IAAIzf,EAAIb,EAAOa,EAAIb,EAAQ8P,EAAOjP,IAAI,CAClC,MAAM+d,EAAMzC,EAAKtb,GACjB,IAAIgc,EAAaS,EACbR,EAAWQ,EAAQ5e,KAAK8hB,cAAc3f,EAAG0H,EAAM+X,GAC/C5E,EAAcxc,EAAMkc,kBAAkBva,GAAK2G,EAAMiZ,8BAA8B/hB,KAAKiS,UAAU9P,GAAGX,GAAK,EAC1God,EAAQR,EACJxO,IACImQ,EAAc/E,eACdgC,EAAc,GAEd+C,EAAchF,gBACdoD,EAAaC,EAAWsD,IAGhC,MAAMha,EAAa,CACf2G,EAAG2R,EACH1R,EAAG2R,EACHlD,YAAa,EACbC,cACAmB,aACAC,WACAtW,QAAS9H,KAAK4U,0BAA0BzS,EAAG+d,EAAIja,OAAS,SAAW4D,IAEvE7J,KAAKyW,cAAcyJ,EAAK/d,EAAGuF,EAAYmC,EAC3C,CACJ,CACA,oBAAAgY,GACI,MAAM1X,EAAOnK,KAAKiL,YAClB,IAAImG,EAAQ,EAMZ,OALAjH,EAAKoF,KAAKvO,QAAQ,CAACyT,EAASjL,MACnB4W,MAAMpgB,KAAKiS,UAAUzI,GAAOhI,IAAMxB,KAAKQ,MAAMkc,kBAAkBlT,IAChE4H,MAGDA,CACX,CACH,aAAA0Q,CAActY,EAAOK,EAAM+X,GACpB,OAAO5hB,KAAKQ,MAAMkc,kBAAkBlT,IAAS,IAAAmK,GAAU3T,KAAK4U,0BAA0BpL,EAAOK,GAAM+U,OAASgD,GAAgB,CAChI,EAsNJ,IAAII,EAA2B9a,OAAO0O,OAAO,CAC7CqM,UAAW,KACXC,cA9rCA,cAA4B1V,EACxBC,UAAY,MACfA,gBAAkB,CACXgB,oBAAoB,EACpBC,gBAAiB,MACjByU,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EACTla,WAAY,CACR8S,QAAS,CACLta,KAAM,SACN+G,WAAY,CACR,IACA,IACA,OACA,QACA,aAKnB+E,iBAAmB,CACZV,OAAQ,CACJuW,QAAS,CACL3hB,KAAM,WACN6f,QAAQ,EACRQ,KAAM,CACFR,QAAQ,IAGhB+B,QAAS,CACL5hB,KAAM,SACNogB,aAAa,KAI5B,kBAAArP,CAAmBvH,EAAMoF,EAAMjO,EAAO8P,GAC/B,OAAOwI,EAAsBzP,EAAMoF,EAAMjO,EAAO8P,EACpD,CACH,cAAAI,CAAerH,EAAMoF,EAAMjO,EAAO8P,GAC3B,OAAOwI,EAAsBzP,EAAMoF,EAAMjO,EAAO8P,EACpD,CACH,eAAAK,CAAgBtH,EAAMoF,EAAMjO,EAAO8P,GAC5B,MAAM,OAAEjG,EAAO,OAAER,GAAYR,GACvB,SAAE4H,EAAU,IAAI,SAAEC,EAAU,KAAShS,KAAK+M,SAC1CiD,EAA2B,MAAhB7E,EAAOE,KAAe0G,EAAWC,EAC5C/B,EAA2B,MAAhBtF,EAAOU,KAAe0G,EAAWC,EAC5ChH,EAAS,GACf,IAAI7I,EAAGoH,EAAMrH,EAAMsgB,EACnB,IAAIrgB,EAAIb,EAAOiI,EAAOjI,EAAQ8P,EAAOjP,EAAIoH,IAAQpH,EAC7CqgB,EAAMjT,EAAKpN,GACXD,EAAO,CAAC,EACRA,EAAKiJ,EAAOE,MAAQF,EAAOgG,OAAM,OAAiBqR,EAAKxS,GAAW7N,GAClE6I,EAAO9H,KAAKkW,GAAW,OAAiBoJ,EAAKvS,GAAW/N,EAAMyI,EAAQxI,IAE1E,OAAO6I,CACX,CACH,qBAAAmH,CAAsBC,EAAOtJ,EAAOkC,EAAQtB,GACrCoT,MAAM3K,sBAAsBC,EAAOtJ,EAAOkC,EAAQtB,GAClD,MAAMoQ,EAAS9O,EAAO0O,QAClBI,GAAUhR,IAAU9I,KAAKiL,YAAYN,SACrCyH,EAAM/Q,IAAMD,KAAKC,IAAI+Q,EAAM/Q,IAAKyY,EAAOzY,KACvC+Q,EAAM5O,IAAMpC,KAAKoC,IAAI4O,EAAM5O,IAAKsW,EAAOtW,KAE/C,CACH,cAAA8P,GACO,OAAO,CACX,CACH,gBAAAC,CAAiB/J,GACV,MAAMW,EAAOnK,KAAKiL,aACZ,OAAEE,EAAO,OAAER,GAAYR,EACvBa,EAAShL,KAAKiS,UAAUzI,GACxBsQ,EAAS9O,EAAO0O,QAChB/Q,EAAQkR,EAAWC,GAAU,IAAMA,EAAOxY,MAAQ,KAAOwY,EAAO5Q,IAAM,IAAM,GAAKyB,EAAO8I,iBAAiBzI,EAAOL,EAAOU,OAC7H,MAAO,CACHmI,MAAO,GAAKrI,EAAOsI,iBAAiBzI,EAAOG,EAAOE,OAClD1C,QAER,CACA,UAAAgF,GACI3N,KAAKqN,qBAAsB,EAC3ByP,MAAMnP,aACO3N,KAAKiL,YACbvB,MAAQ1J,KAAKmO,aAAazE,KACnC,CACA,MAAAxD,CAAO2D,GACH,MAAMM,EAAOnK,KAAKiL,YAClBjL,KAAKuX,eAAepN,EAAKoF,KAAM,EAAGpF,EAAKoF,KAAKtN,OAAQ4H,EACxD,CACA,cAAA0N,CAAekL,EAAMnhB,EAAO8P,EAAOvH,GAC/B,MAAM+F,EAAiB,UAAT/F,GACR,MAAEL,EAAQyB,aAAa,OAAEN,IAAe3K,KACxCma,EAAOxP,EAAO+X,eACdxI,EAAavP,EAAOgY,eACpBC,EAAQ5iB,KAAK6iB,aACb,cAAE1M,EAAc,eAAED,GAAoBlW,KAAKqW,kBAAkB/U,EAAOuI,GAC1E,IAAI,IAAI1H,EAAIb,EAAOa,EAAIb,EAAQ8P,EAAOjP,IAAI,CACtC,MAAM6I,EAAShL,KAAKiS,UAAU9P,GACxB2gB,EAAUlT,IAAS,OAAc5E,EAAOL,EAAOU,OAAS,CAC1D8O,OACA4I,KAAM5I,GACNna,KAAKgjB,yBAAyB7gB,GAC5B8gB,EAAUjjB,KAAKkjB,yBAAyB/gB,EAAGygB,GAC3ClZ,GAASsB,EAAOE,SAAW,CAAC,GAAGP,EAAOU,MACtC3D,EAAa,CACfwS,aACAC,KAAM2I,EAAQ3I,KACdE,oBAAqB3Q,GAASmQ,EAAW7O,EAAO0O,UAAYlQ,IAAUE,EAAMiC,MAAQnC,IAAUE,EAAMkC,QACpGyC,EAAG6L,EAAa4I,EAAQC,KAAOE,EAAQE,OACvC7U,EAAG4L,EAAa+I,EAAQE,OAASL,EAAQC,KACzCjF,OAAQ5D,EAAa+I,EAAQra,KAAOxH,KAAK4X,IAAI8J,EAAQla,MACrDiV,MAAO3D,EAAa9Y,KAAK4X,IAAI8J,EAAQla,MAAQqa,EAAQra,MAErDsN,IACAxO,EAAWI,QAAUqO,GAAiBnW,KAAK4U,0BAA0BzS,EAAGsgB,EAAKtgB,GAAG8D,OAAS,SAAW4D,IAExG,MAAM/B,EAAUJ,EAAWI,SAAW2a,EAAKtgB,GAAG2F,QAC9CiS,EAAiBrS,EAAYI,EAAS4B,EAAOF,GAC7CmR,EAAiBjT,EAAYI,EAAS8a,EAAM/H,OAC5C7a,KAAKyW,cAAcgM,EAAKtgB,GAAIA,EAAGuF,EAAYmC,EAC/C,CACJ,CACH,UAAAuZ,CAAWC,EAAMtO,GACV,MAAM,OAAE5J,GAAYnL,KAAKiL,YACnB5B,EAAW8B,EAAON,wBAAwB7K,KAAK8M,OAAOd,OAAQ7B,GAAOA,EAAKY,WAAWjD,QAAQua,SAC7FjY,EAAUe,EAAOrD,QAAQsC,QACzBE,EAAS,GACTgZ,EAAgBtjB,KAAKiL,YAAYF,WAAWkH,UAAU8C,GACtDwO,EAAcD,GAAiBA,EAAcnY,EAAOE,MACpDmY,EAAYrZ,IACd,MAAMa,EAASb,EAAKgC,QAAQsX,KAAMvhB,GAAOA,EAAKiJ,EAAOE,QAAUkY,GACzDG,EAAM1Y,GAAUA,EAAOb,EAAKQ,OAAOU,MACzC,IAAI,OAAcqY,IAAQtD,MAAMsD,GAC5B,OAAO,GAGf,IAAK,MAAMvZ,KAAQd,EACf,SAAkB/I,IAAdyU,IAA2ByO,EAASrZ,QAGxB,IAAZC,IAAqD,IAAhCE,EAAOqZ,QAAQxZ,EAAKT,aAA6BpJ,IAAZ8J,QAAwC9J,IAAf6J,EAAKT,QACxFY,EAAOpH,KAAKiH,EAAKT,OAEjBS,EAAKX,QAAU6Z,GACf,MAMR,OAHK/Y,EAAOrI,QACRqI,EAAOpH,UAAK5C,GAETgK,CACX,CACH,cAAAsZ,CAAepa,GACR,OAAOxJ,KAAKojB,gBAAW9iB,EAAWkJ,GAAOvH,MAC7C,CACA,aAAA4hB,GACI,OAAO7jB,KAAK8jB,WAAW7hB,MAC3B,CACA,2BAAA8hB,GACI,MAAMhY,EAAS/L,KAAKQ,MAAMuL,OACpBiY,EAAehkB,KAAKQ,MAAMsH,QAAQgH,UACxC,OAAO5H,OAAOC,KAAK4E,GAAQC,OAAQxE,GAAMuE,EAAOvE,GAAK6D,OAAS2Y,GAAc/X,OAChF,CACA,QAAA6X,GACI,MAAMzY,EAAO,CAAC,EACR4Y,EAAmBjkB,KAAK+jB,8BAC9B,IAAK,MAAM7V,KAAWlO,KAAKQ,MAAM+O,KAAKC,SAClCnE,GAAK,IAAAoD,GAAgD,MAAjCzO,KAAKQ,MAAMsH,QAAQgH,UAAoBZ,EAAQM,QAAUN,EAAQS,QAASsV,KAAqB,EAEvH,OAAO/c,OAAOC,KAAKkE,EACvB,CACH,cAAA6Y,CAAepa,EAAc0R,EAAMzG,GAC5B,MAAMzK,EAAStK,KAAKojB,WAAWtZ,EAAciL,GACvCvL,OAAiBlJ,IAATkb,EAAqBlR,EAAOqZ,QAAQnI,IAAS,EAC3D,OAAkB,IAAXhS,EAAec,EAAOrI,OAAS,EAAIuH,CAC9C,CACH,SAAAqZ,GACO,MAAM7Z,EAAOhJ,KAAK8H,QACZqC,EAAOnK,KAAKiL,YACZE,EAAShB,EAAKgB,OACdgZ,EAAS,GACf,IAAIhiB,EAAGoH,EACP,IAAIpH,EAAI,EAAGoH,EAAOY,EAAKoF,KAAKtN,OAAQE,EAAIoH,IAAQpH,EAC5CgiB,EAAOjhB,KAAKiI,EAAO8N,iBAAiBjZ,KAAKiS,UAAU9P,GAAGgJ,EAAOE,MAAOlJ,IAExE,MAAMiiB,EAAepb,EAAKob,aAE1B,MAAO,CACH/iB,IAFQ+iB,GAAgBhM,EAAqBjO,GAG7Cga,SACA7iB,MAAO6J,EAAOkZ,YACdnb,IAAKiC,EAAOmZ,UACZC,WAAYvkB,KAAK4jB,iBACjB9a,MAAOqC,EACPkX,QAASrZ,EAAKqZ,QACdxH,MAAOuJ,EAAe,EAAIpb,EAAKmZ,mBAAqBnZ,EAAKoZ,cAEjE,CACH,wBAAAY,CAAyBxZ,GAClB,MAAQyB,aAAa,OAAEN,EAAO,SAAEkD,EAAWrE,MAAOM,GAAkBhC,SAAWqS,KAAMqK,EAAU,aAAEC,IAAqBzkB,KAChH0kB,EAAaF,GAAa,EAC1BxZ,EAAShL,KAAKiS,UAAUzI,GACxBsQ,EAAS9O,EAAO0O,QAChBiL,EAAW9K,EAAWC,GAC5B,IAGIiJ,EAAMna,EAHND,EAAQqC,EAAOL,EAAOU,MACtB/J,EAAQ,EACRW,EAAS4L,EAAW7N,KAAKyJ,WAAWkB,EAAQK,EAAQ6C,GAAYlF,EAEhE1G,IAAW0G,IACXrH,EAAQW,EAAS0G,EACjB1G,EAAS0G,GAETgc,IACAhc,EAAQmR,EAAON,SACfvX,EAAS6X,EAAOL,OAASK,EAAON,SAClB,IAAV7Q,IAAe,IAAAsB,GAAKtB,MAAW,IAAAsB,GAAK6P,EAAOL,UAC3CnY,EAAQ,GAEZA,GAASqH,GAEb,MAAM2Q,GAAc,OAAckL,IAAeG,EAAuBrjB,EAAZkjB,EAC5D,IAAIrK,EAAOxP,EAAOsO,iBAAiBK,GAOnC,GALIyJ,EADA/iB,KAAKQ,MAAMkc,kBAAkBlT,GACtBmB,EAAOsO,iBAAiB3X,EAAQW,GAEhCkY,EAEXvR,EAAOma,EAAO5I,EACV/Y,KAAK4X,IAAIpQ,GAAQ6b,EAAc,CAC/B7b,EAtTZ,SAAiBA,EAAM+B,EAAQ+Z,GAC3B,OAAa,IAAT9b,GACO,IAAAqB,GAAKrB,IAER+B,EAAOgY,eAAiB,GAAK,IAAMhY,EAAOtJ,KAAOqjB,EAAa,GAAK,EAC/E,CAiTmBE,CAAQhc,EAAM+B,EAAQ+Z,GAAcD,EACvC9b,IAAU+b,IACVvK,GAAQvR,EAAO,GAEnB,MAAMic,EAAala,EAAOma,mBAAmB,GACvCC,EAAWpa,EAAOma,mBAAmB,GACrCzjB,EAAMD,KAAKC,IAAIwjB,EAAYE,GAC3BvhB,EAAMpC,KAAKoC,IAAIqhB,EAAYE,GACjC5K,EAAO/Y,KAAKoC,IAAIpC,KAAKC,IAAI8Y,EAAM3W,GAAMnC,GACrC0hB,EAAO5I,EAAOvR,EACViF,IAAa8W,IACb3Z,EAAOE,QAAQP,EAAOU,MAAMQ,cAAc/B,GAAgBa,EAAOqa,iBAAiBjC,GAAQpY,EAAOqa,iBAAiB7K,GAE1H,CACA,GAAIA,IAASxP,EAAOsO,iBAAiByL,GAAa,CAC9C,MAAMO,GAAW,IAAAhb,GAAKrB,GAAQ+B,EAAOua,qBAAqBR,GAAc,EACxEvK,GAAQ8K,EACRrc,GAAQqc,CACZ,CACA,MAAO,CACHrc,OACAuR,OACA4I,OACAI,OAAQJ,EAAOna,EAAO,EAE9B,CACH,wBAAAsa,CAAyB1Z,EAAOoZ,GACzB,MAAM9Z,EAAQ8Z,EAAM9Z,MACdhB,EAAU9H,KAAK8H,QACf0b,EAAW1b,EAAQ0b,SACnB2B,GAAkB,IAAA1W,GAAe3G,EAAQqd,gBAAiBC,KAChE,IAAIjC,EAAQva,EACZ,MAAMyc,EAAYrlB,KAAK6jB,gBACvB,GAAIjB,EAAMP,QAAS,CACf,MAAMkC,EAAaf,EAAWxjB,KAAK4jB,eAAepa,GAASoZ,EAAM2B,WAC3DnS,EAAiC,SAAzBtK,EAAQsc,aA5ZjC,SAAmC5a,EAAOoZ,EAAO9a,EAASyc,GACvD,MAAMJ,EAASvB,EAAMuB,OACftL,EAAOsL,EAAO3a,GACpB,IAAI+H,EAAO/H,EAAQ,EAAI2a,EAAO3a,EAAQ,GAAK,KACvC8b,EAAO9b,EAAQ2a,EAAOliB,OAAS,EAAIkiB,EAAO3a,EAAQ,GAAK,KAC3D,MAAM+b,EAAUzd,EAAQqa,mBACX,OAAT5Q,IACAA,EAAOsH,GAAiB,OAATyM,EAAgB1C,EAAM1Z,IAAM0Z,EAAMthB,MAAQgkB,EAAOzM,IAEvD,OAATyM,IACAA,EAAOzM,EAAOA,EAAOtH,GAEzB,MAAMjQ,EAAQuX,GAAQA,EAAOzX,KAAKC,IAAIkQ,EAAM+T,IAAS,EAAIC,EAEzD,MAAO,CACHC,MAFSpkB,KAAK4X,IAAIsM,EAAO/T,GAAQ,EAAIgU,EAEvBhB,EACd1J,MAAO/S,EAAQsa,cACf9gB,QAER,CAyY4DmkB,CAA0Bjc,EAAOoZ,EAAO9a,EAASyc,EAAac,GA5azH,SAAkC7b,EAAOoZ,EAAO9a,EAASyc,GACtD,MAAMmB,EAAY5d,EAAQsc,aAC1B,IAAIxb,EAAMiS,EAQV,OAPI,OAAc6K,IACd9c,EAAOga,EAAMvhB,IAAMyG,EAAQqa,mBAC3BtH,EAAQ/S,EAAQsa,gBAEhBxZ,EAAO8c,EAAYnB,EACnB1J,EAAQ,GAEL,CACH2K,MAAO5c,EAAO2b,EACd1J,QACAvZ,MAAOshB,EAAMuB,OAAO3a,GAASZ,EAAO,EAE5C,CA6ZuI+c,CAAyBnc,EAAOoZ,EAAO9a,EAASyc,EAAac,GAClLO,EAA0C,MAAjC5lB,KAAKQ,MAAMsH,QAAQgH,UAAoB9O,KAAKmO,aAAaK,QAAUxO,KAAKmO,aAAaQ,QAC9FkX,EAAa7lB,KAAK8jB,WAAWH,SAAQ,IAAAlV,GAAemX,EAAQ5lB,KAAK+jB,gCACjE+B,EAAa9lB,KAAKkkB,eAAelkB,KAAKwJ,MAAOxJ,KAAKiL,YAAYvB,MAAO8Z,EAAWha,OAAQlJ,GAAaulB,EAC3G1C,EAAS/Q,EAAM9Q,MAAQ8Q,EAAMoT,MAAQM,EAAa1T,EAAMoT,MAAQ,EAChE5c,EAAOxH,KAAKC,IAAI8jB,EAAiB/S,EAAMoT,MAAQpT,EAAMyI,MACzD,MACIsI,EAASra,EAAMmQ,iBAAiBjZ,KAAKiS,UAAUzI,GAAOV,EAAMuC,MAAO7B,GACnEZ,EAAOxH,KAAKC,IAAI8jB,EAAiBvC,EAAMvhB,IAAMuhB,EAAM/H,OAEvD,MAAO,CACHV,KAAMgJ,EAASva,EAAO,EACtBma,KAAMI,EAASva,EAAO,EACtBua,SACAva,OAER,CACA,IAAAxG,GACI,MAAM+H,EAAOnK,KAAKiL,YACZN,EAASR,EAAKQ,OACdob,EAAQ5b,EAAKoF,KACbhG,EAAOwc,EAAM9jB,OACnB,IAAIE,EAAI,EACR,KAAMA,EAAIoH,IAAQpH,EACyB,OAAnCnC,KAAKiS,UAAU9P,GAAGwI,EAAOU,OAAmB0a,EAAM5jB,GAAGuQ,QACrDqT,EAAM5jB,GAAGC,KAAKpC,KAAK0M,KAG/B,GA25BJsZ,iBAx5BA,cAA+BxZ,EAC3BC,UAAY,SACfA,gBAAkB,CACXgB,oBAAoB,EACpBC,gBAAiB,QACjBvF,WAAY,CACR8S,QAAS,CACLta,KAAM,SACN+G,WAAY,CACR,IACA,IACA,cACA,aAKnB+E,iBAAmB,CACZV,OAAQ,CACJsC,EAAG,CACC1N,KAAM,UAEV2N,EAAG,CACC3N,KAAM,YAIlB,UAAAgN,GACI3N,KAAKqN,qBAAsB,EAC3ByP,MAAMnP,YACV,CACH,kBAAA+D,CAAmBvH,EAAMoF,EAAMjO,EAAO8P,GAC/B,MAAMpG,EAAS8R,MAAMpL,mBAAmBvH,EAAMoF,EAAMjO,EAAO8P,GAC3D,IAAI,IAAIjP,EAAI,EAAGA,EAAI6I,EAAO/I,OAAQE,IAC9B6I,EAAO7I,GAAGuX,QAAU1Z,KAAK4U,0BAA0BzS,EAAIb,GAAO+Z,OAElE,OAAOrQ,CACX,CACH,cAAAwG,CAAerH,EAAMoF,EAAMjO,EAAO8P,GAC3B,MAAMpG,EAAS8R,MAAMtL,eAAerH,EAAMoF,EAAMjO,EAAO8P,GACvD,IAAI,IAAIjP,EAAI,EAAGA,EAAI6I,EAAO/I,OAAQE,IAAI,CAClC,MAAMD,EAAOqN,EAAKjO,EAAQa,GAC1B6I,EAAO7I,GAAGuX,SAAU,IAAAjL,GAAevM,EAAK,GAAIlC,KAAK4U,0BAA0BzS,EAAIb,GAAO+Z,OAC1F,CACA,OAAOrQ,CACX,CACH,eAAAyG,CAAgBtH,EAAMoF,EAAMjO,EAAO8P,GAC5B,MAAMpG,EAAS8R,MAAMrL,gBAAgBtH,EAAMoF,EAAMjO,EAAO8P,GACxD,IAAI,IAAIjP,EAAI,EAAGA,EAAI6I,EAAO/I,OAAQE,IAAI,CAClC,MAAMD,EAAOqN,EAAKjO,EAAQa,GAC1B6I,EAAO7I,GAAGuX,SAAU,IAAAjL,GAAevM,GAAQA,EAAKV,IAAMU,EAAKV,EAAGxB,KAAK4U,0BAA0BzS,EAAIb,GAAO+Z,OAC5G,CACA,OAAOrQ,CACX,CACH,cAAAsI,GACO,MAAM/D,EAAOvP,KAAKiL,YAAYsE,KAC9B,IAAI/L,EAAM,EACV,IAAI,IAAIrB,EAAIoN,EAAKtN,OAAS,EAAGE,GAAK,IAAKA,EACnCqB,EAAMpC,KAAKoC,IAAIA,EAAK+L,EAAKpN,GAAGyG,KAAK5I,KAAK4U,0BAA0BzS,IAAM,GAE1E,OAAOqB,EAAM,GAAKA,CACtB,CACH,gBAAA+P,CAAiB/J,GACV,MAAMW,EAAOnK,KAAKiL,YACZ2G,EAAS5R,KAAKQ,MAAM+O,KAAKqC,QAAU,IACnC,OAAEzC,EAAO,OAAEE,GAAYlF,EACvBa,EAAShL,KAAKiS,UAAUzI,GACxB6E,EAAIc,EAAOsE,iBAAiBzI,EAAOqD,GACnCC,EAAIe,EAAOoE,iBAAiBzI,EAAOsD,GACnC9M,EAAIwJ,EAAO0O,QACjB,MAAO,CACHlG,MAAO5B,EAAOpI,IAAU,GACxBb,MAAO,IAAM0F,EAAI,KAAOC,GAAK9M,EAAI,KAAOA,EAAI,IAAM,IAE1D,CACA,MAAA0E,CAAO2D,GACH,MAAMoc,EAASjmB,KAAKiL,YAAYsE,KAChCvP,KAAKuX,eAAe0O,EAAQ,EAAGA,EAAOhkB,OAAQ4H,EAClD,CACA,cAAA0N,CAAe0O,EAAQ3kB,EAAO8P,EAAOvH,GACjC,MAAM+F,EAAiB,UAAT/F,GACR,OAAEsB,EAAO,OAAER,GAAY3K,KAAKiL,aAC5B,cAAEkL,EAAc,eAAED,GAAoBlW,KAAKqW,kBAAkB/U,EAAOuI,GACpEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACrB,IAAI,IAAIlJ,EAAIb,EAAOa,EAAIb,EAAQ8P,EAAOjP,IAAI,CACtC,MAAM+jB,EAAQD,EAAO9jB,GACf6I,GAAU4E,GAAS5P,KAAKiS,UAAU9P,GAClCuF,EAAa,CAAC,EACdye,EAASze,EAAW0D,GAASwE,EAAQzE,EAAO2Z,mBAAmB,IAAO3Z,EAAO8N,iBAAiBjO,EAAOI,IACrGgb,EAAS1e,EAAW4D,GAASsE,EAAQjF,EAAO+X,eAAiB/X,EAAOsO,iBAAiBjO,EAAOM,IAClG5D,EAAW2e,KAAOjG,MAAM+F,IAAW/F,MAAMgG,GACrClQ,IACAxO,EAAWI,QAAUqO,GAAiBnW,KAAK4U,0BAA0BzS,EAAG+jB,EAAMjgB,OAAS,SAAW4D,GAC9F+F,IACAlI,EAAWI,QAAQuT,OAAS,IAGpCrb,KAAKyW,cAAcyP,EAAO/jB,EAAGuF,EAAYmC,EAC7C,CACJ,CACH,yBAAA+K,CAA0BpL,EAAOK,GAC1B,MAAMmB,EAAShL,KAAKiS,UAAUzI,GAC9B,IAAI5B,EAASkV,MAAMlI,0BAA0BpL,EAAOK,GAChDjC,EAAOG,UACPH,EAASV,OAAOc,OAAO,CAAC,EAAGJ,EAAQ,CAC/BG,SAAS,KAGjB,MAAMsT,EAASzT,EAAOyT,OAKtB,MAJa,WAATxR,IACAjC,EAAOyT,OAAS,GAEpBzT,EAAOyT,SAAU,IAAA5M,GAAezD,GAAUA,EAAO0O,QAAS2B,GACnDzT,CACX,GAsyBJkT,mBAAoBA,EACpBwL,eAzfA,cAA6B9Z,EACzBC,UAAY,OACfA,gBAAkB,CACXgB,mBAAoB,OACpBC,gBAAiB,QACjB6Y,UAAU,EACVC,UAAU,GAEjB/Z,iBAAmB,CACZV,OAAQ,CACJuW,QAAS,CACL3hB,KAAM,YAEV4hB,QAAS,CACL5hB,KAAM,YAIlB,UAAAgN,GACI3N,KAAKqN,qBAAsB,EAC3BrN,KAAKsN,oBAAqB,EAC1BwP,MAAMnP,YACV,CACA,MAAAzH,CAAO2D,GACH,MAAMM,EAAOnK,KAAKiL,aACViD,QAASuY,EAAOlX,KAAM0W,EAAS,GAAG,SAAES,GAAcvc,EACpDwc,EAAqB3mB,KAAKQ,MAAM4V,oBACtC,IAAI,MAAE9U,EAAM,MAAE8P,IAAW,OAAiCjH,EAAM8b,EAAQU,GACxE3mB,KAAKmN,WAAa7L,EAClBtB,KAAKoN,WAAagE,GACd,OAAoBjH,KACpB7I,EAAQ,EACR8P,EAAQ6U,EAAOhkB,QAEnBwkB,EAAK3f,OAAS9G,KAAKQ,MACnBimB,EAAKG,cAAgB5mB,KAAKwJ,MAC1Bid,EAAKI,aAAeH,EAASG,WAC7BJ,EAAKR,OAASA,EACd,MAAMne,EAAU9H,KAAK2U,6BAA6B9K,GAC7C7J,KAAK8H,QAAQye,WACdze,EAAQ2U,YAAc,GAE1B3U,EAAQgf,QAAU9mB,KAAK8H,QAAQgf,QAC/B9mB,KAAKyW,cAAcgQ,OAAMnmB,EAAW,CAChCymB,UAAWJ,EACX7e,WACD+B,GACH7J,KAAKuX,eAAe0O,EAAQ3kB,EAAO8P,EAAOvH,EAC9C,CACA,cAAA0N,CAAe0O,EAAQ3kB,EAAO8P,EAAOvH,GACjC,MAAM+F,EAAiB,UAAT/F,GACR,OAAEsB,EAAO,OAAER,EAAO,SAAEkD,EAAS,SAAE6Y,GAAc1mB,KAAKiL,aAClD,cAAEkL,EAAc,eAAED,GAAoBlW,KAAKqW,kBAAkB/U,EAAOuI,GACpEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAEmb,EAAS,QAAEM,GAAa9mB,KAAK8H,QAC/Bkf,GAAe,OAASR,GAAYA,EAAW5T,OAAOC,kBACtDoU,EAAejnB,KAAKQ,MAAM4V,qBAAuBxG,GAAkB,SAAT/F,EAC1DX,EAAM5H,EAAQ8P,EACd8V,EAAcjB,EAAOhkB,OAC3B,IAAIklB,EAAa7lB,EAAQ,GAAKtB,KAAKiS,UAAU3Q,EAAQ,GACrD,IAAI,IAAIa,EAAI,EAAGA,EAAI+kB,IAAe/kB,EAAE,CAChC,MAAM+jB,EAAQD,EAAO9jB,GACfuF,EAAauf,EAAef,EAAQ,CAAC,EAC3C,GAAI/jB,EAAIb,GAASa,GAAK+G,EAAK,CACvBxB,EAAW2e,MAAO,EAClB,QACJ,CACA,MAAMrb,EAAShL,KAAKiS,UAAU9P,GACxBilB,GAAW,OAAcpc,EAAOM,IAChC6a,EAASze,EAAW0D,GAASD,EAAO8N,iBAAiBjO,EAAOI,GAAQjJ,GACpEikB,EAAS1e,EAAW4D,GAASsE,GAASwX,EAAWzc,EAAO+X,eAAiB/X,EAAOsO,iBAAiBpL,EAAW7N,KAAKyJ,WAAWkB,EAAQK,EAAQ6C,GAAY7C,EAAOM,GAAQnJ,GAC7KuF,EAAW2e,KAAOjG,MAAM+F,IAAW/F,MAAMgG,IAAWgB,EACpD1f,EAAWhE,KAAOvB,EAAI,GAAKf,KAAK4X,IAAIhO,EAAOI,GAAS+b,EAAW/b,IAAU4b,EACrEF,IACApf,EAAWsD,OAASA,EACpBtD,EAAWsN,IAAM0R,EAASnX,KAAKpN,IAE/B+T,IACAxO,EAAWI,QAAUqO,GAAiBnW,KAAK4U,0BAA0BzS,EAAG+jB,EAAMjgB,OAAS,SAAW4D,IAEjGod,GACDjnB,KAAKyW,cAAcyP,EAAO/jB,EAAGuF,EAAYmC,GAE7Csd,EAAanc,CACjB,CACJ,CACH,cAAAsI,GACO,MAAMnJ,EAAOnK,KAAKiL,YACZiD,EAAU/D,EAAK+D,QACfmZ,EAASnZ,EAAQpG,SAAWoG,EAAQpG,QAAQ2U,aAAe,EAC3DlN,EAAOpF,EAAKoF,MAAQ,GAC1B,IAAKA,EAAKtN,OACN,OAAOolB,EAEX,MAAMC,EAAa/X,EAAK,GAAG3G,KAAK5I,KAAK4U,0BAA0B,IACzD2S,EAAYhY,EAAKA,EAAKtN,OAAS,GAAG2G,KAAK5I,KAAK4U,0BAA0BrF,EAAKtN,OAAS,IAC1F,OAAOb,KAAKoC,IAAI6jB,EAAQC,EAAYC,GAAa,CACrD,CACA,IAAAnlB,GACI,MAAM+H,EAAOnK,KAAKiL,YAClBd,EAAK+D,QAAQsZ,oBAAoBxnB,KAAKQ,MAAM+T,UAAWpK,EAAKgB,OAAOE,MACnEyR,MAAM1a,MACV,GAmZJqlB,cAzNA,cAA4B3M,EACxBrO,UAAY,MACfA,gBAAkB,CACXyO,OAAQ,EACRC,SAAU,EACVC,cAAe,IACfC,OAAQ,SAoNhBuF,oBAAqBA,EACrB8G,gBAjNA,cAA8Blb,EAC1BC,UAAY,QACfA,gBAAkB,CACXgB,mBAAoB,OACpBC,gBAAiB,QACjBoB,UAAW,IACXyX,UAAU,EACVlS,SAAU,CACNoS,KAAM,CACF1Y,KAAM,WAIrBtB,iBAAmB,CACZkP,YAAa,EACb5P,OAAQ,CACJvK,EAAG,CACCb,KAAM,kBAIrB,gBAAA4S,CAAiB/J,GACV,MAAMmB,EAAS3K,KAAKiL,YAAYN,OAC1BK,EAAShL,KAAKiS,UAAUzI,GAC9B,MAAO,CACHgK,MAAO7I,EAAOkH,YAAYrI,GAC1Bb,MAAO,GAAKgC,EAAO8I,iBAAiBzI,EAAOL,EAAOU,OAE1D,CACA,eAAAoG,CAAgBtH,EAAMoF,EAAMjO,EAAO8P,GAC/B,OAAO,IAA4B+P,KAAKnhB,KAAjC,CAAuCmK,EAAMoF,EAAMjO,EAAO8P,EACrE,CACA,MAAAlL,CAAO2D,GACH,MAAMM,EAAOnK,KAAKiL,YACZwb,EAAOtc,EAAK+D,QACZ+X,EAAS9b,EAAKoF,MAAQ,GACtBqC,EAASzH,EAAKgB,OAAO0G,YAE3B,GADA4U,EAAKR,OAASA,EACD,WAATpc,EAAmB,CACnB,MAAM/B,EAAU9H,KAAK2U,6BAA6B9K,GAC7C7J,KAAK8H,QAAQye,WACdze,EAAQ2U,YAAc,GAE1B,MAAM/U,EAAa,CACfhC,OAAO,EACPiiB,UAAW/V,EAAO3P,SAAWgkB,EAAOhkB,OACpC6F,WAEJ9H,KAAKyW,cAAcgQ,OAAMnmB,EAAWoH,EAAYmC,EACpD,CACA7J,KAAKuX,eAAe0O,EAAQ,EAAGA,EAAOhkB,OAAQ4H,EAClD,CACA,cAAA0N,CAAe0O,EAAQ3kB,EAAO8P,EAAOvH,GACjC,MAAMf,EAAQ9I,KAAKiL,YAAYqE,OACzBM,EAAiB,UAAT/F,EACd,IAAI,IAAI1H,EAAIb,EAAOa,EAAIb,EAAQ8P,EAAOjP,IAAI,CACtC,MAAM+jB,EAAQD,EAAO9jB,GACf2F,EAAU9H,KAAK4U,0BAA0BzS,EAAG+jB,EAAMjgB,OAAS,SAAW4D,GACtE+d,EAAgB9e,EAAM+e,yBAAyB1lB,EAAGnC,KAAKiS,UAAU9P,GAAGX,GACpE6M,EAAIuB,EAAQ9G,EAAM0Y,QAAUoG,EAAcvZ,EAC1CC,EAAIsB,EAAQ9G,EAAM2Y,QAAUmG,EAActZ,EAC1C5G,EAAa,CACf2G,IACAC,IACAsQ,MAAOgJ,EAAchJ,MACrByH,KAAMjG,MAAM/R,IAAM+R,MAAM9R,GACxBxG,WAEJ9H,KAAKyW,cAAcyP,EAAO/jB,EAAGuF,EAAYmC,EAC7C,CACJ,GA4IJie,kBAzIA,cAAgCtb,EAC5BC,UAAY,UACfA,gBAAkB,CACXgB,oBAAoB,EACpBC,gBAAiB,QACjB6Y,UAAU,EACVxY,MAAM,GAEbtB,iBAAmB,CACZsb,YAAa,CACTle,KAAM,SAEVkC,OAAQ,CACJsC,EAAG,CACC1N,KAAM,UAEV2N,EAAG,CACC3N,KAAM,YAIrB,gBAAA4S,CAAiB/J,GACV,MAAMW,EAAOnK,KAAKiL,YACZ2G,EAAS5R,KAAKQ,MAAM+O,KAAKqC,QAAU,IACnC,OAAEzC,EAAO,OAAEE,GAAYlF,EACvBa,EAAShL,KAAKiS,UAAUzI,GACxB6E,EAAIc,EAAOsE,iBAAiBzI,EAAOqD,GACnCC,EAAIe,EAAOoE,iBAAiBzI,EAAOsD,GACzC,MAAO,CACHkF,MAAO5B,EAAOpI,IAAU,GACxBb,MAAO,IAAM0F,EAAI,KAAOC,EAAI,IAEpC,CACA,MAAApI,CAAO2D,GACH,MAAMM,EAAOnK,KAAKiL,aACVsE,KAAM0W,EAAS,IAAQ9b,EACzBwc,EAAqB3mB,KAAKQ,MAAM4V,oBACtC,IAAI,MAAE9U,EAAM,MAAE8P,IAAW,OAAiCjH,EAAM8b,EAAQU,GAOxE,GANA3mB,KAAKmN,WAAa7L,EAClBtB,KAAKoN,WAAagE,GACd,OAAoBjH,KACpB7I,EAAQ,EACR8P,EAAQ6U,EAAOhkB,QAEfjC,KAAK8H,QAAQye,SAAU,CAClBvmB,KAAKyN,oBACNzN,KAAK8N,cAET,MAAQI,QAASuY,EAAK,SAAEC,GAAcvc,EACtCsc,EAAK3f,OAAS9G,KAAKQ,MACnBimB,EAAKG,cAAgB5mB,KAAKwJ,MAC1Bid,EAAKI,aAAeH,EAASG,WAC7BJ,EAAKR,OAASA,EACd,MAAMne,EAAU9H,KAAK2U,6BAA6B9K,GAClD/B,EAAQgf,QAAU9mB,KAAK8H,QAAQgf,QAC/B9mB,KAAKyW,cAAcgQ,OAAMnmB,EAAW,CAChCymB,UAAWJ,EACX7e,WACD+B,EACP,MAAW7J,KAAKyN,4BACLtD,EAAK+D,QACZlO,KAAKyN,oBAAqB,GAE9BzN,KAAKuX,eAAe0O,EAAQ3kB,EAAO8P,EAAOvH,EAC9C,CACA,WAAAiE,GACI,MAAM,SAAEyY,GAAcvmB,KAAK8H,SACtB9H,KAAKyN,oBAAsB8Y,IAC5BvmB,KAAKyN,mBAAqBzN,KAAKQ,MAAMwnB,SAASC,WAAW,SAE7DnL,MAAMhP,aACV,CACA,cAAAyJ,CAAe0O,EAAQ3kB,EAAO8P,EAAOvH,GACjC,MAAM+F,EAAiB,UAAT/F,GACR,OAAEsB,EAAO,OAAER,EAAO,SAAEkD,EAAS,SAAE6Y,GAAc1mB,KAAKiL,YAClDqL,EAAYtW,KAAK4U,0BAA0BtT,EAAOuI,GAClDsM,EAAgBnW,KAAKiW,iBAAiBK,GACtCJ,EAAiBlW,KAAKkW,eAAerM,EAAMsM,GAC3C/K,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAEmb,EAAS,QAAEM,GAAa9mB,KAAK8H,QAC/Bkf,GAAe,OAASR,GAAYA,EAAW5T,OAAOC,kBACtDoU,EAAejnB,KAAKQ,MAAM4V,qBAAuBxG,GAAkB,SAAT/F,EAChE,IAAIsd,EAAa7lB,EAAQ,GAAKtB,KAAKiS,UAAU3Q,EAAQ,GACrD,IAAI,IAAIa,EAAIb,EAAOa,EAAIb,EAAQ8P,IAASjP,EAAE,CACtC,MAAM+jB,EAAQD,EAAO9jB,GACf6I,EAAShL,KAAKiS,UAAU9P,GACxBuF,EAAauf,EAAef,EAAQ,CAAC,EACrCkB,GAAW,OAAcpc,EAAOM,IAChC6a,EAASze,EAAW0D,GAASD,EAAO8N,iBAAiBjO,EAAOI,GAAQjJ,GACpEikB,EAAS1e,EAAW4D,GAASsE,GAASwX,EAAWzc,EAAO+X,eAAiB/X,EAAOsO,iBAAiBpL,EAAW7N,KAAKyJ,WAAWkB,EAAQK,EAAQ6C,GAAY7C,EAAOM,GAAQnJ,GAC7KuF,EAAW2e,KAAOjG,MAAM+F,IAAW/F,MAAMgG,IAAWgB,EACpD1f,EAAWhE,KAAOvB,EAAI,GAAKf,KAAK4X,IAAIhO,EAAOI,GAAS+b,EAAW/b,IAAU4b,EACrEF,IACApf,EAAWsD,OAASA,EACpBtD,EAAWsN,IAAM0R,EAASnX,KAAKpN,IAE/B+T,IACAxO,EAAWI,QAAUqO,GAAiBnW,KAAK4U,0BAA0BzS,EAAG+jB,EAAMjgB,OAAS,SAAW4D,IAEjGod,GACDjnB,KAAKyW,cAAcyP,EAAO/jB,EAAGuF,EAAYmC,GAE7Csd,EAAanc,CACjB,CACAhL,KAAKwW,oBAAoBL,EAAetM,EAAMyM,EAClD,CACH,cAAAhD,GACO,MAAMnJ,EAAOnK,KAAKiL,YACZsE,EAAOpF,EAAKoF,MAAQ,GAC1B,IAAKvP,KAAK8H,QAAQye,SAAU,CACxB,IAAI/iB,EAAM,EACV,IAAI,IAAIrB,EAAIoN,EAAKtN,OAAS,EAAGE,GAAK,IAAKA,EACnCqB,EAAMpC,KAAKoC,IAAIA,EAAK+L,EAAKpN,GAAGyG,KAAK5I,KAAK4U,0BAA0BzS,IAAM,GAE1E,OAAOqB,EAAM,GAAKA,CACtB,CACA,MAAM0K,EAAU/D,EAAK+D,QACfmZ,EAASnZ,EAAQpG,SAAWoG,EAAQpG,QAAQ2U,aAAe,EACjE,IAAKlN,EAAKtN,OACN,OAAOolB,EAEX,MAAMC,EAAa/X,EAAK,GAAG3G,KAAK5I,KAAK4U,0BAA0B,IACzD2S,EAAYhY,EAAKA,EAAKtN,OAAS,GAAG2G,KAAK5I,KAAK4U,0BAA0BrF,EAAKtN,OAAS,IAC1F,OAAOb,KAAKoC,IAAI6jB,EAAQC,EAAYC,GAAa,CACrD,KAmBA,SAASW,IACT,MAAM,IAAIC,MAAM,kFACpB,CAMI,MAAMC,EAUJ,eAAOC,CAASC,GACdphB,OAAOc,OAAOogB,EAAgBG,UAAWD,EAC7C,CACAxgB,QACA,WAAA/H,CAAY+H,GACR9H,KAAK8H,QAAUA,GAAW,CAAC,CAC/B,CAEA,IAAA0gB,GAAQ,CACR,OAAAC,GACI,OAAOP,GACX,CACA,KAAA/W,GACI,OAAO+W,GACX,CACA,MAAAQ,GACI,OAAOR,GACX,CACA,GAAA/kB,GACI,OAAO+kB,GACX,CACA,IAAAS,GACI,OAAOT,GACX,CACA,OAAAU,GACI,OAAOV,GACX,CACA,KAAAW,GACI,OAAOX,GACX,EAEJ,IAAIY,EACOV,EAGX,SAASW,EAAaC,EAAS3d,EAAM1C,EAAOsgB,GACxC,MAAM,WAAEle,EAAW,KAAEwE,EAAK,QAAE+B,GAAa0X,EACnC7d,EAASJ,EAAWE,YAAYE,OAChCqb,EAAWwC,EAAQ9a,SAAU8a,EAAQ9a,QAAQpG,QAAUkhB,EAAQ9a,QAAQpG,QAAQ0e,SAAkB,KACvG,GAAIrb,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBiG,GAAW/B,EAAKtN,OAAQ,CAC1E,MAAMinB,EAAe/d,EAAOge,eAAiB,IAAgB,IAC7D,IAAKF,EAAW,CACZ,MAAMG,EAASF,EAAa3Z,EAAMlE,EAAM1C,GACxC,GAAI6d,EAAU,CACV,MAAM,OAAE7b,GAAYI,EAAWE,aACzB,QAAEkB,GAAa6c,EACfK,EAAsBld,EAAQmd,MAAM,EAAGF,EAAOG,GAAK,GAAGtgB,UAAUugB,UAAWtD,KAAS,OAAcA,EAAMvb,EAAOU,QACrH+d,EAAOG,IAAMnoB,KAAKoC,IAAI,EAAG6lB,GACzB,MAAMI,EAAsBtd,EAAQmd,MAAMF,EAAOM,IAAIF,UAAWtD,KAAS,OAAcA,EAAMvb,EAAOU,QACpG+d,EAAOM,IAAMtoB,KAAKoC,IAAI,EAAGimB,EAC7B,CACA,OAAOL,CACX,CAAO,GAAIre,EAAWmC,eAAgB,CAClC,MAAMyc,EAAKpa,EAAK,GACV6C,EAA+B,oBAAhBuX,EAAGC,UAA2BD,EAAGC,SAASve,GAC/D,GAAI+G,EAAO,CACP,MAAM9Q,EAAQ4nB,EAAa3Z,EAAMlE,EAAM1C,EAAQyJ,GACzClJ,EAAMggB,EAAa3Z,EAAMlE,EAAM1C,EAAQyJ,GAC7C,MAAO,CACHmX,GAAIjoB,EAAMioB,GACVG,GAAIxgB,EAAIwgB,GAEhB,CACJ,CACJ,CACA,MAAO,CACHH,GAAI,EACJG,GAAIna,EAAKtN,OAAS,EAE1B,CACC,SAAS4nB,EAAyBrpB,EAAO6K,EAAMye,EAAUC,EAASd,GAC/D,MAAM5f,EAAW7I,EAAMwpB,+BACjBrhB,EAAQmhB,EAASze,GACvB,IAAI,IAAIlJ,EAAI,EAAGoH,EAAOF,EAASpH,OAAQE,EAAIoH,IAAQpH,EAAE,CACjD,MAAM,MAAEqH,EAAM,KAAE+F,GAAUlG,EAASlH,IAC7B,GAAEonB,EAAG,GAAEG,GAAQX,EAAa1f,EAASlH,GAAIkJ,EAAM1C,EAAOsgB,GAC5D,IAAI,IAAIgB,EAAIV,EAAIU,GAAKP,IAAMO,EAAE,CACzB,MAAMxV,EAAUlF,EAAK0a,GAChBxV,EAAQ4R,MACT0D,EAAQtV,EAASjL,EAAOygB,EAEhC,CACJ,CACJ,CAUC,SAASC,EAAkB1pB,EAAOspB,EAAUze,EAAM8e,EAAkBC,GACjE,MAAMpoB,EAAQ,GACd,IAAKooB,IAAqB5pB,EAAM6pB,cAAcP,GAC1C,OAAO9nB,EAeX,OADA6nB,EAAyBrpB,EAAO6K,EAAMye,EAZf,SAASrV,EAAS3K,EAAcN,IAC9C4gB,IAAqB,OAAe3V,EAASjU,EAAM+T,UAAW,KAG/DE,EAAQ6V,QAAQR,EAASzb,EAAGyb,EAASxb,EAAG6b,IACxCnoB,EAAMkB,KAAK,CACPuR,UACA3K,eACAN,SAGZ,GACgE,GACzDxH,CACX,CAuBC,SAASuoB,EAAyB/pB,EAAOspB,EAAUze,EAAM4d,EAAWkB,EAAkBC,GACnF,IAAIpoB,EAAQ,GACZ,MAAMwoB,EArDT,SAAkCnf,GAC/B,MAAMof,GAA8B,IAAvBpf,EAAKsY,QAAQ,KACpB+G,GAA8B,IAAvBrf,EAAKsY,QAAQ,KAC1B,OAAO,SAASgH,EAAKC,GACjB,MAAMC,EAASJ,EAAOrpB,KAAK4X,IAAI2R,EAAItc,EAAIuc,EAAIvc,GAAK,EAC1Cyc,EAASJ,EAAOtpB,KAAK4X,IAAI2R,EAAIrc,EAAIsc,EAAItc,GAAK,EAChD,OAAOlN,KAAK2pB,KAAK3pB,KAAK4pB,IAAIH,EAAQ,GAAKzpB,KAAK4pB,IAAIF,EAAQ,GAC5D,CACJ,CA6C2BG,CAAyB5f,GAChD,IAAI6f,EAActY,OAAOC,kBA8BzB,OADAgX,EAAyBrpB,EAAO6K,EAAMye,EA5BtC,SAAwBrV,EAAS3K,EAAcN,GAC3C,MAAM8gB,EAAU7V,EAAQ6V,QAAQR,EAASzb,EAAGyb,EAASxb,EAAG6b,GACxD,GAAIlB,IAAcqB,EACd,OAEJ,MAAMnH,EAAS1O,EAAQ0W,eAAehB,GAEtC,OADsBC,GAAoB5pB,EAAM6pB,cAAclH,MACzCmH,EACjB,OAEJ,MAAMc,EAAWZ,EAAeV,EAAU3G,GACtCiI,EAAWF,GACXlpB,EAAQ,CACJ,CACIyS,UACA3K,eACAN,UAGR0hB,EAAcE,GACPA,IAAaF,GACpBlpB,EAAMkB,KAAK,CACPuR,UACA3K,eACAN,SAGZ,GAEOxH,CACX,CACC,SAASqpB,EAAgB7qB,EAAOspB,EAAUze,EAAM4d,EAAWkB,EAAkBC,GAC1E,OAAKA,GAAqB5pB,EAAM6pB,cAAcP,GAG9B,MAATze,GAAiB4d,EAA6EsB,EAAyB/pB,EAAOspB,EAAUze,EAAM4d,EAAWkB,EAAkBC,GA7DrL,SAA+B5pB,EAAOspB,EAAUze,EAAM8e,GACnD,IAAInoB,EAAQ,GAmBZ,OADA6nB,EAAyBrpB,EAAO6K,EAAMye,EAjBtC,SAAwBrV,EAAS3K,EAAcN,GAC3C,MAAM,WAAE2U,EAAW,SAAEC,GAAc3J,EAAQ6W,SAAS,CAChD,aACA,YACDnB,IACG,MAAEvL,IAAW,OAAkBnK,EAAS,CAC1CpG,EAAGyb,EAASzb,EACZC,EAAGwb,EAASxb,KAEZ,OAAcsQ,EAAOT,EAAYC,IACjCpc,EAAMkB,KAAK,CACPuR,UACA3K,eACAN,SAGZ,GAEOxH,CACX,CAwCwCupB,CAAsB/qB,EAAOspB,EAAUze,EAAM8e,GAFtE,EAGf,CACC,SAASqB,EAAahrB,EAAOspB,EAAUze,EAAM4d,EAAWkB,GACrD,MAAMnoB,EAAQ,GACRypB,EAAuB,MAATpgB,EAAe,WAAa,WAChD,IAAIqgB,GAAiB,EAWrB,OAVA7B,EAAyBrpB,EAAO6K,EAAMye,EAAU,CAACrV,EAAS3K,EAAcN,KAChEiL,EAAQgX,IAAgBhX,EAAQgX,GAAa3B,EAASze,GAAO8e,KAC7DnoB,EAAMkB,KAAK,CACPuR,UACA3K,eACAN,UAEJkiB,EAAiBA,GAAkBjX,EAAQ6V,QAAQR,EAASzb,EAAGyb,EAASxb,EAAG6b,MAG/ElB,IAAcyC,EACP,GAEJ1pB,CACX,CACC,IAAI2pB,EAAc,CACf9B,2BACA+B,MAAO,CACV,KAAApiB,CAAOhJ,EAAO4E,EAAG0C,EAASqiB,GACf,MAAML,GAAW,OAAoB1kB,EAAG5E,GAClC6K,EAAOvD,EAAQuD,MAAQ,IACvB+e,EAAmBtiB,EAAQsiB,mBAAoB,EAC/CpoB,EAAQ8F,EAAQmhB,UAAYiB,EAAkB1pB,EAAOspB,EAAUze,EAAM8e,EAAkBC,GAAoBiB,EAAgB7qB,EAAOspB,EAAUze,GAAM,EAAO8e,EAAkBC,GAC3K/V,EAAW,GACjB,OAAKrS,EAAMC,QAGXzB,EAAMwpB,+BAA+BhpB,QAASmJ,IAC1C,MAAMX,EAAQxH,EAAM,GAAGwH,MACjBiL,EAAUtK,EAAKoF,KAAK/F,GACtBiL,IAAYA,EAAQ4R,MACpBhS,EAASnR,KAAK,CACVuR,UACA3K,aAAcK,EAAKX,MACnBA,YAIL6K,GAbI,EAcf,EACP,OAAAnG,CAAS1N,EAAO4E,EAAG0C,EAASqiB,GACjB,MAAML,GAAW,OAAoB1kB,EAAG5E,GAClC6K,EAAOvD,EAAQuD,MAAQ,KACvB+e,EAAmBtiB,EAAQsiB,mBAAoB,EACrD,IAAIpoB,EAAQ8F,EAAQmhB,UAAYiB,EAAkB1pB,EAAOspB,EAAUze,EAAM8e,EAAkBC,GAAoBiB,EAAgB7qB,EAAOspB,EAAUze,GAAM,EAAO8e,EAAkBC,GAC/K,GAAIpoB,EAAMC,OAAS,EAAG,CAClB,MAAM6H,EAAe9H,EAAM,GAAG8H,aACxByF,EAAO/O,EAAMiP,eAAe3F,GAAcyF,KAChDvN,EAAQ,GACR,IAAI,IAAIG,EAAI,EAAGA,EAAIoN,EAAKtN,SAAUE,EAC9BH,EAAMkB,KAAK,CACPuR,QAASlF,EAAKpN,GACd2H,eACAN,MAAOrH,GAGnB,CACA,OAAOH,CACX,EACP,KAAAkkB,CAAO1lB,EAAO4E,EAAG0C,EAASqiB,GAIf,OAAOD,EAAkB1pB,GAHR,OAAoB4E,EAAG5E,GAC3BsH,EAAQuD,MAAQ,KAEmB8e,EADvBriB,EAAQsiB,mBAAoB,EAEzD,EACP,OAAAyB,CAASrrB,EAAO4E,EAAG0C,EAASqiB,GACjB,MAAML,GAAW,OAAoB1kB,EAAG5E,GAClC6K,EAAOvD,EAAQuD,MAAQ,KACvB+e,EAAmBtiB,EAAQsiB,mBAAoB,EACrD,OAAOiB,EAAgB7qB,EAAOspB,EAAUze,EAAMvD,EAAQmhB,UAAWkB,EAAkBC,EACvF,EACP,CAAA/b,CAAG7N,EAAO4E,EAAG0C,EAASqiB,GAEX,OAAOqB,EAAahrB,GADH,OAAoB4E,EAAG5E,GACH,IAAKsH,EAAQmhB,UAAWkB,EACjE,EACP,CAAA7b,CAAG9N,EAAO4E,EAAG0C,EAASqiB,GAEX,OAAOqB,EAAahrB,GADH,OAAoB4E,EAAG5E,GACH,IAAKsH,EAAQmhB,UAAWkB,EACjE,IAIR,MAAM2B,EAAmB,CACrB,OACA,MACA,QACA,UAEJ,SAASC,EAAiBC,EAAOlC,GAC7B,OAAOkC,EAAMhgB,OAAQyC,GAAIA,EAAEwd,MAAQnC,EACvC,CACA,SAASoC,EAA4BF,EAAO3gB,GACxC,OAAO2gB,EAAMhgB,OAAQyC,IAAyC,IAArCqd,EAAiBnI,QAAQlV,EAAEwd,MAAexd,EAAE0d,IAAI9gB,OAASA,EACtF,CACA,SAAS+gB,EAAaJ,EAAO/iB,GACzB,OAAO+iB,EAAMtT,KAAK,CAACC,EAAG/E,KAClB,MAAMyY,EAAKpjB,EAAU2K,EAAI+E,EACnB6B,EAAKvR,EAAU0P,EAAI/E,EACzB,OAAOyY,EAAG1L,SAAWnG,EAAGmG,OAAS0L,EAAG7iB,MAAQgR,EAAGhR,MAAQ6iB,EAAG1L,OAASnG,EAAGmG,QAE9E,CAqCC,SAAS2L,EAAcC,EAASC,GAC7B,MAAMliB,EAnBV,SAAqBiiB,GACjB,MAAMjiB,EAAS,CAAC,EAChB,IAAK,MAAMmiB,KAAQF,EAAQ,CACvB,MAAM,MAAE7iB,EAAM,IAAEuiB,EAAI,YAAES,GAAiBD,EACvC,IAAK/iB,IAAUoiB,EAAiBa,SAASV,GACrC,SAEJ,MAAMW,EAAStiB,EAAOZ,KAAWY,EAAOZ,GAAS,CAC7C0H,MAAO,EACPyb,OAAQ,EACRlM,OAAQ,EACR/X,KAAM,IAEVgkB,EAAOxb,QACPwb,EAAOjM,QAAU+L,CACrB,CACA,OAAOpiB,CACX,CAEmBwiB,CAAYP,IACrB,aAAEQ,EAAa,cAAEC,GAAmBR,EAC1C,IAAIrqB,EAAGoH,EAAM0jB,EACb,IAAI9qB,EAAI,EAAGoH,EAAOgjB,EAAQtqB,OAAQE,EAAIoH,IAAQpH,EAAE,CAC5C8qB,EAASV,EAAQpqB,GACjB,MAAM,SAAE+qB,GAAcD,EAAOd,IACvBziB,EAAQY,EAAO2iB,EAAOvjB,OACtBtF,EAASsF,GAASujB,EAAOP,YAAchjB,EAAMiX,OAC/CsM,EAAO/S,YACP+S,EAAOpP,MAAQzZ,EAASA,EAAS2oB,EAAeG,GAAYV,EAAOW,eACnEF,EAAOnP,OAASkP,IAEhBC,EAAOpP,MAAQkP,EACfE,EAAOnP,OAAS1Z,EAASA,EAAS4oB,EAAgBE,GAAYV,EAAOY,gBAE7E,CACA,OAAO9iB,CACX,CAmBA,SAAS+iB,EAAeC,EAAY/Y,EAAWoE,EAAG/E,GAC9C,OAAOxS,KAAKoC,IAAI8pB,EAAW3U,GAAIpE,EAAUoE,IAAMvX,KAAKoC,IAAI8pB,EAAW1Z,GAAIW,EAAUX,GACrF,CACA,SAAS2Z,EAAiBD,EAAYE,GAClCF,EAAWzZ,IAAMzS,KAAKoC,IAAI8pB,EAAWzZ,IAAK2Z,EAAW3Z,KACrDyZ,EAAWtZ,KAAO5S,KAAKoC,IAAI8pB,EAAWtZ,KAAMwZ,EAAWxZ,MACvDsZ,EAAWvZ,OAAS3S,KAAKoC,IAAI8pB,EAAWvZ,OAAQyZ,EAAWzZ,QAC3DuZ,EAAWxZ,MAAQ1S,KAAKoC,IAAI8pB,EAAWxZ,MAAO0Z,EAAW1Z,MAC7D,CACA,SAAS2Z,EAAWlZ,EAAWiY,EAAQS,EAAQ3iB,GAC3C,MAAM,IAAE2hB,EAAI,IAAEE,GAASc,EACjBK,EAAa/Y,EAAU+Y,WAC7B,KAAK,IAAAnrB,GAAS8pB,GAAM,CACZgB,EAAOrkB,OACP2L,EAAU0X,IAAQgB,EAAOrkB,MAE7B,MAAMc,EAAQY,EAAO2iB,EAAOvjB,QAAU,CAClCd,KAAM,EACNwI,MAAO,GAEX1H,EAAMd,KAAOxH,KAAKoC,IAAIkG,EAAMd,KAAMqkB,EAAO/S,WAAaiS,EAAIrO,OAASqO,EAAItO,OACvEoP,EAAOrkB,KAAOc,EAAMd,KAAOc,EAAM0H,MACjCmD,EAAU0X,IAAQgB,EAAOrkB,IAC7B,CACIujB,EAAIuB,YACJH,EAAiBD,EAAYnB,EAAIuB,cAErC,MAAMC,EAAWvsB,KAAKoC,IAAI,EAAGgpB,EAAOoB,WAAaP,EAAeC,EAAY/Y,EAAW,OAAQ,UACzFsZ,EAAYzsB,KAAKoC,IAAI,EAAGgpB,EAAOsB,YAAcT,EAAeC,EAAY/Y,EAAW,MAAO,WAC1FwZ,EAAeJ,IAAapZ,EAAUyZ,EACtCC,EAAgBJ,IAActZ,EAAU2Z,EAG9C,OAFA3Z,EAAUyZ,EAAIL,EACdpZ,EAAU2Z,EAAIL,EACPZ,EAAO/S,WAAa,CACvBiU,KAAMJ,EACNK,MAAOH,GACP,CACAE,KAAMF,EACNG,MAAOL,EAEf,CAaA,SAASM,EAAWnU,EAAY3F,GAC5B,MAAM+Y,EAAa/Y,EAAU+Y,WAC7B,SAASgB,EAAmBC,GACxB,MAAMC,EAAS,CACXxa,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,GAKZ,OAHAwa,EAAUvtB,QAASirB,IACfuC,EAAOvC,GAAO7qB,KAAKoC,IAAI+Q,EAAU0X,GAAMqB,EAAWrB,MAE/CuC,CACX,CACA,OAAoBF,EAAbpU,EAAgC,CACnC,OACA,SACoB,CACpB,MACA,UAER,CACA,SAASuU,EAASC,EAAOna,EAAWiY,EAAQliB,GACxC,MAAMqkB,EAAa,GACnB,IAAIxsB,EAAGoH,EAAM0jB,EAAQd,EAAKyC,EAAOC,EACjC,IAAI1sB,EAAI,EAAGoH,EAAOmlB,EAAMzsB,OAAQ2sB,EAAQ,EAAGzsB,EAAIoH,IAAQpH,EAAE,CACrD8qB,EAASyB,EAAMvsB,GACfgqB,EAAMc,EAAOd,IACbA,EAAIjmB,OAAO+mB,EAAOpP,OAAStJ,EAAUyZ,EAAGf,EAAOnP,QAAUvJ,EAAU2Z,EAAGG,EAAWpB,EAAO/S,WAAY3F,IACpG,MAAM,KAAE4Z,EAAK,MAAEC,GAAWX,EAAWlZ,EAAWiY,EAAQS,EAAQ3iB,GAChEskB,GAAST,GAAQQ,EAAW1sB,OAC5B4sB,EAAUA,GAAWT,EAChBjC,EAAIe,UACLyB,EAAWzrB,KAAK+pB,EAExB,CACA,OAAO2B,GAASH,EAASE,EAAYpa,EAAWiY,EAAQliB,IAAWukB,CACvE,CACA,SAASC,EAAW3C,EAAKnY,EAAMH,EAAKgK,EAAOC,GACvCqO,EAAItY,IAAMA,EACVsY,EAAInY,KAAOA,EACXmY,EAAIrY,MAAQE,EAAO6J,EACnBsO,EAAIpY,OAASF,EAAMiK,EACnBqO,EAAItO,MAAQA,EACZsO,EAAIrO,OAASA,CACjB,CACA,SAASiR,GAAWL,EAAOna,EAAWiY,EAAQliB,GAC1C,MAAM0kB,EAAcxC,EAAOyC,QAC3B,IAAI,EAAE5gB,EAAE,EAAEC,GAAOiG,EACjB,IAAK,MAAM0Y,KAAUyB,EAAM,CACvB,MAAMvC,EAAMc,EAAOd,IACbziB,EAAQY,EAAO2iB,EAAOvjB,QAAU,CAClC0H,MAAO,EACPyb,OAAQ,EACRlM,OAAQ,GAENA,EAASsM,EAAOP,YAAchjB,EAAMiX,QAAU,EACpD,GAAIsM,EAAO/S,WAAY,CACnB,MAAM2D,EAAQtJ,EAAUyZ,EAAIrN,EACtB7C,EAASpU,EAAMd,MAAQujB,EAAIrO,QAC7B,OAAQpU,EAAMpI,SACdgN,EAAI5E,EAAMpI,OAEV6qB,EAAIe,SACJ4B,EAAW3C,EAAK6C,EAAYhb,KAAM1F,EAAGke,EAAOoB,WAAaoB,EAAYlb,MAAQkb,EAAYhb,KAAM8J,GAE/FgR,EAAW3C,EAAK5X,EAAUP,KAAOtK,EAAMmjB,OAAQve,EAAGuP,EAAOC,GAE7DpU,EAAMpI,MAAQgN,EACd5E,EAAMmjB,QAAUhP,EAChBvP,EAAI6d,EAAIpY,MACZ,KAAO,CACH,MAAM+J,EAASvJ,EAAU2Z,EAAIvN,EACvB9C,EAAQnU,EAAMd,MAAQujB,EAAItO,OAC5B,OAAQnU,EAAMpI,SACd+M,EAAI3E,EAAMpI,OAEV6qB,EAAIe,SACJ4B,EAAW3C,EAAK9d,EAAG2gB,EAAYnb,IAAKgK,EAAO2O,EAAOsB,YAAckB,EAAYjb,OAASib,EAAYnb,KAEjGib,EAAW3C,EAAK9d,EAAGkG,EAAUV,IAAMnK,EAAMmjB,OAAQhP,EAAOC,GAE5DpU,EAAMpI,MAAQ+M,EACd3E,EAAMmjB,QAAU/O,EAChBzP,EAAI8d,EAAIrY,KACZ,CACJ,CACAS,EAAUlG,EAAIA,EACdkG,EAAUjG,EAAIA,CAClB,CACA,IAAIie,GAAU,CACb,MAAA2C,CAAQ1uB,EAAO0B,GACH1B,EAAMkuB,QACPluB,EAAMkuB,MAAQ,IAElBxsB,EAAKgrB,SAAWhrB,EAAKgrB,WAAY,EACjChrB,EAAK4nB,SAAW5nB,EAAK4nB,UAAY,MACjC5nB,EAAKye,OAASze,EAAKye,QAAU,EAC7Bze,EAAKitB,QAAUjtB,EAAKitB,SAAW,WAC3B,MAAO,CACH,CACIC,EAAG,EACH,IAAAhtB,CAAMmS,GACFrS,EAAKE,KAAKmS,EACd,GAGZ,EACA/T,EAAMkuB,MAAMxrB,KAAKhB,EACrB,EACH,SAAAmtB,CAAW7uB,EAAO8uB,GACX,MAAM9lB,EAAQhJ,EAAMkuB,MAAQluB,EAAMkuB,MAAM/K,QAAQ2L,IAAe,GAChD,IAAX9lB,GACAhJ,EAAMkuB,MAAMjX,OAAOjO,EAAO,EAElC,EACH,SAAAxC,CAAWxG,EAAO0B,EAAM4F,GACjB5F,EAAKgrB,SAAWplB,EAAQolB,SACxBhrB,EAAK4nB,SAAWhiB,EAAQgiB,SACxB5nB,EAAKye,OAAS7Y,EAAQ6Y,MAC1B,EACH,MAAAza,CAAQ1F,EAAOqd,EAAOC,EAAQyR,GACvB,IAAK/uB,EACD,OAEJ,MAAMyuB,GAAU,OAAUzuB,EAAMsH,QAAQmlB,OAAOgC,SACzC9B,EAAiB/rB,KAAKoC,IAAIqa,EAAQoR,EAAQpR,MAAO,GACjDuP,EAAkBhsB,KAAKoC,IAAIsa,EAASmR,EAAQnR,OAAQ,GACpD4Q,EAvMd,SAA0BA,GACtB,MAAMc,EAxDV,SAAmBd,GACf,MAAMc,EAAc,GACpB,IAAIrtB,EAAGoH,EAAM4iB,EAAKF,EAAKviB,EAAOgjB,EAC9B,IAAIvqB,EAAI,EAAGoH,GAAQmlB,GAAS,IAAIzsB,OAAQE,EAAIoH,IAAQpH,EAChDgqB,EAAMuC,EAAMvsB,KACT2nB,SAAUmC,EAAMnkB,SAAW4B,QAAQgjB,cAAa,IAAUP,GAC7DqD,EAAYtsB,KAAK,CACbsG,MAAOrH,EACPgqB,MACAF,MACA/R,WAAYiS,EAAIxJ,eAChBhC,OAAQwL,EAAIxL,OACZjX,MAAOA,GAASuiB,EAAMviB,EACtBgjB,gBAGR,OAAO8C,CACX,CAuCwBC,CAAUf,GACxBxB,EAAWd,EAAaoD,EAAYxjB,OAAQygB,GAAOA,EAAKN,IAAIe,WAAW,GACvElZ,EAAOoY,EAAaL,EAAiByD,EAAa,SAAS,GAC3D1b,EAAQsY,EAAaL,EAAiByD,EAAa,UACnD3b,EAAMuY,EAAaL,EAAiByD,EAAa,QAAQ,GACzDzb,EAASqY,EAAaL,EAAiByD,EAAa,WACpDE,EAAmBxD,EAA4BsD,EAAa,KAC5DG,EAAiBzD,EAA4BsD,EAAa,KAChE,MAAO,CACHtC,WACA0C,WAAY5b,EAAKwE,OAAO3E,GACxBgc,eAAgB/b,EAAM0E,OAAOmX,GAAgBnX,OAAOzE,GAAQyE,OAAOkX,GACnEnb,UAAWwX,EAAiByD,EAAa,aACzCM,SAAU9b,EAAKwE,OAAO1E,GAAO0E,OAAOmX,GACpCzV,WAAYrG,EAAI2E,OAAOzE,GAAQyE,OAAOkX,GAE9C,CAsLsBK,CAAiBvvB,EAAMkuB,OAC/BsB,EAAgBtB,EAAMoB,SACtBG,EAAkBvB,EAAMxU,YAC9B,OAAK1Z,EAAMkuB,MAAQvC,IACiB,oBAArBA,EAAI+D,cACX/D,EAAI+D,iBAGZ,MAAMC,EAA0BH,EAAc3sB,OAAO,CAACqc,EAAO+M,IAAOA,EAAKN,IAAIrkB,UAAwC,IAA7B2kB,EAAKN,IAAIrkB,QAAQgZ,QAAoBpB,EAAQA,EAAQ,EAAG,IAAM,EAChJ8M,EAAStlB,OAAO0O,OAAO,CACzBgY,WAAY/P,EACZiQ,YAAahQ,EACbmR,UACA9B,iBACAC,kBACAL,aAAcI,EAAiB,EAAIgD,EACnCnD,cAAeI,EAAkB,IAE/BE,EAAapmB,OAAOc,OAAO,CAAC,EAAGinB,GACrC1B,EAAiBD,GAAY,OAAUiC,IACvC,MAAMhb,EAAYrN,OAAOc,OAAO,CAC5BslB,aACAU,EAAGb,EACHe,EAAGd,EACH/e,EAAG4gB,EAAQjb,KACX1F,EAAG2gB,EAAQpb,KACZob,GACG3kB,EAASgiB,EAAc0D,EAAcxX,OAAOyX,GAAkBzD,GACpEiC,EAASC,EAAMxB,SAAU3Y,EAAWiY,EAAQliB,GAC5CmkB,EAASuB,EAAezb,EAAWiY,EAAQliB,GACvCmkB,EAASwB,EAAiB1b,EAAWiY,EAAQliB,IAC7CmkB,EAASuB,EAAezb,EAAWiY,EAAQliB,GA3KvD,SAA0BiK,GACtB,MAAM+Y,EAAa/Y,EAAU+Y,WAC7B,SAAS8C,EAAUnE,GACf,MAAMoE,EAASjvB,KAAKoC,IAAI8pB,EAAWrB,GAAO1X,EAAU0X,GAAM,GAE1D,OADA1X,EAAU0X,IAAQoE,EACXA,CACX,CACA9b,EAAUjG,GAAK8hB,EAAU,OACzB7b,EAAUlG,GAAK+hB,EAAU,QACzBA,EAAU,SACVA,EAAU,SACd,CAkKQE,CAAiB/b,GACjBwa,GAAWL,EAAMkB,WAAYrb,EAAWiY,EAAQliB,GAChDiK,EAAUlG,GAAKkG,EAAUyZ,EACzBzZ,EAAUjG,GAAKiG,EAAU2Z,EACzBa,GAAWL,EAAMmB,eAAgBtb,EAAWiY,EAAQliB,GACpD9J,EAAM+T,UAAY,CACdP,KAAMO,EAAUP,KAChBH,IAAKU,EAAUV,IACfC,MAAOS,EAAUP,KAAOO,EAAUyZ,EAClCja,OAAQQ,EAAUV,IAAMU,EAAU2Z,EAClCpQ,OAAQvJ,EAAU2Z,EAClBrQ,MAAOtJ,EAAUyZ,IAErB,OAAKU,EAAMna,UAAY0Y,IACnB,MAAMd,EAAMc,EAAOd,IACnBjlB,OAAOc,OAAOmkB,EAAK3rB,EAAM+T,WACzB4X,EAAIjmB,OAAOqO,EAAUyZ,EAAGzZ,EAAU2Z,EAAG,CACjCla,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,KAGpB,GAGJ,MAAMwc,GACL,cAAAC,CAAeC,EAAQ9U,GAAc,CACrC,cAAA+U,CAAe7b,GACR,OAAO,CACX,CACH,gBAAA8b,CAAiBnwB,EAAOG,EAAMiwB,GAAW,CACzC,mBAAAC,CAAoBrwB,EAAOG,EAAMiwB,GAAW,CAC5C,mBAAAE,GACO,OAAO,CACX,CACH,cAAAC,CAAetc,EAASoJ,EAAOC,EAAQnC,GAGhC,OAFAkC,EAAQzc,KAAKoC,IAAI,EAAGqa,GAASpJ,EAAQoJ,OACrCC,EAASA,GAAUrJ,EAAQqJ,OACpB,CACHD,QACAC,OAAQ1c,KAAKoC,IAAI,EAAGmY,EAAcva,KAAKoE,MAAMqY,EAAQlC,GAAemC,GAE5E,CACH,UAAAkT,CAAWP,GACJ,OAAO,CACX,CACH,YAAAQ,CAAapqB,GACV,EAGJ,MAAMqqB,WAAsBX,GACxB,cAAAC,CAAetuB,GACX,OAAOA,GAAQA,EAAK+O,YAAc/O,EAAK+O,WAAW,OAAS,IAC/D,CACA,YAAAggB,CAAapqB,GACTA,EAAOiB,QAAQT,WAAY,CAC/B,EAGJ,MAAM8pB,GAAc,WACbC,GAAc,CACjBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAEVC,GAAiBnpB,GAAkB,OAAVA,GAA4B,KAAVA,EAoCjD,MAAMopB,KAAuB,KAA+B,CACxDC,SAAS,GAOb,SAASC,GAAezxB,EAAOG,EAAMiwB,GAC7BpwB,GAASA,EAAMiwB,QACfjwB,EAAMiwB,OAAOI,oBAAoBlwB,EAAMiwB,EAAUmB,GAEzD,CAYA,SAASG,GAAiBC,EAAU1B,GAChC,IAAK,MAAM2B,KAAQD,EACf,GAAIC,IAAS3B,GAAU2B,EAAKC,SAAS5B,GACjC,OAAO,CAGnB,CACA,SAAS6B,GAAqB9xB,EAAOG,EAAMiwB,GACvC,MAAMH,EAASjwB,EAAMiwB,OACf8B,EAAW,IAAIC,iBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMrZ,KAASoZ,EAChBC,EAAUA,GAAWR,GAAiB7Y,EAAMsZ,WAAYlC,GACxDiC,EAAUA,IAAYR,GAAiB7Y,EAAMuZ,aAAcnC,GAE3DiC,GACA9B,MAOR,OAJA2B,EAASM,QAAQC,SAAU,CACvBC,WAAW,EACXC,SAAS,IAENT,CACX,CACA,SAASU,GAAqBzyB,EAAOG,EAAMiwB,GACvC,MAAMH,EAASjwB,EAAMiwB,OACf8B,EAAW,IAAIC,iBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMrZ,KAASoZ,EAChBC,EAAUA,GAAWR,GAAiB7Y,EAAMuZ,aAAcnC,GAC1DiC,EAAUA,IAAYR,GAAiB7Y,EAAMsZ,WAAYlC,GAEzDiC,GACA9B,MAOR,OAJA2B,EAASM,QAAQC,SAAU,CACvBC,WAAW,EACXC,SAAS,IAENT,CACX,CACA,MAAMW,GAAqB,IAAI/yB,IAC/B,IAAIgzB,GAAsB,EAC1B,SAASC,KACL,MAAMC,EAAM3xB,OAAO4xB,iBACfD,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmBlyB,QAAQ,CAACuyB,EAAQ/yB,KAC5BA,EAAMgzB,0BAA4BH,GAClCE,MAGZ,CAaA,SAASE,GAAqBjzB,EAAOG,EAAMiwB,GACvC,MAAMH,EAASjwB,EAAMiwB,OACfiD,EAAYjD,IAAU,OAAeA,GAC3C,IAAKiD,EACD,OAEJ,MAAMH,GAAS,OAAU,CAAC1V,EAAOC,KAC7B,MAAMkQ,EAAI0F,EAAUC,YACpB/C,EAAS/S,EAAOC,GACZkQ,EAAI0F,EAAUC,aACd/C,KAELlvB,QACG6wB,EAAW,IAAIqB,eAAgBnB,IACjC,MAAMpZ,EAAQoZ,EAAQ,GAChB5U,EAAQxE,EAAMwa,YAAYhW,MAC1BC,EAASzE,EAAMwa,YAAY/V,OACnB,IAAVD,GAA0B,IAAXC,GAGnByV,EAAO1V,EAAOC,KAIlB,OAFAyU,EAASM,QAAQa,GAlCrB,SAAuClzB,EAAO+yB,GACrCL,GAAmBtqB,MACpBlH,OAAOivB,iBAAiB,SAAUyC,IAEtCF,GAAmBpwB,IAAItC,EAAO+yB,EAClC,CA8BIO,CAA8BtzB,EAAO+yB,GAC9BhB,CACX,CACA,SAASwB,GAAgBvzB,EAAOG,EAAM4xB,GAC9BA,GACAA,EAASyB,aAEA,WAATrzB,GApCR,SAAyCH,GACrC0yB,GAAmBrvB,OAAOrD,GACrB0yB,GAAmBtqB,MACpBlH,OAAOmvB,oBAAoB,SAAUuC,GAE7C,CAgCQa,CAAgCzzB,EAExC,CACA,SAAS0zB,GAAqB1zB,EAAOG,EAAMiwB,GACvC,MAAMH,EAASjwB,EAAMiwB,OACf0D,GAAQ,OAAWnxB,IACH,OAAdxC,EAAMmM,KACNikB,EAtHZ,SAAyB5tB,EAAOxC,GAC5B,MAAMG,EAAOywB,GAAYpuB,EAAMrC,OAASqC,EAAMrC,MACxC,EAAE0N,EAAE,EAAEC,IAAO,OAAoBtL,EAAOxC,GAC9C,MAAO,CACHG,OACAH,QACA4zB,OAAQpxB,EACRqL,OAAS/N,IAAN+N,EAAkBA,EAAI,KACzBC,OAAShO,IAANgO,EAAkBA,EAAI,KAEjC,CA4GqB+lB,CAAgBrxB,EAAOxC,KAErCA,GAEH,OApIJ,SAAqB4xB,EAAMzxB,EAAMiwB,GACzBwB,GACAA,EAAKzB,iBAAiBhwB,EAAMiwB,EAAUmB,GAE9C,CA+HIuC,CAAY7D,EAAQ9vB,EAAMwzB,GACnBA,CACX,CACC,MAAMI,WAAoBhE,GAC1B,cAAAC,CAAeC,EAAQ9U,GAChB,MAAM9G,EAAU4b,GAAUA,EAAOxf,YAAcwf,EAAOxf,WAAW,MACjE,OAAI4D,GAAWA,EAAQ4b,SAAWA,GA/KzC,SAAoBA,EAAQ9U,GACzB,MAAMM,EAAQwU,EAAOxU,MACfuY,EAAe/D,EAAOgE,aAAa,UACnCC,EAAcjE,EAAOgE,aAAa,SAcxC,GAbAhE,EAAOU,IAAe,CAClBjwB,QAAS,CACL4c,OAAQ0W,EACR3W,MAAO6W,EACPzY,MAAO,CACH6E,QAAS7E,EAAM6E,QACfhD,OAAQ7B,EAAM6B,OACdD,MAAO5B,EAAM4B,SAIzB5B,EAAM6E,QAAU7E,EAAM6E,SAAW,QACjC7E,EAAM0Y,UAAY1Y,EAAM0Y,WAAa,aACjC7C,GAAc4C,GAAc,CAC5B,MAAME,GAAe,OAAanE,EAAQ,cACrBnwB,IAAjBs0B,IACAnE,EAAO5S,MAAQ+W,EAEvB,CACA,GAAI9C,GAAc0C,GACd,GAA4B,KAAxB/D,EAAOxU,MAAM6B,OACb2S,EAAO3S,OAAS2S,EAAO5S,OAASlC,GAAe,OAC5C,CACH,MAAMkZ,GAAgB,OAAapE,EAAQ,eACrBnwB,IAAlBu0B,IACApE,EAAO3S,OAAS+W,EAExB,CAGR,CA8IYC,CAAWrE,EAAQ9U,GACZ9G,GAEJ,IACX,CACH,cAAA6b,CAAe7b,GACR,MAAM4b,EAAS5b,EAAQ4b,OACvB,IAAKA,EAAOU,IACR,OAAO,EAEX,MAAMjwB,EAAUuvB,EAAOU,IAAajwB,QACpC,CACI,SACA,SACFF,QAASgE,IACP,MAAM2D,EAAQzH,EAAQ8D,IAClB,OAAc2D,GACd8nB,EAAOsE,gBAAgB/vB,GAEvByrB,EAAOuE,aAAahwB,EAAM2D,KAGlC,MAAMsT,EAAQ/a,EAAQ+a,OAAS,CAAC,EAMhC,OALA/U,OAAOC,KAAK8U,GAAOjb,QAASwG,IACxBipB,EAAOxU,MAAMzU,GAAOyU,EAAMzU,KAE9BipB,EAAO5S,MAAQ4S,EAAO5S,aACf4S,EAAOU,KACP,CACX,CACH,gBAAAR,CAAiBnwB,EAAOG,EAAMiwB,GACvB5wB,KAAK6wB,oBAAoBrwB,EAAOG,GAChC,MAAMs0B,EAAUz0B,EAAM00B,WAAa10B,EAAM00B,SAAW,CAAC,GAM/CnL,EALW,CACboL,OAAQ7C,GACR8C,OAAQnC,GACRM,OAAQE,IAEa9yB,IAASuzB,GAClCe,EAAQt0B,GAAQopB,EAAQvpB,EAAOG,EAAMiwB,EACzC,CACH,mBAAAC,CAAoBrwB,EAAOG,GACpB,MAAMs0B,EAAUz0B,EAAM00B,WAAa10B,EAAM00B,SAAW,CAAC,GAC/Cf,EAAQc,EAAQt0B,GACtB,IAAKwzB,EACD,QAEa,CACbgB,OAAQpB,GACRqB,OAAQrB,GACRR,OAAQQ,IAEapzB,IAASsxB,IAC1BzxB,EAAOG,EAAMwzB,GACrBc,EAAQt0B,QAAQL,CACpB,CACA,mBAAAwwB,GACI,OAAOpvB,OAAO4xB,gBAClB,CACH,cAAAvC,CAAeN,EAAQ5S,EAAOC,EAAQnC,GAC/B,OAAO,OAAe8U,EAAQ5S,EAAOC,EAAQnC,EACjD,CACH,UAAAqV,CAAWP,GACJ,MAAMiD,EAAYjD,IAAU,OAAeA,GAC3C,SAAUiD,IAAaA,EAAU2B,YACrC,EAUJ,MAAMC,GACF7oB,gBAAkB,CAAC,EACnBA,0BAAuBnM,EACvB+N,EACAC,EACArI,QAAS,EACT6B,QACAG,YACA,eAAAstB,CAAgBpL,GACZ,MAAM,EAAE9b,EAAE,EAAEC,GAAOtO,KAAKsrB,SAAS,CAC7B,IACA,KACDnB,GACH,MAAO,CACH9b,IACAC,IAER,CACA,QAAAknB,GACI,OAAO,OAASx1B,KAAKqO,KAAM,OAASrO,KAAKsO,EAC7C,CACA,QAAAgd,CAAS7iB,EAAOgtB,GACZ,MAAMh1B,EAAQT,KAAKiI,YACnB,IAAKwtB,IAAUh1B,EAEX,OAAOT,KAEX,MAAM01B,EAAM,CAAC,EAIb,OAHAjtB,EAAMzH,QAASgE,IACX0wB,EAAI1wB,GAAQvE,EAAMuE,IAASvE,EAAMuE,GAAMiB,SAAWxF,EAAMuE,GAAMe,IAAM/F,KAAKgF,KAEtE0wB,CACX,EAGJ,SAASC,GAAS7sB,EAAOoQ,GACrB,MAAM0c,EAAW9sB,EAAMhB,QAAQoR,MACzB2c,EAyBV,SAA2B/sB,GACvB,MAAM0X,EAAS1X,EAAMhB,QAAQ0Y,OACvBsV,EAAahtB,EAAMitB,YACnBC,EAAWltB,EAAMgQ,QAAUgd,GAActV,EAAS,EAAI,GACtDyV,EAAWntB,EAAMotB,WAAaJ,EACpC,OAAO10B,KAAKoE,MAAMpE,KAAKC,IAAI20B,EAAUC,GACzC,CA/B+BE,CAAkBrtB,GACvCstB,EAAah1B,KAAKC,IAAIu0B,EAASS,eAAiBR,EAAoBA,GACpES,EAAeV,EAASW,MAAMC,QA6CvC,SAAyBtd,GACtB,MAAMkQ,EAAS,GACf,IAAIjnB,EAAGoH,EACP,IAAIpH,EAAI,EAAGoH,EAAO2P,EAAMjX,OAAQE,EAAIoH,EAAMpH,IAClC+W,EAAM/W,GAAGo0B,OACTnN,EAAOlmB,KAAKf,GAGpB,OAAOinB,CACX,CAtDkDqN,CAAgBvd,GAAS,GACjEwd,EAAkBJ,EAAar0B,OAC/B00B,EAAQL,EAAa,GACrBjT,EAAOiT,EAAaI,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBN,EAElB,OAgDP,SAAoBld,EAAO0d,EAAUN,EAAchb,GAChD,IAEInZ,EAFAiP,EAAQ,EACRkU,EAAOgR,EAAa,GAGxB,IADAhb,EAAUla,KAAKy1B,KAAKvb,GAChBnZ,EAAI,EAAGA,EAAI+W,EAAMjX,OAAQE,IACrBA,IAAMmjB,IACNsR,EAAS1zB,KAAKgW,EAAM/W,IACpBiP,IACAkU,EAAOgR,EAAallB,EAAQkK,GAGxC,CA7DQwb,CAAW5d,EAAO0d,EAAUN,EAAcI,EAAkBN,GACrDQ,EAEX,MAAMtb,EAqBT,SAA0Bgb,EAAcpd,EAAOkd,GAC5C,MAAMW,EA4DT,SAAwBzf,GACrB,MAAM0f,EAAM1f,EAAIrV,OAChB,IAAIE,EAAGwmB,EACP,GAAIqO,EAAM,EACN,OAAO,EAEX,IAAIrO,EAAOrR,EAAI,GAAInV,EAAI,EAAGA,EAAI60B,IAAO70B,EACjC,GAAImV,EAAInV,GAAKmV,EAAInV,EAAI,KAAOwmB,EACxB,OAAO,EAGf,OAAOA,CACX,CAxE6BsO,CAAeX,GAClChb,EAAUpC,EAAMjX,OAASm0B,EAC/B,IAAKW,EACD,OAAO31B,KAAKoC,IAAI8X,EAAS,GAE7B,MAAM4b,GAAU,OAAWH,GAC3B,IAAI,IAAI50B,EAAI,EAAGoH,EAAO2tB,EAAQj1B,OAAS,EAAGE,EAAIoH,EAAMpH,IAAI,CACpD,MAAMiC,EAAS8yB,EAAQ/0B,GACvB,GAAIiC,EAASkX,EACT,OAAOlX,CAEf,CACA,OAAOhD,KAAKoC,IAAI8X,EAAS,EAC7B,CAnCoB6b,CAAiBb,EAAcpd,EAAOkd,GACtD,GAAIM,EAAkB,EAAG,CACrB,IAAIv0B,EAAGoH,EACP,MAAM6tB,EAAkBV,EAAkB,EAAIt1B,KAAKi2B,OAAOhU,EAAOsT,IAAUD,EAAkB,IAAM,KAEnG,IADArQ,GAAKnN,EAAO0d,EAAUtb,GAAS,OAAc8b,GAAmB,EAAIT,EAAQS,EAAiBT,GACzFx0B,EAAI,EAAGoH,EAAOmtB,EAAkB,EAAGv0B,EAAIoH,EAAMpH,IAC7CkkB,GAAKnN,EAAO0d,EAAUtb,EAASgb,EAAan0B,GAAIm0B,EAAan0B,EAAI,IAGrE,OADAkkB,GAAKnN,EAAO0d,EAAUtb,EAAS+H,GAAM,OAAc+T,GAAmBle,EAAMjX,OAASohB,EAAO+T,GACrFR,CACX,CAEA,OADAvQ,GAAKnN,EAAO0d,EAAUtb,GACfsb,CACX,CA8CC,SAASvQ,GAAKnN,EAAO0d,EAAUtb,EAASgc,EAAYC,GACjD,MAAMj2B,GAAQ,IAAAmN,GAAe6oB,EAAY,GACnCpuB,EAAM9H,KAAKC,KAAI,IAAAoN,GAAe8oB,EAAUre,EAAMjX,QAASiX,EAAMjX,QACnE,IACIA,EAAQE,EAAGmjB,EADXlU,EAAQ,EAQZ,IANAkK,EAAUla,KAAKy1B,KAAKvb,GAChBic,IACAt1B,EAASs1B,EAAWD,EACpBhc,EAAUrZ,EAASb,KAAKoE,MAAMvD,EAASqZ,IAE3CgK,EAAOhkB,EACDgkB,EAAO,GACTlU,IACAkU,EAAOlkB,KAAKi2B,MAAM/1B,EAAQ8P,EAAQkK,GAEtC,IAAInZ,EAAIf,KAAKoC,IAAIlC,EAAO,GAAIa,EAAI+G,EAAK/G,IAC7BA,IAAMmjB,IACNsR,EAAS1zB,KAAKgW,EAAM/W,IACpBiP,IACAkU,EAAOlkB,KAAKi2B,MAAM/1B,EAAQ8P,EAAQkK,GAG9C,CAeA,MACMkc,GAAiB,CAAC1uB,EAAOkR,EAAMwG,IAAkB,QAATxG,GAA2B,SAATA,EAAkBlR,EAAMkR,GAAQwG,EAAS1X,EAAMkR,GAAQwG,EACjHiX,GAAgB,CAACC,EAAarB,IAAgBj1B,KAAKC,IAAIg1B,GAAiBqB,EAAaA,GAC1F,SAASC,GAAOrgB,EAAKsgB,GAClB,MAAMxO,EAAS,GACTyO,EAAYvgB,EAAIrV,OAAS21B,EACzBZ,EAAM1f,EAAIrV,OAChB,IAAIE,EAAI,EACR,KAAMA,EAAI60B,EAAK70B,GAAK01B,EAChBzO,EAAOlmB,KAAKoU,EAAIlW,KAAKoE,MAAMrD,KAE/B,OAAOinB,CACX,CACC,SAAS0O,GAAoBhvB,EAAOU,EAAOuuB,GACxC,MAAM91B,EAAS6G,EAAMoQ,MAAMjX,OACrB+1B,EAAa52B,KAAKC,IAAImI,EAAOvH,EAAS,GACtCX,EAAQwH,EAAMub,YACdnb,EAAMJ,EAAMwb,UACZ2T,EAAU,KAChB,IACIzX,EADA0X,EAAYpvB,EAAMqQ,gBAAgB6e,GAEtC,KAAID,IAEIvX,EADW,IAAXve,EACSb,KAAKoC,IAAI00B,EAAY52B,EAAO4H,EAAMgvB,GAC1B,IAAV1uB,GACGV,EAAMqQ,gBAAgB,GAAK+e,GAAa,GAExCA,EAAYpvB,EAAMqQ,gBAAgB6e,EAAa,IAAM,EAEnEE,GAAaF,EAAaxuB,EAAQgX,GAAUA,EACxC0X,EAAY52B,EAAQ22B,GAAWC,EAAYhvB,EAAM+uB,IAIzD,OAAOC,CACX,CAcC,SAASC,GAAkBrwB,GACxB,OAAOA,EAAQswB,UAAYtwB,EAAQguB,WAAa,CACpD,CACC,SAASuC,GAAevwB,EAASwwB,GAC9B,IAAKxwB,EAAQgZ,QACT,OAAO,EAEX,MAAMyX,GAAO,QAAOzwB,EAAQywB,KAAMD,GAC5BrJ,GAAU,OAAUnnB,EAAQmnB,SAElC,QADc,OAAQnnB,EAAQoU,MAAQpU,EAAQoU,KAAKja,OAAS,GAC7Cs2B,EAAKC,WAAavJ,EAAQnR,MAC7C,CAcA,SAAS2a,GAAWC,EAAO5O,EAAU7gB,GAChC,IAAIysB,GAAM,QAAmBgD,GAI9B,OAHIzvB,GAAwB,UAAb6gB,IAAyB7gB,GAAwB,UAAb6gB,KAC/C4L,EA7Ea,CAACgD,GAAkB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA6E1EC,CAAajD,IAEhBA,CACX,CAwCA,MAAMkD,WAActD,GAChB,WAAAv1B,CAAY+E,GACRgY,QACC9c,KAAKyL,GAAK3G,EAAI2G,GACdzL,KAAKW,KAAOmE,EAAInE,KAChBX,KAAK8H,aAAUxH,EACfN,KAAK2M,IAAM7H,EAAI6H,IACf3M,KAAKQ,MAAQsE,EAAItE,MACjBR,KAAK6T,SAAMvT,EACXN,KAAK+T,YAASzT,EACdN,KAAKgU,UAAO1T,EACZN,KAAK8T,WAAQxT,EACbN,KAAK6d,WAAQvd,EACbN,KAAK8d,YAASxd,EACfN,KAAK64B,SAAW,CACZ7kB,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAEX/T,KAAKqf,cAAW/e,EAChBN,KAAKsf,eAAYhf,EACjBN,KAAK84B,gBAAax4B,EAClBN,KAAK+4B,mBAAgBz4B,EACrBN,KAAKg5B,iBAAc14B,EACnBN,KAAKi5B,kBAAe34B,EACpBN,KAAKqL,UAAO/K,EACZN,KAAKk5B,mBAAgB54B,EACtBN,KAAKqB,SAAMf,EACXN,KAAKwD,SAAMlD,EACXN,KAAKm5B,YAAS74B,EACbN,KAAKkZ,MAAQ,GACblZ,KAAKo5B,eAAiB,KACtBp5B,KAAKq5B,YAAc,KACnBr5B,KAAKs5B,YAAc,KACpBt5B,KAAK8Y,QAAU,EACf9Y,KAAKk2B,WAAa,EAClBl2B,KAAKu5B,kBAAoB,CAAC,EACzBv5B,KAAKqkB,iBAAc/jB,EACnBN,KAAKskB,eAAYhkB,EAClBN,KAAKmpB,gBAAiB,EACtBnpB,KAAKw5B,cAAWl5B,EAChBN,KAAKy5B,cAAWn5B,EAChBN,KAAK05B,mBAAgBp5B,EACrBN,KAAK25B,mBAAgBr5B,EACrBN,KAAK45B,aAAe,EACpB55B,KAAK65B,aAAe,EACpB75B,KAAKqY,OAAS,CAAC,EACfrY,KAAK85B,mBAAoB,EACzB95B,KAAKuN,cAAWjN,CACpB,CACH,IAAAkoB,CAAK1gB,GACE9H,KAAK8H,QAAUA,EAAQiyB,WAAW/5B,KAAKiR,cACvCjR,KAAKqL,KAAOvD,EAAQuD,KACpBrL,KAAKy5B,SAAWz5B,KAAKmR,MAAMrJ,EAAQzG,KACnCrB,KAAKw5B,SAAWx5B,KAAKmR,MAAMrJ,EAAQtE,KACnCxD,KAAK25B,cAAgB35B,KAAKmR,MAAMrJ,EAAQkyB,cACxCh6B,KAAK05B,cAAgB15B,KAAKmR,MAAMrJ,EAAQmyB,aAC5C,CACH,KAAA9oB,CAAM6D,EAAKxL,GACJ,OAAOwL,CACX,CACH,aAAA7B,GACO,IAAI,SAAEsmB,EAAS,SAAED,EAAS,cAAEG,EAAc,cAAED,GAAmB15B,KAK/D,OAJAy5B,GAAW,OAAgBA,EAAU7mB,OAAOC,mBAC5C2mB,GAAW,OAAgBA,EAAU5mB,OAAOE,mBAC5C6mB,GAAgB,OAAgBA,EAAe/mB,OAAOC,mBACtD6mB,GAAgB,OAAgBA,EAAe9mB,OAAOE,mBAC/C,CACHzR,KAAK,OAAgBo4B,EAAUE,GAC/Bn2B,KAAK,OAAgBg2B,EAAUE,GAC/BzmB,YAAY,OAAewmB,GAC3BvmB,YAAY,OAAesmB,GAEnC,CACH,SAAAjnB,CAAUC,GACH,IACIJ,GADA,IAAE/Q,EAAI,IAAEmC,EAAI,WAAEyP,EAAW,WAAEC,GAAgBlT,KAAKmT,gBAEpD,GAAIF,GAAcC,EACd,MAAO,CACH7R,MACAmC,OAGR,MAAM02B,EAAQl6B,KAAK6K,0BACnB,IAAI,IAAI1I,EAAI,EAAGoH,EAAO2wB,EAAMj4B,OAAQE,EAAIoH,IAAQpH,EAC5CiQ,EAAQ8nB,EAAM/3B,GAAG4I,WAAWwH,UAAUvS,KAAMwS,GACvCS,IACD5R,EAAMD,KAAKC,IAAIA,EAAK+Q,EAAM/Q,MAEzB6R,IACD1P,EAAMpC,KAAKoC,IAAIA,EAAK4O,EAAM5O,MAKlC,OAFAnC,EAAM6R,GAAc7R,EAAMmC,EAAMA,EAAMnC,EACtCmC,EAAMyP,GAAc5R,EAAMmC,EAAMnC,EAAMmC,EAC/B,CACHnC,KAAK,OAAgBA,GAAK,OAAgBmC,EAAKnC,IAC/CmC,KAAK,OAAgBA,GAAK,OAAgBnC,EAAKmC,IAEvD,CACH,UAAAkqB,GACO,MAAO,CACH1Z,KAAMhU,KAAKg5B,aAAe,EAC1BnlB,IAAK7T,KAAK84B,YAAc,EACxBhlB,MAAO9T,KAAKi5B,cAAgB,EAC5BllB,OAAQ/T,KAAK+4B,eAAiB,EAEtC,CACH,QAAAoB,GACO,OAAOn6B,KAAKkZ,KAChB,CACH,SAAArH,GACO,MAAMtC,EAAOvP,KAAKQ,MAAM+O,KACxB,OAAOvP,KAAK8H,QAAQ8J,SAAW5R,KAAK2iB,eAAiBpT,EAAK6qB,QAAU7qB,EAAK8qB,UAAY9qB,EAAKqC,QAAU,EACxG,CACH,aAAA0oB,CAAc/lB,EAAYvU,KAAKQ,MAAM+T,WAE9B,OADcvU,KAAKq5B,cAAgBr5B,KAAKq5B,YAAcr5B,KAAKu6B,mBAAmBhmB,GAElF,CACA,YAAA2b,GACIlwB,KAAKqY,OAAS,CAAC,EACfrY,KAAK85B,mBAAoB,CAC7B,CACA,YAAAU,IACI,OAASx6B,KAAK8H,QAAQ0yB,aAAc,CAChCx6B,MAER,CACH,MAAAkG,CAAOmZ,EAAUC,EAAWmb,GACrB,MAAM,YAAE1Z,EAAY,MAAE2Z,EAAQxhB,MAAO0c,GAAc51B,KAAK8H,QAClD6yB,EAAa/E,EAAS+E,WAC5B36B,KAAKw6B,eACLx6B,KAAKqf,SAAWA,EAChBrf,KAAKsf,UAAYA,EACjBtf,KAAK64B,SAAW4B,EAAUvzB,OAAOc,OAAO,CACpCgM,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACT0mB,GACHz6B,KAAKkZ,MAAQ,KACblZ,KAAKs5B,YAAc,KACnBt5B,KAAKo5B,eAAiB,KACtBp5B,KAAKq5B,YAAc,KACnBr5B,KAAK46B,sBACL56B,KAAK66B,gBACL76B,KAAK86B,qBACL96B,KAAKk2B,WAAal2B,KAAK2iB,eAAiB3iB,KAAK6d,MAAQ4c,EAAQzmB,KAAOymB,EAAQ3mB,MAAQ9T,KAAK8d,OAAS2c,EAAQ5mB,IAAM4mB,EAAQ1mB,OACnH/T,KAAK85B,oBACN95B,KAAK+6B,mBACL/6B,KAAKg7B,sBACLh7B,KAAKi7B,kBACLj7B,KAAKm5B,QAAS,OAAUn5B,KAAM06B,EAAO3Z,GACrC/gB,KAAK85B,mBAAoB,GAE7B95B,KAAKk7B,mBACLl7B,KAAKkZ,MAAQlZ,KAAKm7B,cAAgB,GAClCn7B,KAAKo7B,kBACL,MAAMC,EAAkBV,EAAa36B,KAAKkZ,MAAMjX,OAChDjC,KAAKs7B,sBAAsBD,EAAkB1D,GAAO33B,KAAKkZ,MAAOyhB,GAAc36B,KAAKkZ,OACnFlZ,KAAKgH,YACLhH,KAAKu7B,+BACLv7B,KAAKw7B,yBACLx7B,KAAKy7B,8BACD7F,EAAS9U,UAAY8U,EAASD,UAAgC,SAApBC,EAAS8F,UACnD17B,KAAKkZ,MAAQyc,GAAS31B,KAAMA,KAAKkZ,OACjClZ,KAAKs5B,YAAc,KACnBt5B,KAAK27B,iBAELN,GACAr7B,KAAKs7B,sBAAsBt7B,KAAKkZ,OAEpClZ,KAAK47B,YACL57B,KAAK67B,MACL77B,KAAK87B,WACL97B,KAAK+7B,aACT,CACH,SAAA/0B,GACO,IACI6d,EAAYE,EADZiX,EAAgBh8B,KAAK8H,QAAQmB,QAE7BjJ,KAAK2iB,gBACLkC,EAAa7kB,KAAKgU,KAClB+Q,EAAW/kB,KAAK8T,QAEhB+Q,EAAa7kB,KAAK6T,IAClBkR,EAAW/kB,KAAK+T,OAChBioB,GAAiBA,GAErBh8B,KAAKqkB,YAAcQ,EACnB7kB,KAAKskB,UAAYS,EACjB/kB,KAAKmpB,eAAiB6S,EACtBh8B,KAAK8Y,QAAUiM,EAAWF,EAC1B7kB,KAAKi8B,eAAiBj8B,KAAK8H,QAAQo0B,aACvC,CACA,WAAAH,IACI,OAAS/7B,KAAK8H,QAAQi0B,YAAa,CAC/B/7B,MAER,CACA,mBAAA46B,IACI,OAAS56B,KAAK8H,QAAQ8yB,oBAAqB,CACvC56B,MAER,CACA,aAAA66B,GACQ76B,KAAK2iB,gBACL3iB,KAAK6d,MAAQ7d,KAAKqf,SAClBrf,KAAKgU,KAAO,EACZhU,KAAK8T,MAAQ9T,KAAK6d,QAElB7d,KAAK8d,OAAS9d,KAAKsf,UACnBtf,KAAK6T,IAAM,EACX7T,KAAK+T,OAAS/T,KAAK8d,QAEvB9d,KAAKg5B,YAAc,EACnBh5B,KAAK84B,WAAa,EAClB94B,KAAKi5B,aAAe,EACpBj5B,KAAK+4B,cAAgB,CACzB,CACA,kBAAA+B,IACI,OAAS96B,KAAK8H,QAAQgzB,mBAAoB,CACtC96B,MAER,CACA,UAAAm8B,CAAW3gB,GACPxb,KAAKQ,MAAM47B,cAAc5gB,EAAMxb,KAAKiR,eACpC,OAASjR,KAAK8H,QAAQ0T,GAAO,CACzBxb,MAER,CACA,gBAAA+6B,GACI/6B,KAAKm8B,WAAW,mBACpB,CACA,mBAAAnB,GAAuB,CACvB,eAAAC,GACIj7B,KAAKm8B,WAAW,kBACpB,CACA,gBAAAjB,GACIl7B,KAAKm8B,WAAW,mBACpB,CACH,UAAAhB,GACO,MAAO,EACX,CACA,eAAAC,GACIp7B,KAAKm8B,WAAW,kBACpB,CACA,2BAAAE,IACI,OAASr8B,KAAK8H,QAAQu0B,4BAA6B,CAC/Cr8B,MAER,CACH,kBAAAs8B,CAAmBpjB,GACZ,MAAM0c,EAAW51B,KAAK8H,QAAQoR,MAC9B,IAAI/W,EAAGoH,EAAMhH,EACb,IAAIJ,EAAI,EAAGoH,EAAO2P,EAAMjX,OAAQE,EAAIoH,EAAMpH,IACtCI,EAAO2W,EAAM/W,GACbI,EAAKiR,OAAQ,OAASoiB,EAAS2G,SAAU,CACrCh6B,EAAKoG,MACLxG,EACA+W,GACDlZ,KAEX,CACA,0BAAAw8B,IACI,OAASx8B,KAAK8H,QAAQ00B,2BAA4B,CAC9Cx8B,MAER,CACA,4BAAAu7B,IACI,OAASv7B,KAAK8H,QAAQyzB,6BAA8B,CAChDv7B,MAER,CACA,sBAAAw7B,GACI,MAAM1zB,EAAU9H,KAAK8H,QACf8tB,EAAW9tB,EAAQoR,MACnBujB,EAAWhF,GAAcz3B,KAAKkZ,MAAMjX,OAAQ6F,EAAQoR,MAAMmd,eAC1DqG,EAAc9G,EAAS8G,aAAe,EACtCC,EAAc/G,EAAS+G,YAC7B,IACIC,EAAWtd,EAAWud,EADtB3D,EAAgBwD,EAEpB,IAAK18B,KAAK88B,eAAiBlH,EAAS9U,SAAW4b,GAAeC,GAAeF,GAAY,IAAMz8B,KAAK2iB,eAEhG,YADA3iB,KAAKk5B,cAAgBwD,GAGzB,MAAMK,EAAa/8B,KAAKg9B,iBAClBC,EAAgBF,EAAWG,OAAOrf,MAClCsf,EAAiBJ,EAAWK,QAAQtf,OACpCuB,GAAW,OAAYrf,KAAKQ,MAAMqd,MAAQof,EAAe,EAAGj9B,KAAKqf,UACvEud,EAAY90B,EAAQ0Y,OAASxgB,KAAKqf,SAAWod,EAAWpd,GAAYod,EAAW,GAC3EQ,EAAgB,EAAIL,IACpBA,EAAYvd,GAAYod,GAAY30B,EAAQ0Y,OAAS,GAAM,IAC3DlB,EAAYtf,KAAKsf,UAAY6Y,GAAkBrwB,EAAQkZ,MAAQ4U,EAAS3G,QAAUoJ,GAAevwB,EAAQu1B,MAAOr9B,KAAKQ,MAAMsH,QAAQywB,MACnIsE,EAAmBz7B,KAAK2pB,KAAKkS,EAAgBA,EAAgBE,EAAiBA,GAC9EjE,GAAgB,OAAU93B,KAAKC,IAAID,KAAKk8B,MAAK,QAAaP,EAAWK,QAAQtf,OAAS,GAAK8e,GAAY,EAAG,IAAKx7B,KAAKk8B,MAAK,OAAYhe,EAAYud,GAAmB,EAAG,IAAMz7B,KAAKk8B,MAAK,OAAYH,EAAiBN,GAAmB,EAAG,MAC1O3D,EAAgB93B,KAAKoC,IAAIk5B,EAAat7B,KAAKC,IAAIs7B,EAAazD,KAEhEl5B,KAAKk5B,cAAgBA,CACzB,CACA,2BAAAuC,IACI,OAASz7B,KAAK8H,QAAQ2zB,4BAA6B,CAC/Cz7B,MAER,CACA,aAAA27B,GAAiB,CACjB,SAAAC,IACI,OAAS57B,KAAK8H,QAAQ8zB,UAAW,CAC7B57B,MAER,CACA,GAAA67B,GACI,MAAMxa,EAAU,CACZxD,MAAO,EACPC,OAAQ,IAEN,MAAEtd,EAAQsH,SAAWoR,MAAO0c,EAAWyH,MAAOE,EAAYvc,KAAMwc,IAAiBx9B,KACjF8gB,EAAU9gB,KAAK88B,aACfna,EAAe3iB,KAAK2iB,eAC1B,GAAI7B,EAAS,CACT,MAAM2c,EAAcpF,GAAekF,EAAW/8B,EAAMsH,QAAQywB,MAQ5D,GAPI5V,GACAtB,EAAQxD,MAAQ7d,KAAKqf,SACrBgC,EAAQvD,OAASqa,GAAkBqF,GAAYC,IAE/Cpc,EAAQvD,OAAS9d,KAAKsf,UACtB+B,EAAQxD,MAAQsa,GAAkBqF,GAAYC,GAE9C7H,EAAS9U,SAAW9gB,KAAKkZ,MAAMjX,OAAQ,CACvC,MAAM,MAAE00B,EAAM,KAAEtT,EAAK,OAAE6Z,EAAO,QAAEE,GAAap9B,KAAKg9B,iBAC5CU,EAAiC,EAAnB9H,EAAS3G,QACvB0O,GAAe,IAAAhqB,GAAU3T,KAAKk5B,eAC9B5a,EAAMld,KAAKkd,IAAIqf,GACfnf,EAAMpd,KAAKod,IAAImf,GACrB,GAAIhb,EAAc,CACd,MAAMib,EAAchI,EAASiI,OAAS,EAAIrf,EAAM0e,EAAOrf,MAAQS,EAAM8e,EAAQtf,OAC7EuD,EAAQvD,OAAS1c,KAAKC,IAAIrB,KAAKsf,UAAW+B,EAAQvD,OAAS8f,EAAcF,EAC7E,KAAO,CACH,MAAMI,EAAalI,EAASiI,OAAS,EAAIvf,EAAM4e,EAAOrf,MAAQW,EAAM4e,EAAQtf,OAC5EuD,EAAQxD,MAAQzc,KAAKC,IAAIrB,KAAKqf,SAAUgC,EAAQxD,MAAQigB,EAAaJ,EACzE,CACA19B,KAAK+9B,kBAAkBpH,EAAOtT,EAAM7E,EAAKF,EAC7C,CACJ,CACAte,KAAKg+B,iBACDrb,GACA3iB,KAAK6d,MAAQ7d,KAAK8Y,QAAUtY,EAAMqd,MAAQ7d,KAAK64B,SAAS7kB,KAAOhU,KAAK64B,SAAS/kB,MAC7E9T,KAAK8d,OAASuD,EAAQvD,SAEtB9d,KAAK6d,MAAQwD,EAAQxD,MACrB7d,KAAK8d,OAAS9d,KAAK8Y,QAAUtY,EAAMsd,OAAS9d,KAAK64B,SAAShlB,IAAM7T,KAAK64B,SAAS9kB,OAEtF,CACA,iBAAAgqB,CAAkBpH,EAAOtT,EAAM7E,EAAKF,GAChC,MAAQpF,OAAO,MAAEwf,EAAM,QAAEzJ,GAAW,SAAEnF,GAAc9pB,KAAK8H,QACnDm2B,EAAmC,IAAvBj+B,KAAKk5B,cACjBgF,EAAgC,QAAbpU,GAAoC,MAAd9pB,KAAKqL,KACpD,GAAIrL,KAAK2iB,eAAgB,CACrB,MAAMwb,EAAan+B,KAAKmZ,gBAAgB,GAAKnZ,KAAKgU,KAC5CoqB,EAAcp+B,KAAK8T,MAAQ9T,KAAKmZ,gBAAgBnZ,KAAKkZ,MAAMjX,OAAS,GAC1E,IAAI+2B,EAAc,EACdC,EAAe,EACfgF,EACIC,GACAlF,EAAc1a,EAAMqY,EAAM9Y,MAC1Bob,EAAeza,EAAM6E,EAAKvF,SAE1Bkb,EAAcxa,EAAMmY,EAAM7Y,OAC1Bmb,EAAe3a,EAAM+E,EAAKxF,OAEb,UAAV6a,EACPO,EAAe5V,EAAKxF,MACH,QAAV6a,EACPM,EAAcrC,EAAM9Y,MACH,UAAV6a,IACPM,EAAcrC,EAAM9Y,MAAQ,EAC5Bob,EAAe5V,EAAKxF,MAAQ,GAEhC7d,KAAKg5B,YAAc53B,KAAKoC,KAAKw1B,EAAcmF,EAAalP,GAAWjvB,KAAK6d,OAAS7d,KAAK6d,MAAQsgB,GAAa,GAC3Gn+B,KAAKi5B,aAAe73B,KAAKoC,KAAKy1B,EAAemF,EAAcnP,GAAWjvB,KAAK6d,OAAS7d,KAAK6d,MAAQugB,GAAc,EACnH,KAAO,CACH,IAAItF,EAAazV,EAAKvF,OAAS,EAC3Bib,EAAgBpC,EAAM7Y,OAAS,EACrB,UAAV4a,GACAI,EAAa,EACbC,EAAgBpC,EAAM7Y,QACL,QAAV4a,IACPI,EAAazV,EAAKvF,OAClBib,EAAgB,GAEpB/4B,KAAK84B,WAAaA,EAAa7J,EAC/BjvB,KAAK+4B,cAAgBA,EAAgB9J,CACzC,CACJ,CACH,cAAA+O,GACWh+B,KAAK64B,WACL74B,KAAK64B,SAAS7kB,KAAO5S,KAAKoC,IAAIxD,KAAKg5B,YAAah5B,KAAK64B,SAAS7kB,MAC9DhU,KAAK64B,SAAShlB,IAAMzS,KAAKoC,IAAIxD,KAAK84B,WAAY94B,KAAK64B,SAAShlB,KAC5D7T,KAAK64B,SAAS/kB,MAAQ1S,KAAKoC,IAAIxD,KAAKi5B,aAAcj5B,KAAK64B,SAAS/kB,OAChE9T,KAAK64B,SAAS9kB,OAAS3S,KAAKoC,IAAIxD,KAAK+4B,cAAe/4B,KAAK64B,SAAS9kB,QAE1E,CACA,QAAA+nB,IACI,OAAS97B,KAAK8H,QAAQg0B,SAAU,CAC5B97B,MAER,CACH,YAAA2iB,GACO,MAAM,KAAEtX,EAAK,SAAEye,GAAc9pB,KAAK8H,QAClC,MAAoB,QAAbgiB,GAAmC,WAAbA,GAAkC,MAATze,CAC1D,CACH,UAAAgzB,GACO,OAAOr+B,KAAK8H,QAAQolB,QACxB,CACH,qBAAAoO,CAAsBpiB,GAGf,IAAI/W,EAAGoH,EACP,IAHAvJ,KAAKq8B,8BACLr8B,KAAKs8B,mBAAmBpjB,GAEpB/W,EAAI,EAAGoH,EAAO2P,EAAMjX,OAAQE,EAAIoH,EAAMpH,KAClC,OAAc+W,EAAM/W,GAAGqR,SACvB0F,EAAMzB,OAAOtV,EAAG,GAChBoH,IACApH,KAGRnC,KAAKw8B,4BACT,CACH,cAAAQ,GACO,IAAID,EAAa/8B,KAAKs5B,YACtB,IAAKyD,EAAY,CACb,MAAMpC,EAAa36B,KAAK8H,QAAQoR,MAAMyhB,WACtC,IAAIzhB,EAAQlZ,KAAKkZ,MACbyhB,EAAazhB,EAAMjX,SACnBiX,EAAQye,GAAOze,EAAOyhB,IAE1B36B,KAAKs5B,YAAcyD,EAAa/8B,KAAKs+B,mBAAmBplB,EAAOA,EAAMjX,OAAQjC,KAAK8H,QAAQoR,MAAMmd,cACpG,CACA,OAAO0G,CACX,CACH,kBAAAuB,CAAmBplB,EAAOjX,EAAQo0B,GAC3B,MAAM,IAAE1pB,EAAM4sB,kBAAmBgF,GAAYv+B,KACvCw+B,EAAS,GACTC,EAAU,GACV5G,EAAYz2B,KAAKoE,MAAMvD,EAASw1B,GAAcx1B,EAAQo0B,IAC5D,IAEIl0B,EAAG8nB,EAAGyU,EAAMlrB,EAAOmrB,EAAUC,EAAYvpB,EAAOmjB,EAAY3a,EAAOC,EAAQ+gB,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAI58B,EAAI,EAAGA,EAAIF,EAAQE,GAAK01B,EAAU,CAUlC,GATArkB,EAAQ0F,EAAM/W,GAAGqR,MACjBmrB,EAAW3+B,KAAKg/B,wBAAwB78B,GACxCwK,EAAI4rB,KAAOqG,EAAaD,EAASM,OACjC5pB,EAAQkpB,EAAOK,GAAcL,EAAOK,IAAe,CAC/CrvB,KAAM,CAAC,EACP2vB,GAAI,IAER1G,EAAamG,EAASnG,WACtB3a,EAAQC,EAAS,GACZ,OAActK,KAAW,OAAQA,IAG/B,IAAI,OAAQA,GACf,IAAIyW,EAAI,EAAGyU,EAAOlrB,EAAMvR,OAAQgoB,EAAIyU,IAAQzU,EACxC4U,EAAerrB,EAAMyW,IAChB,OAAc4U,KAAiB,OAAQA,KACxChhB,GAAQ,OAAalR,EAAK0I,EAAM9F,KAAM8F,EAAM6pB,GAAIrhB,EAAOghB,GACvD/gB,GAAU0a,QAPlB3a,GAAQ,OAAalR,EAAK0I,EAAM9F,KAAM8F,EAAM6pB,GAAIrhB,EAAOrK,GACvDsK,EAAS0a,EAUbgG,EAAOt7B,KAAK2a,GACZ4gB,EAAQv7B,KAAK4a,GACbghB,EAAkB19B,KAAKoC,IAAIqa,EAAOihB,GAClCC,EAAmB39B,KAAKoC,IAAIsa,EAAQihB,EACxC,EA7iBP,SAAwBR,EAAQt8B,IAC7B,OAAKs8B,EAASlpB,IACV,MAAM6pB,EAAK7pB,EAAM6pB,GACXC,EAAQD,EAAGj9B,OAAS,EAC1B,IAAIE,EACJ,GAAIg9B,EAAQl9B,EAAQ,CAChB,IAAIE,EAAI,EAAGA,EAAIg9B,IAASh9B,SACbkT,EAAM9F,KAAK2vB,EAAG/8B,IAEzB+8B,EAAGznB,OAAO,EAAG0nB,EACjB,GAER,CAkiBQC,CAAeb,EAAQt8B,GACvB,MAAMi7B,EAASsB,EAAO7a,QAAQmb,GACxB1B,EAAUqB,EAAQ9a,QAAQob,GAC1BM,EAAWC,IAAM,CACfzhB,MAAO2gB,EAAOc,IAAQ,EACtBxhB,OAAQ2gB,EAAQa,IAAQ,IAEhC,MAAO,CACH3I,MAAO0I,EAAQ,GACfhc,KAAMgc,EAAQp9B,EAAS,GACvBi7B,OAAQmC,EAAQnC,GAChBE,QAASiC,EAAQjC,GACjBoB,SACAC,UAER,CACH,gBAAAhrB,CAAiB9K,GACV,OAAOA,CACX,CACH,gBAAAsQ,CAAiBtQ,EAAOa,GACjB,OAAO8I,GACX,CACH,gBAAA0S,CAAiBua,GAAQ,CACzB,eAAApmB,CAAgB3P,GACT,MAAM0P,EAAQlZ,KAAKkZ,MACnB,OAAI1P,EAAQ,GAAKA,EAAQ0P,EAAMjX,OAAS,EAC7B,KAEJjC,KAAKiZ,iBAAiBC,EAAM1P,GAAOb,MAC9C,CACH,kBAAAmc,CAAmB0a,GACRx/B,KAAKmpB,iBACLqW,EAAU,EAAIA,GAElB,MAAMD,EAAQv/B,KAAKqkB,YAAcmb,EAAUx/B,KAAK8Y,QAChD,OAAO,OAAY9Y,KAAKi8B,gBAAiB,OAAYj8B,KAAKQ,MAAO++B,EAAO,GAAKA,EACjF,CACH,kBAAAE,CAAmBF,GACZ,MAAMC,GAAWD,EAAQv/B,KAAKqkB,aAAerkB,KAAK8Y,QAClD,OAAO9Y,KAAKmpB,eAAiB,EAAIqW,EAAUA,CAC/C,CACH,YAAA9c,GACO,OAAO1iB,KAAKiZ,iBAAiBjZ,KAAK0/B,eACtC,CACH,YAAAA,GACO,MAAM,IAAEr+B,EAAI,IAAEmC,GAASxD,KACvB,OAAOqB,EAAM,GAAKmC,EAAM,EAAIA,EAAMnC,EAAM,GAAKmC,EAAM,EAAInC,EAAM,CACjE,CACH,UAAA4P,CAAWzH,GACJ,MAAM0P,EAAQlZ,KAAKkZ,OAAS,GAC5B,GAAI1P,GAAS,GAAKA,EAAQ0P,EAAMjX,OAAQ,CACpC,MAAMM,EAAO2W,EAAM1P,GACnB,OAAOjH,EAAKgL,WAAahL,EAAKgL,SAnkB1C,SAA2BuH,EAAQtL,EAAOjH,GACtC,OAAO,OAAcuS,EAAQ,CACzBvS,OACAiH,QACA7I,KAAM,QAEd,CA6jBqDg/B,CAAkB3/B,KAAKiR,aAAczH,EAAOjH,GACzF,CACA,OAAOvC,KAAKuN,WAAavN,KAAKuN,UA3kBVuH,EA2kBwC9U,KAAKQ,MAAMyQ,aA3kB3CnI,EA2kByD9I,MA1kBlF,OAAc8U,EAAQ,CACzBhM,QACAnI,KAAM,YAHd,IAA4BmU,EAAQhM,CA4kBhC,CACH,SAAAitB,GACO,MAAM6J,EAAc5/B,KAAK8H,QAAQoR,MAC3B2mB,GAAM,IAAAlsB,GAAU3T,KAAKk5B,eACrB5a,EAAMld,KAAK4X,IAAI5X,KAAKkd,IAAIuhB,IACxBrhB,EAAMpd,KAAK4X,IAAI5X,KAAKod,IAAIqhB,IACxB9C,EAAa/8B,KAAKg9B,iBAClB/N,EAAU2Q,EAAYE,iBAAmB,EACzC9R,EAAI+O,EAAaA,EAAWG,OAAOrf,MAAQoR,EAAU,EACrDf,EAAI6O,EAAaA,EAAWK,QAAQtf,OAASmR,EAAU,EAC7D,OAAOjvB,KAAK2iB,eAAiBuL,EAAI5P,EAAM0P,EAAIxP,EAAMwP,EAAI1P,EAAM4P,EAAI1P,EAAM0P,EAAI1P,EAAMwP,EAAI1P,EAAM4P,EAAI5P,EAAM0P,EAAIxP,CAC3G,CACH,UAAAse,GACO,MAAMhc,EAAU9gB,KAAK8H,QAAQgZ,QAC7B,MAAgB,SAAZA,IACSA,EAEN9gB,KAAK6K,0BAA0B5I,OAAS,CACnD,CACH,qBAAA89B,CAAsBxrB,GACf,MAAMlJ,EAAOrL,KAAKqL,KACZ7K,EAAQR,KAAKQ,MACbsH,EAAU9H,KAAK8H,SACf,KAAEkZ,EAAK,SAAE8I,EAAS,OAAEzC,GAAYvf,EAChC0Y,EAASQ,EAAKR,OACdmC,EAAe3iB,KAAK2iB,eAEpB+U,EADQ13B,KAAKkZ,MACOjX,QAAUue,EAAS,EAAI,GAC3Cwf,EAAK7H,GAAkBnX,GACvBhf,EAAQ,GACRi+B,EAAa5Y,EAAO0S,WAAW/5B,KAAKiR,cACpCivB,EAAYD,EAAWnf,QAAUmf,EAAWpiB,MAAQ,EACpDsiB,EAAgBD,EAAY,EAC5BE,EAAmB,SAASb,GAC9B,OAAO,OAAY/+B,EAAO++B,EAAOW,EACrC,EACA,IAAIG,EAAal+B,EAAG+1B,EAAWoI,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAbhX,EACAuW,EAAcD,EAAiBpgC,KAAK+T,QACpCysB,EAAMxgC,KAAK+T,OAASisB,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiB7rB,EAAUV,KAAOssB,EACvCW,EAAKvsB,EAAUR,YACZ,GAAiB,WAAb+V,EACPuW,EAAcD,EAAiBpgC,KAAK6T,KACpC+sB,EAAKrsB,EAAUV,IACfitB,EAAKV,EAAiB7rB,EAAUR,QAAUosB,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM1gC,KAAK6T,IAAMmsB,OACd,GAAiB,SAAblW,EACPuW,EAAcD,EAAiBpgC,KAAK8T,OACpCysB,EAAMvgC,KAAK8T,MAAQksB,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiB7rB,EAAUP,MAAQmsB,EACxCU,EAAKtsB,EAAUT,WACZ,GAAiB,UAAbgW,EACPuW,EAAcD,EAAiBpgC,KAAKgU,MACpC2sB,EAAKpsB,EAAUP,KACf6sB,EAAKT,EAAiB7rB,EAAUT,OAASqsB,EACzCI,EAAMF,EAAcF,EACpBM,EAAMzgC,KAAKgU,KAAOgsB,OACf,GAAa,MAAT30B,EAAc,CACrB,GAAiB,WAAbye,EACAuW,EAAcD,GAAkB7rB,EAAUV,IAAMU,EAAUR,QAAU,EAAI,SACrE,IAAI,IAAA5R,GAAS2nB,GAAW,CAC3B,MAAMiX,EAAiB75B,OAAOC,KAAK2iB,GAAU,GACvCnhB,EAAQmhB,EAASiX,GACvBV,EAAcD,EAAiBpgC,KAAKQ,MAAMuL,OAAOg1B,GAAgB9nB,iBAAiBtQ,GACtF,CACAi4B,EAAKrsB,EAAUV,IACfitB,EAAKvsB,EAAUR,OACfysB,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CAChB,MAAO,GAAa,MAAT30B,EAAc,CACrB,GAAiB,WAAbye,EACAuW,EAAcD,GAAkB7rB,EAAUP,KAAOO,EAAUT,OAAS,QACjE,IAAI,IAAA3R,GAAS2nB,GAAW,CAC3B,MAAMiX,EAAiB75B,OAAOC,KAAK2iB,GAAU,GACvCnhB,EAAQmhB,EAASiX,GACvBV,EAAcD,EAAiBpgC,KAAKQ,MAAMuL,OAAOg1B,GAAgB9nB,iBAAiBtQ,GACtF,CACA43B,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKpsB,EAAUP,KACf6sB,EAAKtsB,EAAUT,KACnB,CACA,MAAMktB,GAAQ,IAAAvyB,GAAe3G,EAAQoR,MAAMmd,cAAeqB,GACpDuJ,EAAO7/B,KAAKoC,IAAI,EAAGpC,KAAKy1B,KAAKa,EAAcsJ,IACjD,IAAI7+B,EAAI,EAAGA,EAAIu1B,EAAav1B,GAAK8+B,EAAK,CAClC,MAAMpsB,EAAU7U,KAAKiR,WAAW9O,GAC1B++B,EAAclgB,EAAK+Y,WAAWllB,GAC9BssB,EAAoB9Z,EAAO0S,WAAWllB,GACtC2H,EAAY0kB,EAAY1kB,UACxB4kB,EAAYF,EAAY78B,MACxBg9B,EAAaF,EAAkBG,MAAQ,GACvCC,EAAmBJ,EAAkBK,WACrC5E,EAAYsE,EAAYtE,UACxB6E,EAAYP,EAAYO,UACxBC,EAAiBR,EAAYQ,gBAAkB,GAC/CC,EAAuBT,EAAYS,qBACzCzJ,EAAYJ,GAAoB93B,KAAMmC,EAAGqe,QACvBlgB,IAAd43B,IAGJoI,GAAmB,OAAY9/B,EAAO03B,EAAW1b,GAC7CmG,EACA4d,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAE1Bt+B,EAAMkB,KAAK,CACPq9B,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAjjB,MAAOrB,EACPnY,MAAO+8B,EACPC,aACAE,mBACA3E,YACA6E,YACAC,iBACAC,yBAER,CAGA,OAFA3hC,KAAK45B,aAAelC,EACpB13B,KAAK65B,aAAewG,EACbr+B,CACX,CACH,kBAAAu4B,CAAmBhmB,GACZ,MAAMlJ,EAAOrL,KAAKqL,KACZvD,EAAU9H,KAAK8H,SACf,SAAEgiB,EAAW5Q,MAAO0mB,GAAiB93B,EACrC6a,EAAe3iB,KAAK2iB,eACpBzJ,EAAQlZ,KAAKkZ,OACb,MAAEwf,EAAM,WAAEkJ,EAAW,QAAE3S,EAAQ,OAAE4O,GAAY+B,EAC7CI,EAAK7H,GAAkBrwB,EAAQkZ,MAC/B6gB,EAAiB7B,EAAK/Q,EACtB6S,EAAkBjE,GAAU5O,EAAU4S,EACtC1mB,IAAY,IAAAxH,GAAU3T,KAAKk5B,eAC3Bl3B,EAAQ,GACd,IAAIG,EAAGoH,EAAMhH,EAAMiR,EAAOnF,EAAGC,EAAGyzB,EAAWxC,EAAOhH,EAAMC,EAAYwJ,EAAWC,EAC3EC,EAAe,SACnB,GAAiB,QAAbpY,EACAxb,EAAItO,KAAK+T,OAAS+tB,EAClBC,EAAY/hC,KAAKmiC,+BACd,GAAiB,WAAbrY,EACPxb,EAAItO,KAAK6T,IAAMiuB,EACfC,EAAY/hC,KAAKmiC,+BACd,GAAiB,SAAbrY,EAAqB,CAC5B,MAAM4L,EAAM11B,KAAKoiC,wBAAwBpC,GACzC+B,EAAYrM,EAAIqM,UAChB1zB,EAAIqnB,EAAIrnB,CACZ,MAAO,GAAiB,UAAbyb,EAAsB,CAC7B,MAAM4L,EAAM11B,KAAKoiC,wBAAwBpC,GACzC+B,EAAYrM,EAAIqM,UAChB1zB,EAAIqnB,EAAIrnB,CACZ,MAAO,GAAa,MAAThD,EAAc,CACrB,GAAiB,WAAbye,EACAxb,GAAKiG,EAAUV,IAAMU,EAAUR,QAAU,EAAI8tB,OAC1C,IAAI,IAAA1/B,GAAS2nB,GAAW,CAC3B,MAAMiX,EAAiB75B,OAAOC,KAAK2iB,GAAU,GACvCnhB,EAAQmhB,EAASiX,GACvBzyB,EAAItO,KAAKQ,MAAMuL,OAAOg1B,GAAgB9nB,iBAAiBtQ,GAASk5B,CACpE,CACAE,EAAY/hC,KAAKmiC,yBACrB,MAAO,GAAa,MAAT92B,EAAc,CACrB,GAAiB,WAAbye,EACAzb,GAAKkG,EAAUP,KAAOO,EAAUT,OAAS,EAAI+tB,OAC1C,IAAI,IAAA1/B,GAAS2nB,GAAW,CAC3B,MAAMiX,EAAiB75B,OAAOC,KAAK2iB,GAAU,GACvCnhB,EAAQmhB,EAASiX,GACvB1yB,EAAIrO,KAAKQ,MAAMuL,OAAOg1B,GAAgB9nB,iBAAiBtQ,EAC3D,CACAo5B,EAAY/hC,KAAKoiC,wBAAwBpC,GAAI+B,SACjD,CACa,MAAT12B,IACc,UAAVqtB,EACAwJ,EAAe,MACE,QAAVxJ,IACPwJ,EAAe,WAGvB,MAAMnF,EAAa/8B,KAAKg9B,iBACxB,IAAI76B,EAAI,EAAGoH,EAAO2P,EAAMjX,OAAQE,EAAIoH,IAAQpH,EAAE,CAC1CI,EAAO2W,EAAM/W,GACbqR,EAAQjR,EAAKiR,MACb,MAAM0tB,EAActB,EAAY7F,WAAW/5B,KAAKiR,WAAW9O,IAC3Do9B,EAAQv/B,KAAKmZ,gBAAgBhX,GAAKy9B,EAAYyC,YAC9C9J,EAAOv4B,KAAKg/B,wBAAwB78B,GACpCq2B,EAAaD,EAAKC,WAClBwJ,GAAY,OAAQxuB,GAASA,EAAMvR,OAAS,EAC5C,MAAMqgC,EAAYN,EAAY,EACxB39B,EAAQ68B,EAAY78B,MACpBk+B,EAAcrB,EAAYsB,gBAC1BC,EAAcvB,EAAYwB,gBAChC,IAuCIC,EAvCAC,EAAgBb,EAwCpB,GAvCIpf,GACAtU,EAAIkxB,EACc,UAAdwC,IAEIa,EADAzgC,IAAMoH,EAAO,EACIvJ,KAAK8H,QAAQmB,QAAoB,OAAV,QAC3B,IAAN9G,EACUnC,KAAK8H,QAAQmB,QAAmB,QAAT,OAExB,UAKhBg5B,EAFS,QAAbnY,EACmB,SAAf8X,GAAsC,IAAbzmB,GACX6mB,EAAYxJ,EAAaA,EAAa,EAC9B,WAAfoJ,GACO7E,EAAWK,QAAQtf,OAAS,EAAIwkB,EAAY9J,EAAaA,GAEzDuE,EAAWK,QAAQtf,OAAS0a,EAAa,EAGxC,SAAfoJ,GAAsC,IAAbzmB,EACZqd,EAAa,EACJ,WAAfoJ,EACM7E,EAAWK,QAAQtf,OAAS,EAAIwkB,EAAY9J,EAE5CuE,EAAWK,QAAQtf,OAASkkB,EAAYxJ,EAGzDqF,IACAoE,IAAe,GAEF,IAAb9mB,GAAmB+lB,EAAY2B,oBAC/Bx0B,GAAKmqB,EAAa,EAAIp3B,KAAKod,IAAIrD,MAGnC7M,EAAIixB,EACJ0C,GAAc,EAAID,GAAaxJ,EAAa,GAG5C0I,EAAY2B,kBAAmB,CAC/B,MAAMC,GAAe,OAAU5B,EAAY6B,iBACrCjlB,EAASif,EAAW0B,QAAQt8B,GAC5B0b,EAAQkf,EAAWyB,OAAOr8B,GAChC,IAAI0R,EAAMouB,EAAaa,EAAajvB,IAChCG,EAAO,EAAI8uB,EAAa9uB,KAC5B,OAAOkuB,GACH,IAAK,SACDruB,GAAOiK,EAAS,EAChB,MACJ,IAAK,SACDjK,GAAOiK,EAGf,OAAOikB,GACH,IAAK,SACD/tB,GAAQ6J,EAAQ,EAChB,MACJ,IAAK,QACD7J,GAAQ6J,EACR,MACJ,IAAK,QACG1b,IAAMoH,EAAO,EACbyK,GAAQ6J,EACD1b,EAAI,IACX6R,GAAQ6J,EAAQ,GAI5B8kB,EAAW,CACP3uB,OACAH,MACAgK,MAAOA,EAAQilB,EAAajlB,MAC5BC,OAAQA,EAASglB,EAAahlB,OAC9BzZ,MAAO68B,EAAY8B,cAE3B,CACAhhC,EAAMkB,KAAK,CACPsQ,QACA+kB,OACA0J,aACAn6B,QAAS,CACLqT,WACA9W,QACAk+B,cACAE,cACAV,UAAWa,EACXV,eACAe,YAAa,CACT50B,EACAC,GAEJq0B,aAGZ,CACA,OAAO3gC,CACX,CACA,uBAAAmgC,GACI,MAAM,SAAErY,EAAS,MAAE5Q,GAAWlZ,KAAK8H,QAEnC,KADkB,IAAA6L,GAAU3T,KAAKk5B,eAE7B,MAAoB,QAAbpP,EAAqB,OAAS,QAEzC,IAAI4O,EAAQ,SAQZ,MAPoB,UAAhBxf,EAAMwf,MACNA,EAAQ,OACe,QAAhBxf,EAAMwf,MACbA,EAAQ,QACe,UAAhBxf,EAAMwf,QACbA,EAAQ,SAELA,CACX,CACA,uBAAA0J,CAAwBpC,GACpB,MAAM,SAAElW,EAAW5Q,OAAO,WAAE0oB,EAAW,OAAE/D,EAAO,QAAE5O,IAAgBjvB,KAAK8H,QAEjE+5B,EAAiB7B,EAAK/Q,EACtBiO,EAFal9B,KAAKg9B,iBAEEE,OAAOrf,MACjC,IAAIkkB,EACA1zB,EAoDJ,MAnDiB,SAAbyb,EACI+T,GACAxvB,EAAIrO,KAAK8T,MAAQmb,EACE,SAAf2S,EACAG,EAAY,OACU,WAAfH,GACPG,EAAY,SACZ1zB,GAAK6uB,EAAS,IAEd6E,EAAY,QACZ1zB,GAAK6uB,KAGT7uB,EAAIrO,KAAK8T,MAAQ+tB,EACE,SAAfD,EACAG,EAAY,QACU,WAAfH,GACPG,EAAY,SACZ1zB,GAAK6uB,EAAS,IAEd6E,EAAY,OACZ1zB,EAAIrO,KAAKgU,OAGG,UAAb8V,EACH+T,GACAxvB,EAAIrO,KAAKgU,KAAOib,EACG,SAAf2S,EACAG,EAAY,QACU,WAAfH,GACPG,EAAY,SACZ1zB,GAAK6uB,EAAS,IAEd6E,EAAY,OACZ1zB,GAAK6uB,KAGT7uB,EAAIrO,KAAKgU,KAAO6tB,EACG,SAAfD,EACAG,EAAY,OACU,WAAfH,GACPG,EAAY,SACZ1zB,GAAK6uB,EAAS,IAEd6E,EAAY,QACZ1zB,EAAIrO,KAAK8T,QAIjBiuB,EAAY,QAET,CACHA,YACA1zB,IAER,CACH,iBAAA60B,GACO,GAAIljC,KAAK8H,QAAQoR,MAAM2kB,OACnB,OAEJ,MAAMr9B,EAAQR,KAAKQ,MACbspB,EAAW9pB,KAAK8H,QAAQgiB,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAChB,CACHjW,IAAK,EACLG,KAAMhU,KAAKgU,KACXD,OAAQvT,EAAMsd,OACdhK,MAAO9T,KAAK8T,OAGH,QAAbgW,GAAmC,WAAbA,EACf,CACHjW,IAAK7T,KAAK6T,IACVG,KAAM,EACND,OAAQ/T,KAAK+T,OACbD,MAAOtT,EAAMqd,YALrB,CAQJ,CACH,cAAAslB,GACO,MAAM,IAAEx2B,EAAM7E,SAAS,gBAAEsU,GAAmB,KAAEpI,EAAK,IAAEH,EAAI,MAAEgK,EAAM,OAAEC,GAAY9d,KAC3Eoc,IACAzP,EAAIy2B,OACJz2B,EAAIwP,UAAYC,EAChBzP,EAAI02B,SAASrvB,EAAMH,EAAKgK,EAAOC,GAC/BnR,EAAI22B,UAEZ,CACA,oBAAApe,CAAqBvc,GACjB,MAAMqY,EAAOhhB,KAAK8H,QAAQkZ,KAC1B,IAAKhhB,KAAK88B,eAAiB9b,EAAKF,QAC5B,OAAO,EAEX,MACMtX,EADQxJ,KAAKkZ,MACCsQ,UAAW7V,GAAIA,EAAEhL,QAAUA,GAC/C,GAAIa,GAAS,EAAG,CAEZ,OADawX,EAAK+Y,WAAW/5B,KAAKiR,WAAWzH,IACjCgT,SAChB,CACA,OAAO,CACX,CACH,QAAA+mB,CAAShvB,GACF,MAAMyM,EAAOhhB,KAAK8H,QAAQkZ,KACpBrU,EAAM3M,KAAK2M,IACX3K,EAAQhC,KAAKo5B,iBAAmBp5B,KAAKo5B,eAAiBp5B,KAAK+/B,sBAAsBxrB,IACvF,IAAIpS,EAAGoH,EACP,MAAMi6B,EAAW,CAACC,EAAIC,EAAIznB,KACjBA,EAAM4B,OAAU5B,EAAM5X,QAG3BsI,EAAIy2B,OACJz2B,EAAI6P,UAAYP,EAAM4B,MACtBlR,EAAI0P,YAAcJ,EAAM5X,MACxBsI,EAAIg3B,YAAY1nB,EAAMolB,YAAc,IACpC10B,EAAIi3B,eAAiB3nB,EAAMslB,iBAC3B50B,EAAIk3B,YACJl3B,EAAIm3B,OAAOL,EAAGp1B,EAAGo1B,EAAGn1B,GACpB3B,EAAIo3B,OAAOL,EAAGr1B,EAAGq1B,EAAGp1B,GACpB3B,EAAIq3B,SACJr3B,EAAI22B,YAER,GAAItiB,EAAKF,QACL,IAAI3e,EAAI,EAAGoH,EAAOvH,EAAMC,OAAQE,EAAIoH,IAAQpH,EAAE,CAC1C,MAAMD,EAAOF,EAAMG,GACf6e,EAAKijB,iBACLT,EAAS,CACLn1B,EAAGnM,EAAKy+B,GACRryB,EAAGpM,EAAK0+B,IACT,CACCvyB,EAAGnM,EAAK2+B,GACRvyB,EAAGpM,EAAK4+B,IACT5+B,GAEH8e,EAAKoX,WACLoL,EAAS,CACLn1B,EAAGnM,EAAKq+B,IACRjyB,EAAGpM,EAAKs+B,KACT,CACCnyB,EAAGnM,EAAKu+B,IACRnyB,EAAGpM,EAAKw+B,KACT,CACCr8B,MAAOnC,EAAKu/B,UACZ5jB,MAAO3b,EAAK06B,UACZyE,WAAYn/B,EAAKw/B,eACjBH,iBAAkBr/B,EAAKy/B,sBAGnC,CAER,CACH,UAAAuC,GACO,MAAM,MAAE1jC,EAAM,IAAEmM,EAAM7E,SAAS,OAAEuf,EAAO,KAAErG,IAAahhB,KACjDigC,EAAa5Y,EAAO0S,WAAW/5B,KAAKiR,cACpCivB,EAAY7Y,EAAOvG,QAAUmf,EAAWpiB,MAAQ,EACtD,IAAKqiB,EACD,OAEJ,MAAMiE,EAAgBnjB,EAAK+Y,WAAW/5B,KAAKiR,WAAW,IAAIuL,UACpD6jB,EAAcrgC,KAAK65B,aACzB,IAAI8G,EAAIE,EAAID,EAAIE,EACZ9gC,KAAK2iB,gBACLge,GAAK,OAAYngC,EAAOR,KAAKgU,KAAMksB,GAAaA,EAAY,EAC5DW,GAAK,OAAYrgC,EAAOR,KAAK8T,MAAOqwB,GAAiBA,EAAgB,EACrEvD,EAAKE,EAAKT,IAEVO,GAAK,OAAYpgC,EAAOR,KAAK6T,IAAKqsB,GAAaA,EAAY,EAC3DY,GAAK,OAAYtgC,EAAOR,KAAK+T,OAAQowB,GAAiBA,EAAgB,EACtExD,EAAKE,EAAKR,GAEd1zB,EAAIy2B,OACJz2B,EAAI6P,UAAYyjB,EAAWpiB,MAC3BlR,EAAI0P,YAAc4jB,EAAW57B,MAC7BsI,EAAIk3B,YACJl3B,EAAIm3B,OAAOnD,EAAIC,GACfj0B,EAAIo3B,OAAOlD,EAAIC,GACfn0B,EAAIq3B,SACJr3B,EAAI22B,SACR,CACH,UAAAc,CAAW7vB,GAEJ,IADoBvU,KAAK8H,QAAQoR,MAChB4H,QACb,OAEJ,MAAMnU,EAAM3M,KAAK2M,IACX2H,EAAOtU,KAAKkjC,oBACd5uB,IACA,OAAS3H,EAAK2H,GAElB,MAAMtS,EAAQhC,KAAKs6B,cAAc/lB,GACjC,IAAK,MAAMrS,KAAQF,EAAM,CACrB,MAAMqiC,EAAoBniC,EAAK4F,QACzB62B,EAAWz8B,EAAKq2B,KAChB/kB,EAAQtR,EAAKsR,MACblF,EAAIpM,EAAK+/B,YACf,OAAWt1B,EAAK6G,EAAO,EAAGlF,EAAGqwB,EAAU0F,EAC3C,CACI/vB,IACA,OAAW3H,EAEnB,CACH,SAAA23B,GACO,MAAM,IAAE33B,EAAM7E,SAAS,SAAEgiB,EAAS,MAAEuT,EAAM,QAAEp0B,IAAgBjJ,KAC5D,IAAKq9B,EAAMvc,QACP,OAEJ,MAAMyX,GAAO,QAAO8E,EAAM9E,MACpBtJ,GAAU,OAAUoO,EAAMpO,SAC1ByJ,EAAQ2E,EAAM3E,MACpB,IAAIlY,EAAS+X,EAAKC,WAAa,EACd,WAAb1O,GAAsC,WAAbA,IAAyB,IAAA3nB,GAAS2nB,IAC3DtJ,GAAUyO,EAAQlb,QACd,OAAQspB,EAAMnhB,QACdsE,GAAU+X,EAAKC,YAAc6E,EAAMnhB,KAAKja,OAAS,KAGrDue,GAAUyO,EAAQpb,IAEtB,MAAM,OAAE0wB,EAAO,OAAEC,EAAO,SAAEnlB,EAAS,SAAElE,GAnlC7C,SAAmBrS,EAAO0X,EAAQsJ,EAAU4O,GACxC,MAAM,IAAE7kB,EAAI,KAAEG,EAAK,OAAED,EAAO,MAAED,EAAM,MAAEtT,GAAWsI,GAC3C,UAAEyL,EAAU,OAAExI,GAAYvL,EAChC,IACI6e,EAAUklB,EAAQC,EADlBrpB,EAAW,EAEf,MAAM2C,EAAS/J,EAASF,EAClBgK,EAAQ/J,EAAQE,EACtB,GAAIlL,EAAM6Z,eAAgB,CAEtB,GADA4hB,GAAS,QAAe7L,EAAO1kB,EAAMF,IACjC,IAAA3R,GAAS2nB,GAAW,CACpB,MAAMiX,EAAiB75B,OAAOC,KAAK2iB,GAAU,GACvCnhB,EAAQmhB,EAASiX,GACvByD,EAASz4B,EAAOg1B,GAAgB9nB,iBAAiBtQ,GAASmV,EAAS0C,CACvE,MACIgkB,EADoB,WAAb1a,GACGvV,EAAUR,OAASQ,EAAUV,KAAO,EAAIiK,EAAS0C,EAElDgX,GAAe1uB,EAAOghB,EAAUtJ,GAE7CnB,EAAWvL,EAAQE,CACvB,KAAO,CACH,IAAI,IAAA7R,GAAS2nB,GAAW,CACpB,MAAMiX,EAAiB75B,OAAOC,KAAK2iB,GAAU,GACvCnhB,EAAQmhB,EAASiX,GACvBwD,EAASx4B,EAAOg1B,GAAgB9nB,iBAAiBtQ,GAASkV,EAAQ2C,CACtE,MACI+jB,EADoB,WAAbza,GACGvV,EAAUP,KAAOO,EAAUT,OAAS,EAAI+J,EAAQ2C,EAEjDgX,GAAe1uB,EAAOghB,EAAUtJ,GAE7CgkB,GAAS,QAAe9L,EAAO3kB,EAAQF,GACvCsH,EAAwB,SAAb2O,GAAuB,EAAA9K,EAAU,EAAAA,CAChD,CACA,MAAO,CACHulB,SACAC,SACAnlB,WACAlE,WAER,CA6iC2DspB,CAAUzkC,KAAMwgB,EAAQsJ,EAAU4O,IACrF,OAAW/rB,EAAK0wB,EAAMnhB,KAAM,EAAG,EAAGqc,EAAM,CACpCl0B,MAAOg5B,EAAMh5B,MACbgb,WACAlE,WACA4mB,UAAWtJ,GAAWC,EAAO5O,EAAU7gB,GACvCi5B,aAAc,SACde,YAAa,CACTsB,EACAC,IAGZ,CACA,IAAApiC,CAAKmS,GACIvU,KAAK88B,eAGV98B,KAAKmjC,iBACLnjC,KAAKujC,SAAShvB,GACdvU,KAAKkkC,aACLlkC,KAAKskC,YACLtkC,KAAKokC,WAAW7vB,GACpB,CACH,OAAA4a,GACO,MAAMnmB,EAAOhJ,KAAK8H,QACZ48B,EAAK17B,EAAKkQ,OAASlQ,EAAKkQ,MAAMkW,GAAK,EACnCuV,GAAK,IAAAl2B,GAAezF,EAAKgY,MAAQhY,EAAKgY,KAAKoO,GAAI,GAC/CwV,GAAK,IAAAn2B,GAAezF,EAAKqe,QAAUre,EAAKqe,OAAO+H,EAAG,GACxD,OAAKpvB,KAAK88B,cAAgB98B,KAAKoC,OAASw2B,GAAMrQ,UAAUnmB,KAUjD,CACH,CACIgtB,EAAGuV,EACHviC,KAAOmS,IACHvU,KAAKmjC,iBACLnjC,KAAKujC,SAAShvB,GACdvU,KAAKskC,cAGb,CACIlV,EAAGwV,EACHxiC,KAAM,KACFpC,KAAKkkC,eAGb,CACI9U,EAAGsV,EACHtiC,KAAOmS,IACHvU,KAAKokC,WAAW7vB,MA3BjB,CACH,CACI6a,EAAGsV,EACHtiC,KAAOmS,IACHvU,KAAKoC,KAAKmS,KA2B9B,CACH,uBAAA1J,CAAwBlK,GACjB,MAAMu5B,EAAQl6B,KAAKQ,MAAMwpB,+BACnBpE,EAAS5lB,KAAKqL,KAAO,SACrB+d,EAAS,GACf,IAAIjnB,EAAGoH,EACP,IAAIpH,EAAI,EAAGoH,EAAO2wB,EAAMj4B,OAAQE,EAAIoH,IAAQpH,EAAE,CAC1C,MAAMgI,EAAO+vB,EAAM/3B,GACfgI,EAAKyb,KAAY5lB,KAAKyL,IAAQ9K,GAAQwJ,EAAKxJ,OAASA,GACpDyoB,EAAOlmB,KAAKiH,EAEpB,CACA,OAAOif,CACX,CACH,uBAAA4V,CAAwBx1B,GACjB,MAAMR,EAAOhJ,KAAK8H,QAAQoR,MAAM6gB,WAAW/5B,KAAKiR,WAAWzH,IAC3D,OAAO,QAAOR,EAAKuvB,KACvB,CACH,UAAAsM,GACO,MAAMC,EAAW9kC,KAAKg/B,wBAAwB,GAAGxG,WACjD,OAAQx4B,KAAK2iB,eAAiB3iB,KAAK6d,MAAQ7d,KAAK8d,QAAUgnB,CAC9D,EAGJ,MAAMC,GACF,WAAAhlC,CAAYY,EAAMqkC,EAAO3c,GACrBroB,KAAKW,KAAOA,EACZX,KAAKglC,MAAQA,EACbhlC,KAAKqoB,SAAWA,EAChBroB,KAAKgC,MAAQkF,OAAO+9B,OAAO,KAC/B,CACA,SAAAC,CAAUvkC,GACN,OAAOuG,OAAOqhB,UAAU4c,cAAc1jC,KAAKzB,KAAKW,KAAK4nB,UAAW5nB,EAAK4nB,UACzE,CACH,QAAA6c,CAASljC,GACF,MAAMmjC,EAAQn+B,OAAOo+B,eAAepjC,GACpC,IAAIqjC,GAiEZ,SAA2BF,GACvB,MAAO,OAAQA,GAAS,aAAcA,CAC1C,EAlEYG,CAAkBH,KAClBE,EAAcvlC,KAAKolC,SAASC,IAEhC,MAAMrjC,EAAQhC,KAAKgC,MACbyJ,EAAKvJ,EAAKuJ,GACVu5B,EAAQhlC,KAAKglC,MAAQ,IAAMv5B,EACjC,IAAKA,EACD,MAAM,IAAI0c,MAAM,2BAA6BjmB,GAEjD,OAAIuJ,KAAMzJ,IAGVA,EAAMyJ,GAAMvJ,EAyBpB,SAA0BA,EAAM8iC,EAAOO,GACnC,MAAME,GAAe,QAAMv+B,OAAO+9B,OAAO,MAAO,CAC5CM,EAAc,EAAAn+B,EAASzE,IAAI4iC,GAAe,CAAC,EAC3C,EAAAn+B,EAASzE,IAAIqiC,GACb9iC,EAAKwjC,WAET,EAAAt+B,EAAStE,IAAIkiC,EAAOS,GAChBvjC,EAAKyjC,eAOb,SAAuBX,EAAOY,GAC1B1+B,OAAOC,KAAKy+B,GAAQ5kC,QAAS6kC,IACzB,MAAMC,EAAgBD,EAASE,MAAM,KAC/BC,EAAaF,EAActjC,MAC3ByjC,EAAc,CAChBjB,GACFxsB,OAAOstB,GAAeI,KAAK,KACvBC,EAAQP,EAAOC,GAAUE,MAAM,KAC/BK,EAAaD,EAAM3jC,MACnB6jC,EAAcF,EAAMD,KAAK,KAC/B,EAAA9+B,EAASk/B,MAAML,EAAaD,EAAYK,EAAaD,IAE7D,CAlBQG,CAAcvB,EAAO9iC,EAAKyjC,eAE1BzjC,EAAKskC,aACL,EAAAp/B,EAASq/B,SAASzB,EAAO9iC,EAAKskC,YAEtC,CArCQE,CAAiBxkC,EAAM8iC,EAAOO,GAC1BvlC,KAAKqoB,UACL,EAAAjhB,EAASihB,SAASnmB,EAAKuJ,GAAIvJ,EAAKykC,YALzB3B,CAQf,CACH,GAAAriC,CAAI8I,GACG,OAAOzL,KAAKgC,MAAMyJ,EACtB,CACH,UAAAm7B,CAAW1kC,GACJ,MAAMF,EAAQhC,KAAKgC,MACbyJ,EAAKvJ,EAAKuJ,GACVu5B,EAAQhlC,KAAKglC,MACfv5B,KAAMzJ,UACCA,EAAMyJ,GAEbu5B,GAASv5B,KAAM,EAAArE,EAAS49B,YACjB,EAAA59B,EAAS49B,GAAOv5B,GACnBzL,KAAKqoB,iBACE,KAAU5c,GAG7B,EAiCJ,MAAMo7B,GACF,WAAA9mC,GACIC,KAAKgiB,YAAc,IAAI+iB,GAAcv4B,EAAmB,YAAY,GACpExM,KAAKqU,SAAW,IAAI0wB,GAAczP,GAAS,YAC3Ct1B,KAAK4b,QAAU,IAAImpB,GAAc79B,OAAQ,WACzClH,KAAK+L,OAAS,IAAIg5B,GAAcnM,GAAO,UACvC54B,KAAK8mC,iBAAmB,CACpB9mC,KAAKgiB,YACLhiB,KAAK+L,OACL/L,KAAKqU,SAEb,CACH,GAAAlR,IAAOwU,GACA3X,KAAK+mC,MAAM,WAAYpvB,EAC3B,CACA,MAAA/T,IAAU+T,GACN3X,KAAK+mC,MAAM,aAAcpvB,EAC7B,CACH,cAAAqvB,IAAkBrvB,GACX3X,KAAK+mC,MAAM,WAAYpvB,EAAM3X,KAAKgiB,YACtC,CACH,WAAAlU,IAAe6J,GACR3X,KAAK+mC,MAAM,WAAYpvB,EAAM3X,KAAKqU,SACtC,CACH,UAAA4yB,IAActvB,GACP3X,KAAK+mC,MAAM,WAAYpvB,EAAM3X,KAAK4b,QACtC,CACH,SAAAsrB,IAAavvB,GACN3X,KAAK+mC,MAAM,WAAYpvB,EAAM3X,KAAK+L,OACtC,CACH,aAAAo7B,CAAc17B,GACP,OAAOzL,KAAKonC,KAAK37B,EAAIzL,KAAKgiB,YAAa,aAC3C,CACH,UAAAiG,CAAWxc,GACJ,OAAOzL,KAAKonC,KAAK37B,EAAIzL,KAAKqU,SAAU,UACxC,CACH,SAAAgzB,CAAU57B,GACH,OAAOzL,KAAKonC,KAAK37B,EAAIzL,KAAK4b,QAAS,SACvC,CACH,QAAA0rB,CAAS77B,GACF,OAAOzL,KAAKonC,KAAK37B,EAAIzL,KAAK+L,OAAQ,QACtC,CACH,iBAAAw7B,IAAqB5vB,GACd3X,KAAK+mC,MAAM,aAAcpvB,EAAM3X,KAAKgiB,YACxC,CACH,cAAAwlB,IAAkB7vB,GACX3X,KAAK+mC,MAAM,aAAcpvB,EAAM3X,KAAKqU,SACxC,CACH,aAAAozB,IAAiB9vB,GACV3X,KAAK+mC,MAAM,aAAcpvB,EAAM3X,KAAK4b,QACxC,CACH,YAAA8rB,IAAgB/vB,GACT3X,KAAK+mC,MAAM,aAAcpvB,EAAM3X,KAAK+L,OACxC,CACH,KAAAg7B,CAAMpgC,EAAQgR,EAAMgwB,GACb,IACOhwB,GACL3W,QAAS4mC,IACP,MAAMC,EAAMF,GAAiB3nC,KAAK8nC,oBAAoBF,GAClDD,GAAiBE,EAAI3C,UAAU0C,IAAQC,IAAQ7nC,KAAK4b,SAAWgsB,EAAIn8B,GACnEzL,KAAK+nC,MAAMphC,EAAQkhC,EAAKD,IAExB,OAAKA,EAAM1lC,IACP,MAAM8lC,EAAUL,GAAiB3nC,KAAK8nC,oBAAoB5lC,GAC1DlC,KAAK+nC,MAAMphC,EAAQqhC,EAAS9lC,MAI5C,CACH,KAAA6lC,CAAMphC,EAAQqhB,EAAUigB,GACjB,MAAMC,GAAc,QAAYvhC,IAChC,OAASshC,EAAU,SAAWC,GAAc,GAAID,GAChDjgB,EAASrhB,GAAQshC,IACjB,OAASA,EAAU,QAAUC,GAAc,GAAID,EACnD,CACH,mBAAAH,CAAoBnnC,GACb,IAAI,IAAIwB,EAAI,EAAGA,EAAInC,KAAK8mC,iBAAiB7kC,OAAQE,IAAI,CACjD,MAAM0lC,EAAM7nC,KAAK8mC,iBAAiB3kC,GAClC,GAAI0lC,EAAI3C,UAAUvkC,GACd,OAAOknC,CAEf,CACA,OAAO7nC,KAAK4b,OAChB,CACH,IAAAwrB,CAAK37B,EAAIk8B,EAAehnC,GACjB,MAAMuB,EAAOylC,EAAchlC,IAAI8I,GAC/B,QAAanL,IAAT4B,EACA,MAAM,IAAIimB,MAAM,IAAM1c,EAAK,yBAA2B9K,EAAO,KAEjE,OAAOuB,CACX,EAEJ,IAAI8lB,GAA2B,IAAI6e,GAEnC,MAAMsB,GACF,WAAApoC,GACIC,KAAKooC,MAAQ,EACjB,CACH,MAAAC,CAAO7nC,EAAO8nC,EAAM3wB,EAAM3L,GACN,eAATs8B,IACAtoC,KAAKooC,MAAQpoC,KAAKuoC,mBAAmB/nC,GAAO,GAC5CR,KAAKO,QAAQP,KAAKooC,MAAO5nC,EAAO,YAEpC,MAAMgmC,EAAcx6B,EAAShM,KAAKwoC,aAAahoC,GAAOwL,OAAOA,GAAUhM,KAAKwoC,aAAahoC,GACnF4oB,EAASppB,KAAKO,QAAQimC,EAAahmC,EAAO8nC,EAAM3wB,GAKtD,MAJa,iBAAT2wB,IACAtoC,KAAKO,QAAQimC,EAAahmC,EAAO,QACjCR,KAAKO,QAAQP,KAAKooC,MAAO5nC,EAAO,cAE7B4oB,CACX,CACH,OAAA7oB,CAAQimC,EAAahmC,EAAO8nC,EAAM3wB,GAC3BA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAM8wB,KAAcjC,EAAY,CACjC,MAAMkC,EAASD,EAAWC,OACpB/hC,EAAS+hC,EAAOJ,GAChB9b,EAAS,CACXhsB,EACAmX,EACA8wB,EAAW3gC,SAEf,IAAyC,KAArC,OAASnB,EAAQ6lB,EAAQkc,IAAqB/wB,EAAKgxB,WACnD,OAAO,CAEf,CACA,OAAO,CACX,CACA,UAAAC,IACS,OAAc5oC,KAAKqY,UACpBrY,KAAK6oC,UAAY7oC,KAAKqY,OACtBrY,KAAKqY,YAAS/X,EAEtB,CACH,YAAAkoC,CAAahoC,GACN,GAAIR,KAAKqY,OACL,OAAOrY,KAAKqY,OAEhB,MAAMmuB,EAAcxmC,KAAKqY,OAASrY,KAAKuoC,mBAAmB/nC,GAE1D,OADAR,KAAK8oC,oBAAoBtoC,GAClBgmC,CACX,CACA,kBAAA+B,CAAmB/nC,EAAO8H,GACtB,MAAMzB,EAASrG,GAASA,EAAMqG,OACxBiB,GAAU,IAAA2G,GAAe5H,EAAOiB,SAAWjB,EAAOiB,QAAQ8T,QAAS,CAAC,GACpEA,EAWb,SAAoB/U,GACjB,MAAMkiC,EAAW,CAAC,EACZntB,EAAU,GACVzU,EAAOD,OAAOC,KAAK6gB,GAASpM,QAAQ5Z,OAC1C,IAAI,IAAIG,EAAI,EAAGA,EAAIgF,EAAKlF,OAAQE,IAC5ByZ,EAAQ1Y,KAAK8kB,GAASqf,UAAUlgC,EAAKhF,KAEzC,MAAM6mC,EAAQniC,EAAO+U,SAAW,GAChC,IAAI,IAAIzZ,EAAI,EAAGA,EAAI6mC,EAAM/mC,OAAQE,IAAI,CACjC,MAAMumC,EAASM,EAAM7mC,IACY,IAA7ByZ,EAAQ+H,QAAQ+kB,KAChB9sB,EAAQ1Y,KAAKwlC,GACbK,EAASL,EAAOj9B,KAAM,EAE9B,CACA,MAAO,CACHmQ,UACAmtB,WAER,CA9BwBE,CAAWpiC,GAC3B,OAAmB,IAAZiB,GAAsBQ,EAuCrC,SAA2B9H,GAAO,QAAEob,EAAQ,SAAEmtB,GAAajhC,EAASQ,GAChE,MAAM8gB,EAAS,GACTvU,EAAUrU,EAAMyQ,aACtB,IAAK,MAAMy3B,KAAU9sB,EAAQ,CACzB,MAAMnQ,EAAKi9B,EAAOj9B,GACZzC,EAAOkgC,GAAQphC,EAAQ2D,GAAKnD,GACrB,OAATU,GAGJogB,EAAOlmB,KAAK,CACRwlC,SACA5gC,QAASqhC,GAAW3oC,EAAMqG,OAAQ,CAC9B6hC,SACAM,MAAOD,EAASt9B,IACjBzC,EAAM6L,IAEjB,CACA,OAAOuU,CACX,CAzDgDggB,CAAkB5oC,EAAOob,EAAS9T,EAASQ,GAAhD,EACvC,CACH,mBAAAwgC,CAAoBtoC,GACb,MAAM6oC,EAAsBrpC,KAAK6oC,WAAa,GACxCrC,EAAcxmC,KAAKqY,OACnBsQ,EAAO,CAAChQ,EAAG/E,IAAI+E,EAAE3M,OAAQqC,IAAKuF,EAAE01B,KAAMh7B,GAAID,EAAEq6B,OAAOj9B,KAAO6C,EAAEo6B,OAAOj9B,KACzEzL,KAAKO,QAAQooB,EAAK0gB,EAAqB7C,GAAchmC,EAAO,QAC5DR,KAAKO,QAAQooB,EAAK6d,EAAa6C,GAAsB7oC,EAAO,QAChE,EAsBJ,SAAS0oC,GAAQphC,EAASQ,GACtB,OAAKA,IAAmB,IAAZR,GAGI,IAAZA,EACO,CAAC,EAELA,EALI,IAMf,CAoBA,SAASqhC,GAAWtiC,GAAQ,OAAE6hC,EAAO,MAAEM,GAAUhgC,EAAM6L,GACnD,MAAM1N,EAAON,EAAO0iC,gBAAgBb,GAC9B53B,EAASjK,EAAOkK,gBAAgB/H,EAAM7B,GAI5C,OAHI6hC,GAASN,EAAOhD,UAChB50B,EAAO5N,KAAKwlC,EAAOhD,UAEhB7+B,EAAOmK,eAAeF,EAAQ+D,EAAS,CAC1C,IACD,CACC20B,YAAY,EACZC,WAAW,EACXC,SAAS,GAEjB,CAEA,SAASC,GAAahpC,EAAMmH,GACxB,MAAM8hC,EAAkB,EAAAxiC,EAASoI,SAAS7O,IAAS,CAAC,EAEpD,QADwBmH,EAAQ0H,UAAY,CAAC,GAAG7O,IAAS,CAAC,GACpCmO,WAAahH,EAAQgH,WAAa86B,EAAgB96B,WAAa,GACzF,CAaA,SAAS+6B,GAAcp+B,GACnB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC5B,OAAOA,CAEf,CACA,SAASq+B,GAAiBhgB,GACtB,MAAiB,QAAbA,GAAmC,WAAbA,EACf,IAEM,SAAbA,GAAoC,UAAbA,EAChB,SADX,CAGJ,CACA,SAASigB,GAAct+B,KAAOu+B,GAC1B,GAAIH,GAAcp+B,GACd,OAAOA,EAEX,IAAK,MAAMzC,KAAQghC,EAAa,CAC5B,MAAM3+B,EAAOrC,EAAKqC,MAAQy+B,GAAiB9gC,EAAK8gB,WAAare,EAAGxJ,OAAS,GAAK4nC,GAAcp+B,EAAG,GAAGw+B,eAClG,GAAI5+B,EACA,OAAOA,CAEf,CACA,MAAM,IAAI8c,MAAM,6BAA6B1c,uDACjD,CACA,SAASy+B,GAAmBz+B,EAAIJ,EAAM6C,GAClC,GAAIA,EAAQ7C,EAAO,YAAcI,EAC7B,MAAO,CACHJ,OAGZ,CAUA,SAAS8+B,GAAiBtjC,EAAQiB,GAC9B,MAAMsiC,EAAgB,KAAUvjC,EAAOlG,OAAS,CAC5CoL,OAAQ,CAAC,GAEPs+B,EAAeviC,EAAQiE,QAAU,CAAC,EAClCu+B,EAAiBX,GAAa9iC,EAAOlG,KAAMmH,GAC3CiE,EAAS7E,OAAO+9B,OAAO,MA8C7B,OA7CA/9B,OAAOC,KAAKkjC,GAAcrpC,QAASyK,IAC/B,MAAM8+B,EAAYF,EAAa5+B,GAC/B,KAAK,IAAAtJ,GAASooC,GACV,OAEJ,GAAIA,EAAUC,OACV,OAEJ,MAAMn/B,EAAO0+B,GAAct+B,EAAI8+B,EAxBvC,SAAkC9+B,EAAI5E,GAClC,GAAIA,EAAO0I,MAAQ1I,EAAO0I,KAAKC,SAAU,CACrC,MAAMi7B,EAAU5jC,EAAO0I,KAAKC,SAASxD,OAAQ5E,GAAIA,EAAEoH,UAAY/C,GAAMrE,EAAEuH,UAAYlD,GACnF,GAAIg/B,EAAQxoC,OACR,OAAOioC,GAAmBz+B,EAAI,IAAKg/B,EAAQ,KAAOP,GAAmBz+B,EAAI,IAAKg/B,EAAQ,GAE9F,CACA,MAAO,CAAC,CACZ,CAgBkDC,CAAyBj/B,EAAI5E,GAAS,EAAAO,EAAS2E,OAAOw+B,EAAU5pC,OACpGgqC,EA5Dd,SAAmCt/B,EAAMyD,GACrC,OAAOzD,IAASyD,EAAY,UAAY,SAC5C,CA0D0B87B,CAA0Bv/B,EAAMi/B,GAC5CO,EAAsBT,EAAcr+B,QAAU,CAAC,EACrDA,EAAON,IAAM,QAAQvE,OAAO+9B,OAAO,MAAO,CACtC,CACI55B,QAEJk/B,EACAM,EAAoBx/B,GACpBw/B,EAAoBF,OAG5B9jC,EAAO0I,KAAKC,SAASxO,QAASkN,IAC1B,MAAMvN,EAAOuN,EAAQvN,MAAQkG,EAAOlG,KAC9BmO,EAAYZ,EAAQY,WAAa66B,GAAahpC,EAAMmH,GAEpD+iC,GADkB,KAAUlqC,IAAS,CAAC,GACAoL,QAAU,CAAC,EACvD7E,OAAOC,KAAK0jC,GAAqB7pC,QAAS8pC,IACtC,MAAMz/B,EAtFlB,SAAmCI,EAAIqD,GACnC,IAAIzD,EAAOI,EAMX,MALW,YAAPA,EACAJ,EAAOyD,EACO,YAAPrD,IACPJ,EAAqB,MAAdyD,EAAoB,IAAM,KAE9BzD,CACX,CA8EyB0/B,CAA0BD,EAAWh8B,GAC5CrD,EAAKyC,EAAQ7C,EAAO,WAAaA,EACvCU,EAAON,GAAMM,EAAON,IAAOvE,OAAO+9B,OAAO,OACzC,QAAQl5B,EAAON,GAAK,CAChB,CACIJ,QAEJg/B,EAAa5+B,GACbo/B,EAAoBC,SAIhC5jC,OAAOC,KAAK4E,GAAQ/K,QAASwG,IACzB,MAAMsB,EAAQiD,EAAOvE,IACrB,QAAQsB,EAAO,CACX,EAAA1B,EAAS2E,OAAOjD,EAAMnI,MACtB,EAAAyG,EAAS0B,UAGViD,CACX,CACA,SAASi/B,GAAYnkC,GACjB,MAAMiB,EAAUjB,EAAOiB,UAAYjB,EAAOiB,QAAU,CAAC,GACrDA,EAAQ8T,SAAU,IAAAnN,GAAe3G,EAAQ8T,QAAS,CAAC,GACnD9T,EAAQiE,OAASo+B,GAAiBtjC,EAAQiB,EAC9C,CACA,SAASmjC,GAAS17B,GAId,OAHAA,EAAOA,GAAQ,CAAC,GACXC,SAAWD,EAAKC,UAAY,GACjCD,EAAKqC,OAASrC,EAAKqC,QAAU,GACtBrC,CACX,CAOA,MAAM27B,GAAW,IAAI/qC,IACfgrC,GAAa,IAAIC,IACvB,SAASC,GAAW/1B,EAAUg2B,GAC1B,IAAInkC,EAAO+jC,GAASvoC,IAAI2S,GAMxB,OALKnO,IACDA,EAAOmkC,IACPJ,GAASpoC,IAAIwS,EAAUnO,GACvBgkC,GAAWhoC,IAAIgE,IAEZA,CACX,CACA,MAAMokC,GAAa,CAACzoC,EAAK0f,EAAKhb,KAC1B,MAAMwB,GAAO,OAAiBwZ,EAAKhb,QACtBlH,IAAT0I,GACAlG,EAAIK,IAAI6F,IAGhB,MAAMwiC,GACF,WAAAzrC,CAAY8G,GACR7G,KAAKyrC,QAzBb,SAAoB5kC,GAIhB,OAHAA,EAASA,GAAU,CAAC,GACb0I,KAAO07B,GAASpkC,EAAO0I,MAC9By7B,GAAYnkC,GACLA,CACX,CAoBuB6kC,CAAW7kC,GAC1B7G,KAAK2rC,YAAc,IAAIxrC,IACvBH,KAAK4rC,eAAiB,IAAIzrC,GAC9B,CACA,YAAI0rC,GACA,OAAO7rC,KAAKyrC,QAAQI,QACxB,CACA,QAAIlrC,GACA,OAAOX,KAAKyrC,QAAQ9qC,IACxB,CACA,QAAIA,CAAKA,GACLX,KAAKyrC,QAAQ9qC,KAAOA,CACxB,CACA,QAAI4O,GACA,OAAOvP,KAAKyrC,QAAQl8B,IACxB,CACA,QAAIA,CAAKA,GACLvP,KAAKyrC,QAAQl8B,KAAO07B,GAAS17B,EACjC,CACA,WAAIzH,GACA,OAAO9H,KAAKyrC,QAAQ3jC,OACxB,CACA,WAAIA,CAAQA,GACR9H,KAAKyrC,QAAQ3jC,QAAUA,CAC3B,CACA,WAAI8T,GACA,OAAO5b,KAAKyrC,QAAQ7vB,OACxB,CACA,MAAA1V,GACI,MAAMW,EAAS7G,KAAKyrC,QACpBzrC,KAAK8rC,aACLd,GAAYnkC,EAChB,CACA,UAAAilC,GACI9rC,KAAK2rC,YAAYI,QACjB/rC,KAAK4rC,eAAeG,OACxB,CACH,gBAAAl7B,CAAiBm7B,GACV,OAAOX,GAAWW,EAAa,IAAI,CAC3B,CACI,YAAYA,IACZ,KAGhB,CACH,yBAAAj2B,CAA0Bi2B,EAAal2B,GAChC,OAAOu1B,GAAW,GAAGW,gBAA0Bl2B,IAAc,IAAI,CACzD,CACI,YAAYk2B,iBAA2Bl2B,IACvC,eAAeA,KAEnB,CACI,YAAYk2B,IACZ,KAGhB,CACH,uBAAAx2B,CAAwBw2B,EAAa52B,GAC9B,OAAOi2B,GAAW,GAAGW,KAAe52B,IAAe,IAAI,CAC/C,CACI,YAAY42B,cAAwB52B,IACpC,YAAY42B,IACZ,YAAY52B,IACZ,KAGhB,CACH,eAAAm0B,CAAgBb,GACT,MAAMj9B,EAAKi9B,EAAOj9B,GAElB,OAAO4/B,GAAW,GADLrrC,KAAKW,eACkB8K,IAAM,IAAI,CACtC,CACI,WAAWA,OACRi9B,EAAOuD,wBAA0B,KAGpD,CACH,aAAAC,CAAcC,EAAWC,GAClB,MAAMT,EAAc3rC,KAAK2rC,YACzB,IAAIt2B,EAAQs2B,EAAYhpC,IAAIwpC,GAK5B,OAJK92B,IAAS+2B,IACV/2B,EAAQ,IAAIlV,IACZwrC,EAAY7oC,IAAIqpC,EAAW92B,IAExBA,CACX,CACH,eAAAtE,CAAgBo7B,EAAWE,EAAUD,GAC9B,MAAM,QAAEtkC,EAAQ,KAAEnH,GAAUX,KACtBqV,EAAQrV,KAAKksC,cAAcC,EAAWC,GACtC9/B,EAAS+I,EAAM1S,IAAI0pC,GACzB,GAAI//B,EACA,OAAOA,EAEX,MAAMwE,EAAS,IAAIs6B,IACnBiB,EAASrrC,QAASmG,IACVglC,IACAr7B,EAAO3N,IAAIgpC,GACXhlC,EAAKnG,QAASwG,GAAM+jC,GAAWz6B,EAAQq7B,EAAW3kC,KAEtDL,EAAKnG,QAASwG,GAAM+jC,GAAWz6B,EAAQhJ,EAASN,IAChDL,EAAKnG,QAASwG,GAAM+jC,GAAWz6B,EAAQ,KAAUnQ,IAAS,CAAC,EAAG6G,IAC9DL,EAAKnG,QAASwG,GAAM+jC,GAAWz6B,EAAQ,EAAA1J,EAAUI,IACjDL,EAAKnG,QAASwG,GAAM+jC,GAAWz6B,EAAQ,KAAatJ,MAExD,MAAMwkB,EAAQ7b,MAAMjM,KAAK4M,GAOzB,OANqB,IAAjBkb,EAAM/pB,QACN+pB,EAAM9oB,KAAKgE,OAAO+9B,OAAO,OAEzBkG,GAAW/nC,IAAIipC,IACfh3B,EAAMvS,IAAIupC,EAAUrgB,GAEjBA,CACX,CACH,iBAAAsgB,GACO,MAAM,QAAExkC,EAAQ,KAAEnH,GAAUX,KAC5B,MAAO,CACH8H,EACA,KAAUnH,IAAS,CAAC,EACpB,EAAAyG,EAASoI,SAAS7O,IAAS,CAAC,EAC5B,CACIA,QAEJ,EAAAyG,EACA,KAER,CACH,mBAAAuO,CAAoB7E,EAAQ4E,EAAOb,EAASY,EAAW,CAChD,KAEA,MAAM2T,EAAS,CACXrhB,SAAS,IAEP,SAAEwkC,EAAS,YAAEC,GAAiBC,GAAYzsC,KAAK4rC,eAAgB96B,EAAQ2E,GAC7E,IAAI3N,EAAUykC,EACd,GAqCR,SAAqBpY,EAAOze,GACxB,MAAM,aAAEg3B,EAAa,YAAEC,IAAiB,QAAaxY,GACrD,IAAK,MAAMnvB,KAAQ0Q,EAAM,CACrB,MAAM8zB,EAAakD,EAAa1nC,GAC1BykC,EAAYkD,EAAY3nC,GACxB2D,GAAS8gC,GAAaD,IAAerV,EAAMnvB,GACjD,GAAIwkC,KAAe,QAAW7gC,IAAUikC,GAAYjkC,KAAW8gC,IAAa,OAAQ9gC,GAChF,OAAO,CAEf,CACA,OAAO,CACX,CAhDYkkC,CAAYN,EAAU72B,GAAQ,CAC9B0T,EAAOrhB,SAAU,EACjB8M,GAAU,QAAWA,GAAWA,IAAYA,EAC5C,MAAMi4B,EAAc9sC,KAAKgR,eAAeF,EAAQ+D,EAAS23B,GACzD1kC,GAAU,QAAeykC,EAAU13B,EAASi4B,EAChD,CACA,IAAK,MAAM9nC,KAAQ0Q,EACf0T,EAAOpkB,GAAQ8C,EAAQ9C,GAE3B,OAAOokB,CACX,CACH,cAAApY,CAAeF,EAAQ+D,EAASY,EAAW,CACpC,IACDs3B,GACC,MAAM,SAAER,GAAcE,GAAYzsC,KAAK4rC,eAAgB96B,EAAQ2E,GAC/D,OAAO,IAAAtT,GAAS0S,IAAW,QAAe03B,EAAU13B,OAASvU,EAAWysC,GAAsBR,CAClG,EAEJ,SAASE,GAAYO,EAAel8B,EAAQ2E,GACxC,IAAIJ,EAAQ23B,EAAcrqC,IAAImO,GACzBuE,IACDA,EAAQ,IAAIlV,IACZ6sC,EAAclqC,IAAIgO,EAAQuE,IAE9B,MAAMC,EAAWG,EAASywB,OAC1B,IAAI55B,EAAS+I,EAAM1S,IAAI2S,GACvB,IAAKhJ,EAAQ,CAETA,EAAS,CACLigC,UAFa,QAAgBz7B,EAAQ2E,GAGrC+2B,YAAa/2B,EAASzJ,OAAQihC,IAAKA,EAAEhD,cAActd,SAAS,WAEhEtX,EAAMvS,IAAIwS,EAAUhJ,EACxB,CACA,OAAOA,CACX,CACA,MAAMsgC,GAAejkC,IAAQ,IAAAxG,GAASwG,IAAUzB,OAAOK,oBAAoBoB,GAAO2gC,KAAM9hC,IAAM,QAAWmB,EAAMnB,KAgB/G,MAAM0lC,GAAkB,CACpB,MACA,SACA,OACA,QACA,aAEJ,SAASC,GAAqBrjB,EAAUze,GACpC,MAAoB,QAAbye,GAAmC,WAAbA,IAAgE,IAAvCojB,GAAgBvpB,QAAQmG,IAA6B,MAATze,CACtG,CACA,SAAS+hC,GAAcC,EAAIC,GACvB,OAAO,SAAS30B,EAAG/E,GACf,OAAO+E,EAAE00B,KAAQz5B,EAAEy5B,GAAM10B,EAAE20B,GAAM15B,EAAE05B,GAAM30B,EAAE00B,GAAMz5B,EAAEy5B,EACvD,CACJ,CACA,SAASE,GAAqB14B,GAC1B,MAAMrU,EAAQqU,EAAQrU,MAChByG,EAAmBzG,EAAMsH,QAAQT,UACvC7G,EAAM47B,cAAc,gBACpB,OAASn1B,GAAoBA,EAAiBumC,WAAY,CACtD34B,GACDrU,EACP,CACA,SAASitC,GAAoB54B,GACzB,MAAMrU,EAAQqU,EAAQrU,MAChByG,EAAmBzG,EAAMsH,QAAQT,WACvC,OAASJ,GAAoBA,EAAiBymC,WAAY,CACtD74B,GACDrU,EACP,CACC,SAASmtC,GAAUzrC,GAShB,OARI,UAAqC,kBAATA,EAC5BA,EAAO4wB,SAAS8a,eAAe1rC,GACxBA,GAAQA,EAAKD,SACpBC,EAAOA,EAAK,IAEZA,GAAQA,EAAKuuB,SACbvuB,EAAOA,EAAKuuB,QAETvuB,CACX,CACA,MAAM2rC,GAAY,CAAC,EACbC,GAAYtmC,IACd,MAAMipB,EAASkd,GAAUnmC,GACzB,OAAON,OAAOU,OAAOimC,IAAW7hC,OAAQzH,GAAIA,EAAEksB,SAAWA,GAAQjuB,OAErE,SAASurC,GAAgBvrB,EAAKlhB,EAAO+V,GACjC,MAAMlQ,EAAOD,OAAOC,KAAKqb,GACzB,IAAK,MAAMhb,KAAOL,EAAK,CACnB,MAAM6mC,GAAUxmC,EAChB,GAAIwmC,GAAU1sC,EAAO,CACjB,MAAMqH,EAAQ6Z,EAAIhb,UACXgb,EAAIhb,IACP6P,EAAO,GAAK22B,EAAS1sC,KACrBkhB,EAAIwrB,EAAS32B,GAAQ1O,EAE7B,CACJ,CACJ,CAUA,MAAMslC,GACFxhC,gBAAkB,EAAArF,EAClBqF,iBAAmBohC,GACnBphC,iBAAmB,KACnBA,gBAAkBub,GAClBvb,eA3EU,QA4EVA,gBAAkBqhC,GAClB,eAAO1I,IAAYpjC,GACfgmB,GAAS7kB,OAAOnB,GAChBksC,IACJ,CACA,iBAAOtH,IAAc5kC,GACjBgmB,GAASpkB,UAAU5B,GACnBksC,IACJ,CACA,WAAAnuC,CAAYmC,EAAMisC,GACd,MAAMtnC,EAAS7G,KAAK6G,OAAS,IAAI2kC,GAAO2C,GAClCC,EAAgBT,GAAUzrC,GAC1BmsC,EAAgBP,GAASM,GAC/B,GAAIC,EACA,MAAM,IAAIlmB,MAAM,4CAA+CkmB,EAAc5iC,GAA7D,kDAA6H4iC,EAAc5d,OAAOhlB,GAAK,oBAE3K,MAAM3D,EAAUjB,EAAOmK,eAAenK,EAAOylC,oBAAqBtsC,KAAKiR,cACvEjR,KAAK6rC,SAAW,IAAKhlC,EAAOglC,UAnmEpC,SAAyBpb,GACrB,QAAK,UAAgD,qBAApB6d,iBAAmC7d,aAAkB6d,gBAC3Epd,GAEJqD,EACX,CA8lEgDga,CAAgBH,IACxDpuC,KAAK6rC,SAAS5a,aAAapqB,GAC3B,MAAMgO,EAAU7U,KAAK6rC,SAASrb,eAAe4d,EAAetmC,EAAQ6T,aAC9D8U,EAAS5b,GAAWA,EAAQ4b,OAC5B3S,EAAS2S,GAAUA,EAAO3S,OAC1BD,EAAQ4S,GAAUA,EAAO5S,MAC/B7d,KAAKyL,IAAK,UACVzL,KAAK2M,IAAMkI,EACX7U,KAAKywB,OAASA,EACdzwB,KAAK6d,MAAQA,EACb7d,KAAK8d,OAASA,EACd9d,KAAKwuC,SAAW1mC,EAChB9H,KAAKyuC,aAAezuC,KAAK2b,YACzB3b,KAAKmvB,QAAU,GACfnvB,KAAK0uC,UAAY,GACjB1uC,KAAKkL,aAAU5K,EACfN,KAAK0uB,MAAQ,GACb1uB,KAAKwzB,6BAA0BlzB,EAC/BN,KAAKuU,eAAYjU,EACjBN,KAAKqC,QAAU,GACfrC,KAAK2uC,gBAAaruC,EAClBN,KAAK4uC,WAAa,CAAC,EAClB5uC,KAAK6uC,0BAAuBvuC,EAC7BN,KAAK8uC,gBAAkB,GACvB9uC,KAAK+L,OAAS,CAAC,EACf/L,KAAK+uC,SAAW,IAAI5G,GACpBnoC,KAAKk1B,SAAW,CAAC,EACjBl1B,KAAKgvC,eAAiB,CAAC,EACvBhvC,KAAKivC,UAAW,EAChBjvC,KAAKoW,yBAAsB9V,EAC3BN,KAAKuN,cAAWjN,EAChBN,KAAKkvC,WAAY,QAAUrlC,GAAO7J,KAAKkG,OAAO2D,GAAO/B,EAAQqnC,aAAe,GAC5EnvC,KAAK4X,aAAe,GACpBi2B,GAAU7tC,KAAKyL,IAAMzL,KAChB6U,GAAY4b,IAIjB3sB,EAASf,OAAO/C,KAAM,WAAYutC,IAClCzpC,EAASf,OAAO/C,KAAM,WAAYytC,IAClCztC,KAAKovC,cACDpvC,KAAKivC,UACLjvC,KAAKkG,SAEb,CACA,eAAIyV,GACA,MAAQ7T,SAAS,YAAE6T,EAAY,oBAAE0zB,GAAuB,MAAExxB,EAAM,OAAEC,EAAO,aAAE2wB,GAAkBzuC,KAC7F,OAAK,OAAc2b,GAGf0zB,GAAuBZ,EAChBA,EAEJ3wB,EAASD,EAAQC,EAAS,KALtBnC,CAMf,CACA,QAAIpM,GACA,OAAOvP,KAAK6G,OAAO0I,IACvB,CACA,QAAIA,CAAKA,GACLvP,KAAK6G,OAAO0I,KAAOA,CACvB,CACA,WAAIzH,GACA,OAAO9H,KAAKwuC,QAChB,CACA,WAAI1mC,CAAQA,GACR9H,KAAK6G,OAAOiB,QAAUA,CAC1B,CACA,YAAIkgB,GACA,OAAOA,EACX,CACH,WAAAonB,GASO,OARApvC,KAAKo8B,cAAc,cACfp8B,KAAK8H,QAAQwnC,WACbtvC,KAAKuzB,UAEL,QAAYvzB,KAAMA,KAAK8H,QAAQwrB,kBAEnCtzB,KAAKuvC,aACLvvC,KAAKo8B,cAAc,aACZp8B,IACX,CACA,KAAA+rC,GAEI,OADA,QAAY/rC,KAAKywB,OAAQzwB,KAAK2M,KACvB3M,IACX,CACA,IAAA0D,GAEI,OADAI,EAASJ,KAAK1D,MACPA,IACX,CACH,MAAAuzB,CAAO1V,EAAOC,GACFha,EAAS/B,QAAQ/B,MAGlBA,KAAKwvC,kBAAoB,CACrB3xB,QACAC,UAJJ9d,KAAKyvC,QAAQ5xB,EAAOC,EAO5B,CACA,OAAA2xB,CAAQ5xB,EAAOC,GACX,MAAMhW,EAAU9H,KAAK8H,QACf2oB,EAASzwB,KAAKywB,OACd9U,EAAc7T,EAAQunC,qBAAuBrvC,KAAK2b,YAClD+zB,EAAU1vC,KAAK6rC,SAAS9a,eAAeN,EAAQ5S,EAAOC,EAAQnC,GAC9Dg0B,EAAW7nC,EAAQwrB,kBAAoBtzB,KAAK6rC,SAAS/a,sBACrDjnB,EAAO7J,KAAK6d,MAAQ,SAAW,SACrC7d,KAAK6d,MAAQ6xB,EAAQ7xB,MACrB7d,KAAK8d,OAAS4xB,EAAQ5xB,OACtB9d,KAAKyuC,aAAezuC,KAAK2b,aACpB,QAAY3b,KAAM2vC,GAAU,KAGjC3vC,KAAKo8B,cAAc,SAAU,CACzBxzB,KAAM8mC,KAEV,OAAS5nC,EAAQ8nC,SAAU,CACvB5vC,KACA0vC,GACD1vC,MACCA,KAAKivC,UACDjvC,KAAKkvC,UAAUrlC,IACf7J,KAAK6vC,SAGjB,CACA,mBAAAC,GACI,MACMC,EADU/vC,KAAK8H,QACSiE,QAAU,CAAC,GACzC,OAAKgkC,EAAe,CAACC,EAAapqB,KAC9BoqB,EAAYvkC,GAAKma,GAEzB,CACH,mBAAAqqB,GACO,MAAMnoC,EAAU9H,KAAK8H,QACfooC,EAAYpoC,EAAQiE,OACpBA,EAAS/L,KAAK+L,OACdokC,EAAUjpC,OAAOC,KAAK4E,GAAQ1I,OAAO,CAACmf,EAAK/W,KAC7C+W,EAAI/W,IAAM,EACH+W,GACR,CAAC,GACJ,IAAIxgB,EAAQ,GACRkuC,IACAluC,EAAQA,EAAMwW,OAAOtR,OAAOC,KAAK+oC,GAAWl0B,IAAKvQ,IAC7C,MAAMu+B,EAAekG,EAAUzkC,GACzBJ,EAAO0+B,GAAct+B,EAAIu+B,GACzBoG,EAAoB,MAAT/kC,EACXsX,EAAwB,MAATtX,EACrB,MAAO,CACHvD,QAASkiC,EACTqG,UAAWD,EAAW,YAAcztB,EAAe,SAAW,OAC9D2tB,MAAOF,EAAW,eAAiBztB,EAAe,WAAa,eAI3E,OAAK3gB,EAAQE,IACT,MAAM8nC,EAAe9nC,EAAK4F,QACpB2D,EAAKu+B,EAAav+B,GAClBJ,EAAO0+B,GAAct+B,EAAIu+B,GACzBuG,GAAY,IAAA9hC,GAAeu7B,EAAarpC,KAAMuB,EAAKouC,YAC3BhwC,IAA1B0pC,EAAalgB,UAA0BqjB,GAAqBnD,EAAalgB,SAAUze,KAAU8hC,GAAqBjrC,EAAKmuC,aACvHrG,EAAalgB,SAAW5nB,EAAKmuC,WAEjCF,EAAQ1kC,IAAM,EACd,IAAI3C,EAAQ,KACZ,GAAI2C,KAAMM,GAAUA,EAAON,GAAI9K,OAAS4vC,EACpCznC,EAAQiD,EAAON,OACZ,CAEH3C,EAAQ,IADWkf,GAASsf,SAASiJ,GAC7B,CAAe,CACnB9kC,KACA9K,KAAM4vC,EACN5jC,IAAK3M,KAAK2M,IACVnM,MAAOR,OAEX+L,EAAOjD,EAAM2C,IAAM3C,CACvB,CACAA,EAAM0f,KAAKwhB,EAAcliC,MAE7B,OAAKqoC,EAAS,CAACK,EAAY/kC,KAClB+kC,UACMzkC,EAAON,MAGtB,OAAKM,EAASjD,IACVyjB,GAAQvlB,UAAUhH,KAAM8I,EAAOA,EAAMhB,SACrCykB,GAAQ2C,OAAOlvB,KAAM8I,IAE7B,CACH,eAAA2nC,GACO,MAAMpnC,EAAWrJ,KAAK0uC,UAChBx3B,EAAUlX,KAAKuP,KAAKC,SAASvN,OAC7BgV,EAAU5N,EAASpH,OAEzB,GADAoH,EAASqP,KAAK,CAACC,EAAG/E,IAAI+E,EAAEnP,MAAQoK,EAAEpK,OAC9ByN,EAAUC,EAAS,CACnB,IAAI,IAAI/U,EAAI+U,EAAS/U,EAAI8U,IAAW9U,EAChCnC,KAAK0wC,oBAAoBvuC,GAE7BkH,EAASoO,OAAOP,EAASD,EAAUC,EACvC,CACAlX,KAAK8uC,gBAAkBzlC,EAASigB,MAAM,GAAG5Q,KAAK00B,GAAc,QAAS,SACzE,CACH,2BAAAuD,GACO,MAAQjC,UAAWrlC,EAAWkG,MAAM,SAAEC,IAAiBxP,KACnDqJ,EAASpH,OAASuN,EAASvN,eACpBjC,KAAKkL,QAEhB7B,EAASrI,QAAQ,CAACmJ,EAAMX,KACqC,IAArDgG,EAASxD,OAAQqC,GAAIA,IAAMlE,EAAKuc,UAAUzkB,QAC1CjC,KAAK0wC,oBAAoBlnC,IAGrC,CACA,wBAAAonC,GACI,MAAMC,EAAiB,GACjBrhC,EAAWxP,KAAKuP,KAAKC,SAC3B,IAAIrN,EAAGoH,EAEP,IADAvJ,KAAK2wC,8BACDxuC,EAAI,EAAGoH,EAAOiG,EAASvN,OAAQE,EAAIoH,EAAMpH,IAAI,CAC7C,MAAM+L,EAAUsB,EAASrN,GACzB,IAAIgI,EAAOnK,KAAKyP,eAAetN,GAC/B,MAAMxB,EAAOuN,EAAQvN,MAAQX,KAAK6G,OAAOlG,KAWzC,GAVIwJ,EAAKxJ,MAAQwJ,EAAKxJ,OAASA,IAC3BX,KAAK0wC,oBAAoBvuC,GACzBgI,EAAOnK,KAAKyP,eAAetN,IAE/BgI,EAAKxJ,KAAOA,EACZwJ,EAAK2E,UAAYZ,EAAQY,WAAa66B,GAAahpC,EAAMX,KAAK8H,SAC9DqC,EAAK2mC,MAAQ5iC,EAAQ4iC,OAAS,EAC9B3mC,EAAKX,MAAQrH,EACbgI,EAAKqJ,MAAQ,GAAKtF,EAAQsF,MAC1BrJ,EAAK4mC,QAAU/wC,KAAKwd,iBAAiBrb,GACjCgI,EAAKY,WACLZ,EAAKY,WAAWkD,YAAY9L,GAC5BgI,EAAKY,WAAW6C,iBACb,CACH,MAAMojC,EAAkBhpB,GAASmf,cAAcxmC,IACzC,mBAAE8M,EAAmB,gBAAEC,GAAqB,EAAAtG,EAASoI,SAAS7O,GACpEuG,OAAOc,OAAOgpC,EAAiB,CAC3BtjC,gBAAiBsa,GAASC,WAAWva,GACrCD,mBAAoBA,GAAsBua,GAASC,WAAWxa,KAElEtD,EAAKY,WAAa,IAAIimC,EAAgBhxC,KAAMmC,GAC5C0uC,EAAe3tC,KAAKiH,EAAKY,WAC7B,CACJ,CAEA,OADA/K,KAAKywC,kBACEI,CACX,CACH,cAAAI,IACO,OAAKjxC,KAAKuP,KAAKC,SAAU,CAACtB,EAASpE,KAC/B9J,KAAKyP,eAAe3F,GAAciB,WAAW6E,SAC9C5P,KACP,CACH,KAAA4P,GACO5P,KAAKixC,iBACLjxC,KAAKo8B,cAAc,QACvB,CACA,MAAAl2B,CAAO2D,GACH,MAAMhD,EAAS7G,KAAK6G,OACpBA,EAAOX,SACP,MAAM4B,EAAU9H,KAAKwuC,SAAW3nC,EAAOmK,eAAenK,EAAOylC,oBAAqBtsC,KAAKiR,cACjFigC,EAAgBlxC,KAAKoW,qBAAuBtO,EAAQT,UAK1D,GAJArH,KAAKmxC,gBACLnxC,KAAKoxC,sBACLpxC,KAAKqxC,uBACLrxC,KAAK+uC,SAASnG,cAIP,IAHH5oC,KAAKo8B,cAAc,eAAgB,CACnCvyB,OACA8+B,YAAY,IAEZ,OAEJ,MAAMkI,EAAiB7wC,KAAK4wC,2BAC5B5wC,KAAKo8B,cAAc,wBACnB,IAAI7M,EAAa,EACjB,IAAI,IAAIptB,EAAI,EAAGoH,EAAOvJ,KAAKuP,KAAKC,SAASvN,OAAQE,EAAIoH,EAAMpH,IAAI,CAC3D,MAAM,WAAE4I,GAAgB/K,KAAKyP,eAAetN,GACtCyN,GAASshC,IAAyD,IAAxCL,EAAeltB,QAAQ5Y,GACvDA,EAAWwF,sBAAsBX,GACjC2f,EAAanuB,KAAKoC,KAAKuH,EAAWuI,iBAAkBic,EACxD,CACAA,EAAavvB,KAAKsxC,YAAcxpC,EAAQmlB,OAAOskB,YAAchiB,EAAa,EAC1EvvB,KAAKwxC,cAAcjiB,GACd2hB,IACD,OAAKL,EAAiB9lC,IAClBA,EAAW6E,UAGnB5P,KAAKyxC,gBAAgB5nC,GACrB7J,KAAKo8B,cAAc,cAAe,CAC9BvyB,SAEJ7J,KAAKmvB,QAAQzW,KAAK00B,GAAc,IAAK,SACrC,MAAM,QAAE/qC,EAAQ,WAAEssC,GAAgB3uC,KAC9B2uC,EACA3uC,KAAK0xC,cAAc/C,GAAY,GACxBtsC,EAAQJ,QACfjC,KAAK2xC,mBAAmBtvC,EAASA,GAAS,GAE9CrC,KAAK6vC,QACT,CACH,aAAAsB,IACO,OAAKnxC,KAAK+L,OAASjD,IACfyjB,GAAQ8C,UAAUrvB,KAAM8I,KAE5B9I,KAAK8vC,sBACL9vC,KAAKiwC,qBACT,CACH,mBAAAmB,GACO,MAAMtpC,EAAU9H,KAAK8H,QACf8pC,EAAiB,IAAIxG,IAAIlkC,OAAOC,KAAKnH,KAAK4uC,aAC1CiD,EAAY,IAAIzG,IAAItjC,EAAQgqC,SAC7B,QAAUF,EAAgBC,MAAgB7xC,KAAK6uC,uBAAyB/mC,EAAQwnC,aACjFtvC,KAAK+xC,eACL/xC,KAAKuvC,aAEb,CACH,oBAAA8B,GACO,MAAM,eAAErC,GAAoBhvC,KACtBgyC,EAAUhyC,KAAKiyC,0BAA4B,GACjD,IAAK,MAAM,OAAEtrC,EAAO,MAAErF,EAAM,MAAE8P,KAAY4gC,EAAQ,CAE9CjE,GAAgBiB,EAAgB1tC,EADR,oBAAXqF,GAAgCyK,EAAQA,EAEzD,CACJ,CACH,sBAAA6gC,GACO,MAAMr6B,EAAe5X,KAAK4X,aAC1B,IAAKA,IAAiBA,EAAa3V,OAC/B,OAEJjC,KAAK4X,aAAe,GACpB,MAAMs6B,EAAelyC,KAAKuP,KAAKC,SAASvN,OAClCkwC,EAAW7S,GAAM,IAAI8L,IAAIxzB,EAAa5L,OAAQzH,GAAIA,EAAE,KAAO+6B,GAAKtjB,IAAI,CAACzX,EAAGpC,IAAIA,EAAI,IAAMoC,EAAEkT,OAAO,GAAGyuB,KAAK,OACvGkM,EAAYD,EAAQ,GAC1B,IAAI,IAAIhwC,EAAI,EAAGA,EAAI+vC,EAAc/vC,IAC7B,KAAK,QAAUiwC,EAAWD,EAAQhwC,IAC9B,OAGR,OAAOgO,MAAMjM,KAAKkuC,GAAWp2B,IAAKzX,GAAIA,EAAEwhC,MAAM,MAAM/pB,IAAKrD,IAAI,CACrDhS,OAAQgS,EAAE,GACVrX,OAAQqX,EAAE,GACVvH,OAAQuH,EAAE,KAEtB,CACH,aAAA64B,CAAcjiB,GACP,IAEO,IAFHvvB,KAAKo8B,cAAc,eAAgB,CACnCuM,YAAY,IAEZ,OAEJpc,GAAQrmB,OAAOlG,KAAMA,KAAK6d,MAAO7d,KAAK8d,OAAQyR,GAC9C,MAAMjb,EAAOtU,KAAKuU,UACZ89B,EAAS/9B,EAAKuJ,OAAS,GAAKvJ,EAAKwJ,QAAU,EACjD9d,KAAKmvB,QAAU,IACf,OAAKnvB,KAAK0uB,MAAQvC,IACVkmB,GAA2B,cAAjBlmB,EAAIrC,WAGdqC,EAAInlB,WACJmlB,EAAInlB,YAERhH,KAAKmvB,QAAQjsB,QAAQipB,EAAIgD,aAC1BnvB,MACHA,KAAKmvB,QAAQnuB,QAAQ,CAACkB,EAAMsH,KACxBtH,EAAKowC,KAAO9oC,IAEhBxJ,KAAKo8B,cAAc,cACvB,CACH,eAAAqV,CAAgB5nC,GACT,IAGO,IAHH7J,KAAKo8B,cAAc,uBAAwB,CAC3CvyB,OACA8+B,YAAY,IAFhB,CAMA,IAAI,IAAIxmC,EAAI,EAAGoH,EAAOvJ,KAAKuP,KAAKC,SAASvN,OAAQE,EAAIoH,IAAQpH,EACzDnC,KAAKyP,eAAetN,GAAG4I,WAAW/D,YAEtC,IAAI,IAAI7E,EAAI,EAAGoH,EAAOvJ,KAAKuP,KAAKC,SAASvN,OAAQE,EAAIoH,IAAQpH,EACzDnC,KAAKuyC,eAAepwC,GAAG,QAAW0H,GAAQA,EAAK,CAC3CC,aAAc3H,IACb0H,GAET7J,KAAKo8B,cAAc,sBAAuB,CACtCvyB,QAVJ,CAYJ,CACH,cAAA0oC,CAAe/oC,EAAOK,GACf,MAAMM,EAAOnK,KAAKyP,eAAejG,GAC3BmO,EAAO,CACTxN,OACAX,QACAK,OACA8+B,YAAY,IAEwC,IAApD3oC,KAAKo8B,cAAc,sBAAuBzkB,KAG9CxN,EAAKY,WAAWpJ,QAAQkI,GACxB8N,EAAKgxB,YAAa,EAClB3oC,KAAKo8B,cAAc,qBAAsBzkB,GAC7C,CACA,MAAAk4B,IAGW,IAFH7vC,KAAKo8B,cAAc,eAAgB,CACnCuM,YAAY,MAIZ7kC,EAASV,IAAIpD,MACTA,KAAKivC,WAAanrC,EAAS/B,QAAQ/B,OACnC8D,EAASxC,MAAMtB,OAGnBA,KAAKoC,OACLmrC,GAAqB,CACjB/sC,MAAOR,QAGnB,CACA,IAAAoC,GACI,IAAID,EACJ,GAAInC,KAAKwvC,kBAAmB,CACxB,MAAM,MAAE3xB,EAAM,OAAEC,GAAY9d,KAAKwvC,kBACjCxvC,KAAKwvC,kBAAoB,KACzBxvC,KAAKyvC,QAAQ5xB,EAAOC,EACxB,CAEA,GADA9d,KAAK+rC,QACD/rC,KAAK6d,OAAS,GAAK7d,KAAK8d,QAAU,EAClC,OAEJ,IAEO,IAFH9d,KAAKo8B,cAAc,aAAc,CACjCuM,YAAY,IAEZ,OAEJ,MAAM6J,EAASxyC,KAAKmvB,QACpB,IAAIhtB,EAAI,EAAGA,EAAIqwC,EAAOvwC,QAAUuwC,EAAOrwC,GAAGitB,GAAK,IAAKjtB,EAChDqwC,EAAOrwC,GAAGC,KAAKpC,KAAKuU,WAGxB,IADAvU,KAAKyyC,gBACCtwC,EAAIqwC,EAAOvwC,SAAUE,EACvBqwC,EAAOrwC,GAAGC,KAAKpC,KAAKuU,WAExBvU,KAAKo8B,cAAc,YACvB,CACH,sBAAA9yB,CAAuBF,GAChB,MAAMC,EAAWrJ,KAAK8uC,gBAChB1lB,EAAS,GACf,IAAIjnB,EAAGoH,EACP,IAAIpH,EAAI,EAAGoH,EAAOF,EAASpH,OAAQE,EAAIoH,IAAQpH,EAAE,CAC7C,MAAMgI,EAAOd,EAASlH,GACjBiH,IAAiBe,EAAK4mC,SACvB3nB,EAAOlmB,KAAKiH,EAEpB,CACA,OAAOif,CACX,CACH,4BAAAY,GACO,OAAOhqB,KAAKsJ,wBAAuB,EACvC,CACH,aAAAmpC,GACO,IAEO,IAFHzyC,KAAKo8B,cAAc,qBAAsB,CACzCuM,YAAY,IAEZ,OAEJ,MAAMt/B,EAAWrJ,KAAKgqB,+BACtB,IAAI,IAAI7nB,EAAIkH,EAASpH,OAAS,EAAGE,GAAK,IAAKA,EACvCnC,KAAK0yC,aAAarpC,EAASlH,IAE/BnC,KAAKo8B,cAAc,oBACvB,CACH,YAAAsW,CAAavoC,GACN,MAAMwC,EAAM3M,KAAK2M,IACXgL,EAAO,CACTxN,OACAX,MAAOW,EAAKX,MACZm/B,YAAY,GAEVx0B,GAAO,QAAmBnU,KAAMmK,IACgB,IAAlDnK,KAAKo8B,cAAc,oBAAqBzkB,KAGxCxD,IACA,OAASxH,EAAKwH,GAElBhK,EAAKY,WAAW3I,OACZ+R,IACA,OAAWxH,GAEfgL,EAAKgxB,YAAa,EAClB3oC,KAAKo8B,cAAc,mBAAoBzkB,GAC3C,CACH,aAAA0S,CAAcnE,GACP,OAAO,OAAeA,EAAOlmB,KAAKuU,UAAWvU,KAAKsxC,YACtD,CACA,yBAAAqB,CAA0BvtC,EAAGyE,EAAM/B,EAASqiB,GACxC,MAAMxjB,EAASglB,EAAYC,MAAM/hB,GACjC,MAAsB,oBAAXlD,EACAA,EAAO3G,KAAMoF,EAAG0C,EAASqiB,GAE7B,EACX,CACA,cAAA1a,CAAe3F,GACX,MAAMoE,EAAUlO,KAAKuP,KAAKC,SAAS1F,GAC7BT,EAAWrJ,KAAK0uC,UACtB,IAAIvkC,EAAOd,EAAS2C,OAAQqC,GAAIA,GAAKA,EAAEqY,WAAaxY,GAAS1L,MAkB7D,OAjBK2H,IACDA,EAAO,CACHxJ,KAAM,KACN4O,KAAM,GACNrB,QAAS,KACTnD,WAAY,KACZ2H,OAAQ,KACRlE,QAAS,KACTG,QAAS,KACTmiC,MAAO5iC,GAAWA,EAAQ4iC,OAAS,EACnCtnC,MAAOM,EACP4c,SAAUxY,EACV/B,QAAS,GACTmF,SAAS,GAEbjI,EAASnG,KAAKiH,IAEXA,CACX,CACA,UAAA8G,GACI,OAAOjR,KAAKuN,WAAavN,KAAKuN,UAAW,OAAc,KAAM,CACzD/M,MAAOR,KACPW,KAAM,UAEd,CACA,sBAAA4gB,GACI,OAAOvhB,KAAKgqB,+BAA+B/nB,MAC/C,CACA,gBAAAub,CAAiB1T,GACb,MAAMoE,EAAUlO,KAAKuP,KAAKC,SAAS1F,GACnC,IAAKoE,EACD,OAAO,EAEX,MAAM/D,EAAOnK,KAAKyP,eAAe3F,GACjC,MAA8B,mBAAhBK,EAAKuI,QAAwBvI,EAAKuI,QAAUxE,EAAQwE,MACtE,CACA,oBAAAkgC,CAAqB9oC,EAAcinC,GAClB/wC,KAAKyP,eAAe3F,GAC5B4I,QAAUq+B,CACnB,CACA,oBAAAl0B,CAAqBrT,GACjBxJ,KAAKgvC,eAAexlC,IAAUxJ,KAAKgvC,eAAexlC,EACtD,CACA,iBAAAkT,CAAkBlT,GACd,OAAQxJ,KAAKgvC,eAAexlC,EAChC,CACH,iBAAAqpC,CAAkB/oC,EAAciL,EAAWg8B,GACpC,MAAMlnC,EAAOknC,EAAU,OAAS,OAC1B5mC,EAAOnK,KAAKyP,eAAe3F,GAC3BrJ,EAAQ0J,EAAKY,WAAW8K,wBAAmBvV,EAAWuJ,IACxD,OAAQkL,IACR5K,EAAKoF,KAAKwF,GAAWrC,QAAUq+B,EAC/B/wC,KAAKkG,WAELlG,KAAK4yC,qBAAqB9oC,EAAcinC,GACxCtwC,EAAMyF,OAAOiE,EAAM,CACf4mC,YAEJ/wC,KAAKkG,OAAQyG,GAAMA,EAAI7C,eAAiBA,EAAeD,OAAOvJ,GAEtE,CACA,IAAAwyC,CAAKhpC,EAAciL,GACf/U,KAAK6yC,kBAAkB/oC,EAAciL,GAAW,EACpD,CACA,IAAAg+B,CAAKjpC,EAAciL,GACf/U,KAAK6yC,kBAAkB/oC,EAAciL,GAAW,EACpD,CACH,mBAAA27B,CAAoB5mC,GACb,MAAMK,EAAOnK,KAAK0uC,UAAU5kC,GACxBK,GAAQA,EAAKY,YACbZ,EAAKY,WAAW8E,kBAEb7P,KAAK0uC,UAAU5kC,EAC1B,CACA,KAAAkpC,GACI,IAAI7wC,EAAGoH,EAGP,IAFAvJ,KAAK0D,OACLI,EAASF,OAAO5D,MACZmC,EAAI,EAAGoH,EAAOvJ,KAAKuP,KAAKC,SAASvN,OAAQE,EAAIoH,IAAQpH,EACrDnC,KAAK0wC,oBAAoBvuC,EAEjC,CACA,OAAA8wC,GACIjzC,KAAKo8B,cAAc,iBACnB,MAAM,OAAE3L,EAAO,IAAE9jB,GAAS3M,KAC1BA,KAAKgzC,QACLhzC,KAAK6G,OAAOilC,aACRrb,IACAzwB,KAAK+xC,gBACL,QAAYthB,EAAQ9jB,GACpB3M,KAAK6rC,SAASnb,eAAe/jB,GAC7B3M,KAAKywB,OAAS,KACdzwB,KAAK2M,IAAM,aAERkhC,GAAU7tC,KAAKyL,IACtBzL,KAAKo8B,cAAc,eACvB,CACA,aAAA8W,IAAiBv7B,GACb,OAAO3X,KAAKywB,OAAO0iB,aAAax7B,EACpC,CACH,UAAA43B,GACOvvC,KAAKozC,iBACDpzC,KAAK8H,QAAQwnC,WACbtvC,KAAKqzC,uBAELrzC,KAAKivC,UAAW,CAExB,CACH,cAAAmE,GACO,MAAMvyC,EAAYb,KAAK4uC,WACjB/C,EAAW7rC,KAAK6rC,SAChByH,EAAO,CAAC3yC,EAAMiwB,KAChBib,EAASlb,iBAAiB3wB,KAAMW,EAAMiwB,GACtC/vB,EAAUF,GAAQiwB,GAEhBA,EAAW,CAACxrB,EAAGiJ,EAAGC,KACpBlJ,EAAE6X,QAAU5O,EACZjJ,EAAE8X,QAAU5O,EACZtO,KAAK0xC,cAActsC,KAEvB,OAAKpF,KAAK8H,QAAQgqC,OAASnxC,GAAO2yC,EAAK3yC,EAAMiwB,GACjD,CACH,oBAAAyiB,GACYrzC,KAAK6uC,uBACN7uC,KAAK6uC,qBAAuB,CAAC,GAEjC,MAAMhuC,EAAYb,KAAK6uC,qBACjBhD,EAAW7rC,KAAK6rC,SAChByH,EAAO,CAAC3yC,EAAMiwB,KAChBib,EAASlb,iBAAiB3wB,KAAMW,EAAMiwB,GACtC/vB,EAAUF,GAAQiwB,GAEhB2iB,EAAU,CAAC5yC,EAAMiwB,KACf/vB,EAAUF,KACVkrC,EAAShb,oBAAoB7wB,KAAMW,EAAMiwB,UAClC/vB,EAAUF,KAGnBiwB,EAAW,CAAC/S,EAAOC,KACjB9d,KAAKywB,QACLzwB,KAAKuzB,OAAO1V,EAAOC,IAG3B,IAAI01B,EACJ,MAAMvE,EAAW,KACbsE,EAAQ,SAAUtE,GAClBjvC,KAAKivC,UAAW,EAChBjvC,KAAKuzB,SACL+f,EAAK,SAAU1iB,GACf0iB,EAAK,SAAUE,IAEnBA,EAAW,KACPxzC,KAAKivC,UAAW,EAChBsE,EAAQ,SAAU3iB,GAClB5wB,KAAKgzC,QACLhzC,KAAKyvC,QAAQ,EAAG,GAChB6D,EAAK,SAAUrE,IAEfpD,EAAS7a,WAAWhxB,KAAKywB,QACzBwe,IAEAuE,GAER,CACH,YAAAzB,IACO,OAAK/xC,KAAK4uC,WAAY,CAAChe,EAAUjwB,KAC7BX,KAAK6rC,SAAShb,oBAAoB7wB,KAAMW,EAAMiwB,KAElD5wB,KAAK4uC,WAAa,CAAC,GACnB,OAAK5uC,KAAK6uC,qBAAsB,CAACje,EAAUjwB,KACvCX,KAAK6rC,SAAShb,oBAAoB7wB,KAAMW,EAAMiwB,KAElD5wB,KAAK6uC,0BAAuBvuC,CAChC,CACA,gBAAAmzC,CAAiBzxC,EAAO6H,EAAM2sB,GAC1B,MAAMkd,EAASld,EAAU,MAAQ,SACjC,IAAIrsB,EAAMjI,EAAMC,EAAGoH,EAKnB,IAJa,YAATM,IACAM,EAAOnK,KAAKyP,eAAezN,EAAM,GAAG8H,cACpCK,EAAKY,WAAW,IAAM2oC,EAAS,wBAE/BvxC,EAAI,EAAGoH,EAAOvH,EAAMC,OAAQE,EAAIoH,IAAQpH,EAAE,CAC1CD,EAAOF,EAAMG,GACb,MAAM4I,EAAa7I,GAAQlC,KAAKyP,eAAevN,EAAK4H,cAAciB,WAC9DA,GACAA,EAAW2oC,EAAS,cAAcxxC,EAAKuS,QAASvS,EAAK4H,aAAc5H,EAAKsH,MAEhF,CACJ,CACH,iBAAAmqC,GACO,OAAO3zC,KAAKqC,SAAW,EAC3B,CACH,iBAAAuxC,CAAkBC,GACX,MAAMC,EAAa9zC,KAAKqC,SAAW,GAC7B4D,EAAS4tC,EAAe73B,IAAI,EAAGlS,eAAeN,YAChD,MAAMW,EAAOnK,KAAKyP,eAAe3F,GACjC,IAAKK,EACD,MAAM,IAAIge,MAAM,6BAA+Bre,GAEnD,MAAO,CACHA,eACA2K,QAAStK,EAAKoF,KAAK/F,GACnBA,aAGS,QAAevD,EAAQ6tC,KAEpC9zC,KAAKqC,QAAU4D,EACfjG,KAAK2uC,WAAa,KAClB3uC,KAAK2xC,mBAAmB1rC,EAAQ6tC,GAExC,CACH,aAAA1X,CAAckM,EAAM3wB,EAAM3L,GACnB,OAAOhM,KAAK+uC,SAAS1G,OAAOroC,KAAMsoC,EAAM3wB,EAAM3L,EAClD,CACH,eAAAgC,CAAgB+lC,GACT,OAA6E,IAAtE/zC,KAAK+uC,SAAS12B,OAAOrM,OAAQihC,GAAIA,EAAEvE,OAAOj9B,KAAOsoC,GAAU9xC,MACtE,CACH,kBAAA0vC,CAAmB1rC,EAAQ6tC,EAAYE,GAChC,MAAMC,EAAej0C,KAAK8H,QAAQosC,MAC5BvrB,EAAO,CAAChQ,EAAG/E,IAAI+E,EAAE3M,OAAQqC,IAAKuF,EAAE01B,KAAMh7B,GAAID,EAAEvE,eAAiBwE,EAAExE,cAAgBuE,EAAE7E,QAAU8E,EAAE9E,QAC7F2qC,EAAcxrB,EAAKmrB,EAAY7tC,GAC/BmuC,EAAYJ,EAAS/tC,EAAS0iB,EAAK1iB,EAAQ6tC,GAC7CK,EAAYlyC,QACZjC,KAAKyzC,iBAAiBU,EAAaF,EAAapqC,MAAM,GAEtDuqC,EAAUnyC,QAAUgyC,EAAapqC,MACjC7J,KAAKyzC,iBAAiBW,EAAWH,EAAapqC,MAAM,EAE5D,CACH,aAAA6nC,CAActsC,EAAG4uC,GACV,MAAMr8B,EAAO,CACT3U,MAAOoC,EACP4uC,SACArL,YAAY,EACZ0L,YAAar0C,KAAKqqB,cAAcjlB,IAE9BkvC,EAAe5L,IAAUA,EAAO5gC,QAAQgqC,QAAU9xC,KAAK8H,QAAQgqC,QAAQnlB,SAASvnB,EAAEgvB,OAAOzzB,MAC/F,IAA6D,IAAzDX,KAAKo8B,cAAc,cAAezkB,EAAM28B,GACxC,OAEJ,MAAMzlB,EAAU7uB,KAAKu0C,aAAanvC,EAAG4uC,EAAQr8B,EAAK08B,aAMlD,OALA18B,EAAKgxB,YAAa,EAClB3oC,KAAKo8B,cAAc,aAAczkB,EAAM28B,IACnCzlB,GAAWlX,EAAKkX,UAChB7uB,KAAK6vC,SAEF7vC,IACX,CACH,YAAAu0C,CAAanvC,EAAG4uC,EAAQK,GACjB,MAAQhyC,QAASyxC,EAAa,GAAG,QAAEhsC,GAAa9H,KAC1CmqB,EAAmB6pB,EACnB/tC,EAASjG,KAAKw0C,mBAAmBpvC,EAAG0uC,EAAYO,EAAalqB,GAC7DsqB,GAAU,QAAcrvC,GACxBsvC,EA1xBb,SAA4BtvC,EAAGsvC,EAAWL,EAAaI,GACpD,OAAKJ,GAA0B,aAAXjvC,EAAEzE,KAGlB8zC,EACOC,EAEJtvC,EALI,IAMf,CAkxB0BuvC,CAAmBvvC,EAAGpF,KAAK2uC,WAAY0F,EAAaI,GAClEJ,IACAr0C,KAAK2uC,WAAa,MAClB,OAAS7mC,EAAQ8sC,QAAS,CACtBxvC,EACAa,EACAjG,MACDA,MACCy0C,IACA,OAAS3sC,EAAQ6U,QAAS,CACtBvX,EACAa,EACAjG,MACDA,OAGX,MAAM6uB,IAAW,QAAe5oB,EAAQ6tC,GAMxC,OALIjlB,GAAWmlB,KACXh0C,KAAKqC,QAAU4D,EACfjG,KAAK2xC,mBAAmB1rC,EAAQ6tC,EAAYE,IAEhDh0C,KAAK2uC,WAAa+F,EACX7lB,CACX,CACH,kBAAA2lB,CAAmBpvC,EAAG0uC,EAAYO,EAAalqB,GACxC,GAAe,aAAX/kB,EAAEzE,KACF,MAAO,GAEX,IAAK0zC,EACD,OAAOP,EAEX,MAAMG,EAAej0C,KAAK8H,QAAQosC,MAClC,OAAOl0C,KAAK2yC,0BAA0BvtC,EAAG6uC,EAAapqC,KAAMoqC,EAAc9pB,EAC9E,EAEJ,SAAS+jB,KACL,OAAO,OAAKD,GAAMJ,UAAYrtC,GAAQA,EAAMuuC,SAASnG,aACzD,CAwDI,SAASiM,GAAoB30B,EAAKnD,EAAaC,EAAa83B,GAC5D,MAAMC,GAXepsC,EAWKuX,EAAIpY,QAAQktC,cAV/B,QAAkBrsC,EAAO,CAC5B,aACA,WACA,aACA,cALR,IAAyBA,EAYrB,MAAMssC,GAAiBj4B,EAAcD,GAAe,EAC9Cm4B,EAAa9zC,KAAKC,IAAI4zC,EAAeH,EAAa/3B,EAAc,GAQhEo4B,EAAqBzxB,IACvB,MAAM0xB,GAAiBp4B,EAAc5b,KAAKC,IAAI4zC,EAAevxB,IAAQoxB,EAAa,EAClF,OAAO,OAAYpxB,EAAK,EAAGtiB,KAAKC,IAAI4zC,EAAeG,KAEvD,MAAO,CACHC,WAAYF,EAAkBJ,EAAEM,YAChCC,SAAUH,EAAkBJ,EAAEO,UAC9BC,YAAY,OAAYR,EAAEQ,WAAY,EAAGL,GACzCM,UAAU,OAAYT,EAAES,SAAU,EAAGN,GAE7C,CAGI,SAASO,GAAWj0C,EAAGk0C,EAAOrnC,EAAGC,GACjC,MAAO,CACHD,EAAGA,EAAI7M,EAAIJ,KAAKkd,IAAIo3B,GACpBpnC,EAAGA,EAAI9M,EAAIJ,KAAKod,IAAIk3B,GAE5B,CAcI,SAASC,GAAQhpC,EAAK8H,EAAS+L,EAAQlF,EAASpS,EAAK+X,GACrD,MAAM,EAAE5S,EAAE,EAAEC,EAAI6P,WAAY7c,EAAM,YAAEs0C,EAAc74B,YAAa84B,GAAYphC,EACrEuI,EAAc5b,KAAKoC,IAAIiR,EAAQuI,YAAc1B,EAAUkF,EAASo1B,EAAa,GAC7E74B,EAAc84B,EAAS,EAAIA,EAASv6B,EAAUkF,EAASo1B,EAAc,EAC3E,IAAIE,EAAgB,EACpB,MAAMC,EAAQ7sC,EAAM5H,EACpB,GAAIga,EAAS,CAIT,MAEM06B,IAFuBH,EAAS,EAAIA,EAASv6B,EAAU,IAChC0B,EAAc,EAAIA,EAAc1B,EAAU,IACI,EAE3Ew6B,GAAiBC,GAD4B,IAAvBC,EAA2BD,EAAQC,GAAsBA,EAAqB16B,GAAWy6B,IACrE,CAC9C,CACA,MACME,GAAeF,EADR30C,KAAKoC,IAAI,KAAOuyC,EAAQ/4B,EAAcwD,EAAS,EAAAtB,GAAMlC,GAC7B,EAC/BmB,EAAa7c,EAAQ20C,EAAcH,EACnC13B,EAAWlV,EAAM+sC,EAAcH,GAC/B,WAAET,EAAW,SAAEC,EAAS,WAAEC,EAAW,SAAEC,GAAcX,GAAoBpgC,EAASsI,EAAaC,EAAaoB,EAAWD,GACvH+3B,EAA2Bl5B,EAAcq4B,EACzCc,EAAyBn5B,EAAcs4B,EACvCc,EAA0Bj4B,EAAak3B,EAAaa,EACpDG,EAAwBj4B,EAAWk3B,EAAWa,EAC9CG,EAA2Bv5B,EAAcw4B,EACzCgB,EAAyBx5B,EAAcy4B,EACvCgB,EAA0Br4B,EAAao3B,EAAae,EACpDG,EAAwBr4B,EAAWo3B,EAAWe,EAEpD,GADA5pC,EAAIk3B,YACA5iB,EAAU,CAEV,MAAMy1B,GAAyBN,EAA0BC,GAAyB,EAIlF,GAHA1pC,EAAIuT,IAAI7R,EAAGC,EAAG0O,EAAao5B,EAAyBM,GACpD/pC,EAAIuT,IAAI7R,EAAGC,EAAG0O,EAAa05B,EAAuBL,GAE9Cf,EAAW,EAAG,CACd,MAAMqB,EAAUlB,GAAWU,EAAwBE,EAAuBhoC,EAAGC,GAC7E3B,EAAIuT,IAAIy2B,EAAQtoC,EAAGsoC,EAAQroC,EAAGgnC,EAAUe,EAAuBj4B,EAAW,EAAAY,EAC9E,CAEA,MAAM43B,EAAKnB,GAAWc,EAAwBn4B,EAAU/P,EAAGC,GAG3D,GAFA3B,EAAIo3B,OAAO6S,EAAGvoC,EAAGuoC,EAAGtoC,GAEhBknC,EAAW,EAAG,CACd,MAAMmB,EAAUlB,GAAWc,EAAwBE,EAAuBpoC,EAAGC,GAC7E3B,EAAIuT,IAAIy2B,EAAQtoC,EAAGsoC,EAAQroC,EAAGknC,EAAUp3B,EAAW,EAAAY,EAASy3B,EAAwBr1C,KAAKy1C,GAC7F,CAEA,MAAMC,GAAyB14B,EAAWo3B,EAAWz4B,GAAeoB,EAAao3B,EAAax4B,IAAgB,EAI9G,GAHApQ,EAAIuT,IAAI7R,EAAGC,EAAGyO,EAAaqB,EAAWo3B,EAAWz4B,EAAa+5B,GAAuB,GACrFnqC,EAAIuT,IAAI7R,EAAGC,EAAGyO,EAAa+5B,EAAuB34B,EAAao3B,EAAax4B,GAAa,GAErFw4B,EAAa,EAAG,CAChB,MAAMoB,EAAUlB,GAAWa,EAA0BE,EAAyBnoC,EAAGC,GACjF3B,EAAIuT,IAAIy2B,EAAQtoC,EAAGsoC,EAAQroC,EAAGinC,EAAYiB,EAA0Bp1C,KAAKy1C,GAAI14B,EAAa,EAAAa,EAC9F,CAEA,MAAM+3B,EAAKtB,GAAWS,EAA0B/3B,EAAY9P,EAAGC,GAG/D,GAFA3B,EAAIo3B,OAAOgT,EAAG1oC,EAAG0oC,EAAGzoC,GAEhB+mC,EAAa,EAAG,CAChB,MAAMsB,EAAUlB,GAAWS,EAA0BE,EAAyB/nC,EAAGC,GACjF3B,EAAIuT,IAAIy2B,EAAQtoC,EAAGsoC,EAAQroC,EAAG+mC,EAAYl3B,EAAa,EAAAa,EAASo3B,EACpE,CACJ,KAAO,CACHzpC,EAAIm3B,OAAOz1B,EAAGC,GACd,MAAM0oC,EAAc51C,KAAKkd,IAAI83B,GAA2Bp5B,EAAc3O,EAChE4oC,EAAc71C,KAAKod,IAAI43B,GAA2Bp5B,EAAc1O,EACtE3B,EAAIo3B,OAAOiT,EAAaC,GACxB,MAAMC,EAAY91C,KAAKkd,IAAI+3B,GAAyBr5B,EAAc3O,EAC5D8oC,EAAY/1C,KAAKod,IAAI63B,GAAyBr5B,EAAc1O,EAClE3B,EAAIo3B,OAAOmT,EAAWC,EAC1B,CACAxqC,EAAIyqC,WACR,CAiBA,SAASlT,GAAWv3B,EAAK8H,EAAS+L,EAAQlF,EAAS2F,GAC/C,MAAM,YAAEo2B,EAAY,WAAEl5B,EAAW,cAAE/C,EAAc,QAAEtT,GAAa2M,GAC1D,YAAEgI,EAAY,gBAAE66B,EAAgB,WAAEjW,EAAW,iBAAEE,EAAiB,aAAEyT,GAAkBltC,EACpFyvC,EAAgC,UAAxBzvC,EAAQwY,YACtB,IAAK7D,EACD,OAEJ9P,EAAIg3B,YAAYtC,GAAc,IAC9B10B,EAAIi3B,eAAiBrC,EACjBgW,GACA5qC,EAAI6P,UAA0B,EAAdC,EAChB9P,EAAI6qC,SAAWF,GAAmB,UAElC3qC,EAAI6P,UAAYC,EAChB9P,EAAI6qC,SAAWF,GAAmB,SAEtC,IAAIl5B,EAAW3J,EAAQ2J,SACvB,GAAIi5B,EAAa,CACb1B,GAAQhpC,EAAK8H,EAAS+L,EAAQlF,EAAS8C,EAAU6C,GACjD,IAAI,IAAI9e,EAAI,EAAGA,EAAIk1C,IAAel1C,EAC9BwK,EAAIq3B,SAEH5jB,MAAMhF,KACPgD,EAAWD,GAAc/C,EAAgB,EAAAmC,GAAO,EAAAA,GAExD,CACIg6B,GA3LR,SAAiB5qC,EAAK8H,EAAS2J,GAC3B,MAAM,WAAED,EAAW,YAAEy3B,EAAY,EAAEvnC,EAAE,EAAEC,EAAE,YAAE0O,EAAY,YAAED,GAAiBtI,EAC1E,IAAIgjC,EAAc7B,EAAc54B,EAGhCrQ,EAAIk3B,YACJl3B,EAAIuT,IAAI7R,EAAGC,EAAG0O,EAAamB,EAAas5B,EAAar5B,EAAWq5B,GAC5D16B,EAAc64B,GACd6B,EAAc7B,EAAc74B,EAC5BpQ,EAAIuT,IAAI7R,EAAGC,EAAGyO,EAAaqB,EAAWq5B,EAAat5B,EAAas5B,GAAa,IAE7E9qC,EAAIuT,IAAI7R,EAAGC,EAAGsnC,EAAax3B,EAAW,EAAAY,EAASb,EAAa,EAAAa,GAEhErS,EAAIyqC,YACJzqC,EAAIwH,MACR,CA6KQujC,CAAQ/qC,EAAK8H,EAAS2J,GAEtBtW,EAAQ6vC,UAAYv5B,EAAWD,GAAc,EAAAe,GAAuB,IAAjB81B,GAA0C,UAApBsC,GA1NjF,SAAkB3qC,EAAK8H,EAAS2J,GAC5B,MAAM,WAAED,EAAW,EAAE9P,EAAE,EAAEC,EAAE,YAAE0O,EAAY,YAAED,EAAY,QAAEjV,GAAa2M,GAChE,YAAEgI,EAAY,gBAAE66B,GAAqBxvC,EACrC8vC,EAAiBx2C,KAAKC,IAAIob,EAAcO,GAAa,QAAgBmB,EAAaC,IAGxF,GAFAzR,EAAIk3B,YACJl3B,EAAIuT,IAAI7R,EAAGC,EAAG0O,EAAcP,EAAc,EAAG0B,EAAay5B,EAAiB,EAAGx5B,EAAWw5B,EAAiB,GACtG76B,EAAc,EAAG,CACjB,MAAM86B,EAAiBz2C,KAAKC,IAAIob,EAAcM,GAAa,QAAgBoB,EAAaC,IACxFzR,EAAIuT,IAAI7R,EAAGC,EAAGyO,EAAcN,EAAc,EAAG2B,EAAWy5B,EAAiB,EAAG15B,EAAa05B,EAAiB,GAAG,EACjH,KAAO,CACH,MAAMC,EAAY12C,KAAKC,IAAIob,EAAc,EAAGO,GAAc,QAAgBmB,EAAaC,IACvF,GAAwB,UAApBk5B,EACA3qC,EAAIuT,IAAI7R,EAAGC,EAAGwpC,EAAW15B,EAAW,EAAAc,EAAK,EAAGf,EAAa,EAAAe,EAAK,GAAG,QAC9D,GAAwB,UAApBo4B,EAA6B,CACpC,MAAM91C,EAAI,EAAIs2C,EAAYA,EACpBr5B,GAAQjd,EAAIJ,KAAKkd,IAAIF,EAAW,EAAAc,EAAK,GAAK7Q,EAC1CqQ,GAAQld,EAAIJ,KAAKod,IAAIJ,EAAW,EAAAc,EAAK,GAAK5Q,EAC1C+P,EAAS7c,EAAIJ,KAAKkd,IAAIH,EAAa,EAAAe,EAAK,GAAK7Q,EAC7CkQ,EAAS/c,EAAIJ,KAAKod,IAAIL,EAAa,EAAAe,EAAK,GAAK5Q,EACnD3B,EAAIo3B,OAAOtlB,EAAMC,GACjB/R,EAAIo3B,OAAO1lB,EAAQE,EACvB,CACJ,CACA5R,EAAIyqC,YACJzqC,EAAIm3B,OAAO,EAAG,GACdn3B,EAAIorC,KAAK,EAAG,EAAGprC,EAAI8jB,OAAO5S,MAAOlR,EAAI8jB,OAAO3S,QAC5CnR,EAAIwH,KAAK,UACb,CAgMQ6jC,CAASrrC,EAAK8H,EAAS2J,GAEtBi5B,IACD1B,GAAQhpC,EAAK8H,EAAS+L,EAAQlF,EAAS8C,EAAU6C,GACjDtU,EAAIq3B,SAEZ,CA+GA,SAASiU,GAAStrC,EAAK7E,EAASmU,EAAQnU,GACpC6E,EAAIurC,SAAU,IAAAzpC,GAAewN,EAAMk8B,eAAgBrwC,EAAQqwC,gBAC3DxrC,EAAIg3B,aAAY,IAAAl1B,GAAewN,EAAMolB,WAAYv5B,EAAQu5B,aACzD10B,EAAIi3B,gBAAiB,IAAAn1B,GAAewN,EAAMslB,iBAAkBz5B,EAAQy5B,kBACpE50B,EAAI6qC,UAAW,IAAA/oC,GAAewN,EAAMq7B,gBAAiBxvC,EAAQwvC,iBAC7D3qC,EAAI6P,WAAY,IAAA/N,GAAewN,EAAMQ,YAAa3U,EAAQ2U,aAC1D9P,EAAI0P,aAAc,IAAA5N,GAAewN,EAAMK,YAAaxU,EAAQwU,YAChE,CACA,SAASynB,GAAOp3B,EAAKyrC,EAAUrzC,GAC3B4H,EAAIo3B,OAAOh/B,EAAOsJ,EAAGtJ,EAAOuJ,EAChC,CAUA,SAAS+pC,GAASpyB,EAAQa,EAAS0F,EAAS,CAAC,GACzC,MAAMpb,EAAQ6U,EAAOhkB,QACbX,MAAOg3C,EAAc,EAAIpvC,IAAKqvC,EAAYnnC,EAAQ,GAAOob,GACzDlrB,MAAOk3C,EAAetvC,IAAKuvC,GAAgB3xB,EAC7CxlB,EAAQF,KAAKoC,IAAI80C,EAAaE,GAC9BtvC,EAAM9H,KAAKC,IAAIk3C,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACHrnC,QACA9P,QACAqE,KAAMmhB,EAAQnhB,KACd4D,KAAML,EAAM5H,IAAUo3C,EAAUtnC,EAAQlI,EAAM5H,EAAQ4H,EAAM5H,EAEpE,CACC,SAASq3C,GAAYhsC,EAAK8Z,EAAMK,EAAS0F,GACtC,MAAM,OAAEvG,EAAO,QAAEne,GAAa2e,GACxB,MAAErV,EAAM,MAAE9P,EAAM,KAAEqE,EAAK,KAAE4D,GAAU8uC,GAASpyB,EAAQa,EAAS0F,GAC7DosB,EA1BT,SAAuB9wC,GACpB,OAAIA,EAAQ+wC,QACD,KAEP/wC,EAAQgxC,SAA8C,aAAnChxC,EAAQixC,uBACpB,KAEJhV,EACX,CAkBuBiV,CAAclxC,GACjC,IACI3F,EAAG+jB,EAAO3U,GADV,KAAE8F,GAAM,EAAK,QAAEpO,GAAaujB,GAAU,CAAC,EAE3C,IAAIrqB,EAAI,EAAGA,GAAKoH,IAAQpH,EACpB+jB,EAAQD,GAAQ3kB,GAAS2H,EAAUM,EAAOpH,EAAIA,IAAMiP,GAChD8U,EAAMG,OAEChP,GACP1K,EAAIm3B,OAAO5d,EAAM7X,EAAG6X,EAAM5X,GAC1B+I,GAAO,GAEPuhC,EAAWjsC,EAAK4E,EAAM2U,EAAOjd,EAASnB,EAAQ+wC,SAElDtnC,EAAO2U,GAMX,OAJIvgB,IACAugB,EAAQD,GAAQ3kB,GAAS2H,EAAUM,EAAO,IAAM6H,GAChDwnC,EAAWjsC,EAAK4E,EAAM2U,EAAOjd,EAASnB,EAAQ+wC,YAEzClzC,CACb,CACC,SAASszC,GAAgBtsC,EAAK8Z,EAAMK,EAAS0F,GAC1C,MAAMvG,EAASQ,EAAKR,QACd,MAAE7U,EAAM,MAAE9P,EAAM,KAAEiI,GAAU8uC,GAASpyB,EAAQa,EAAS0F,IACtD,KAAEnV,GAAM,EAAK,QAAEpO,GAAaujB,GAAU,CAAC,EAC7C,IAEIrqB,EAAG+jB,EAAOgzB,EAAO/5B,EAAMJ,EAAMo6B,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAc9vC,IAASlI,GAAS2H,EAAUM,EAAOC,EAAQA,IAAU4H,EACnEmoC,EAAQ,KACNp6B,IAASJ,IACTpS,EAAIo3B,OAAOqV,EAAMr6B,GACjBpS,EAAIo3B,OAAOqV,EAAMj6B,GACjBxS,EAAIo3B,OAAOqV,EAAMD,KAOzB,IAJI9hC,IACA6O,EAAQD,EAAOqzB,EAAW,IAC1B3sC,EAAIm3B,OAAO5d,EAAM7X,EAAG6X,EAAM5X,IAE1BnM,EAAI,EAAGA,GAAKoH,IAAQpH,EAAE,CAEtB,GADA+jB,EAAQD,EAAOqzB,EAAWn3C,IACtB+jB,EAAMG,KACN,SAEJ,MAAMhY,EAAI6X,EAAM7X,EACVC,EAAI4X,EAAM5X,EACVkrC,EAAa,EAAJnrC,EACXmrC,IAAWN,GACP5qC,EAAI6Q,EACJA,EAAO7Q,EACAA,EAAIyQ,IACXA,EAAOzQ,GAEX8qC,GAAQC,EAASD,EAAO/qC,KAAOgrC,IAE/BE,IACA5sC,EAAIo3B,OAAO11B,EAAGC,GACd4qC,EAAQM,EACRH,EAAS,EACTl6B,EAAOJ,EAAOzQ,GAElB6qC,EAAQ7qC,CACZ,CACAirC,GACJ,CACC,SAASE,GAAkBhzB,GACxB,MAAMzd,EAAOyd,EAAK3e,QACZu5B,EAAar4B,EAAKq4B,YAAcr4B,EAAKq4B,WAAWp/B,OAEtD,OADqBwkB,EAAKI,aAAeJ,EAAK/gB,QAAUsD,EAAK8vC,SAA2C,aAAhC9vC,EAAK+vC,yBAA0C/vC,EAAK6vC,UAAYxX,EACnH4X,GAAkBN,EAC3C,CAoCA,MAAMe,GAA8B,oBAAXC,OACzB,SAASv3C,GAAKuK,EAAK8Z,EAAMnlB,EAAO8P,GACxBsoC,KAAcjzB,EAAK3e,QAAQgf,QA5BnC,SAA6Bna,EAAK8Z,EAAMnlB,EAAO8P,GAC3C,IAAIwoC,EAAOnzB,EAAKozB,MACXD,IACDA,EAAOnzB,EAAKozB,MAAQ,IAAIF,OACpBlzB,EAAKmzB,KAAKA,EAAMt4C,EAAO8P,IACvBwoC,EAAKxC,aAGba,GAAStrC,EAAK8Z,EAAK3e,SACnB6E,EAAIq3B,OAAO4V,EACf,CAmBQE,CAAoBntC,EAAK8Z,EAAMnlB,EAAO8P,GAlB9C,SAA0BzE,EAAK8Z,EAAMnlB,EAAO8P,GACxC,MAAM,SAAE2oC,EAAS,QAAEjyC,GAAa2e,EAC1BuzB,EAAgBP,GAAkBhzB,GACxC,IAAK,MAAMK,KAAWizB,EAClB9B,GAAStrC,EAAK7E,EAASgf,EAAQ7K,OAC/BtP,EAAIk3B,YACAmW,EAAcrtC,EAAK8Z,EAAMK,EAAS,CAClCxlB,QACA4H,IAAK5H,EAAQ8P,EAAQ,KAErBzE,EAAIyqC,YAERzqC,EAAIq3B,QAEZ,CAMQiW,CAAiBttC,EAAK8Z,EAAMnlB,EAAO8P,EAE3C,CACA,MAAM8oC,WAAoB5kB,GACtB7oB,UAAY,OACfA,gBAAkB,CACX0rC,eAAgB,OAChB9W,WAAY,GACZE,iBAAkB,EAClB+V,gBAAiB,QACjB76B,YAAa,EACb09B,iBAAiB,EACjBpB,uBAAwB,UACxBhrC,MAAM,EACNyY,UAAU,EACVqyB,SAAS,EACTC,QAAS,GAEhBrsC,qBAAuB,CAChB2P,gBAAiB,kBACjBE,YAAa,eAEjB7P,mBAAqB,CACjB8O,aAAa,EACbE,WAAaD,GAAgB,eAATA,GAAkC,SAATA,GAEjD,WAAAzb,CAAY+E,GACRgY,QACA9c,KAAK+mB,UAAW,EAChB/mB,KAAK8H,aAAUxH,EACfN,KAAK8G,YAASxG,EACdN,KAAK0F,WAAQpF,EACbN,KAAK2nB,eAAYrnB,EACjBN,KAAK65C,WAAQv5C,EACbN,KAAKo6C,aAAU95C,EACfN,KAAKq6C,eAAY/5C,EACjBN,KAAK6mB,YAAa,EAClB7mB,KAAKs6C,gBAAiB,EACtBt6C,KAAK4mB,mBAAgBtmB,EACjBwE,GACAoC,OAAOc,OAAOhI,KAAM8E,EAE5B,CACA,mBAAA0iB,CAAoBjT,EAAWzF,GAC3B,MAAMhH,EAAU9H,KAAK8H,QACrB,IAAKA,EAAQgxC,SAA8C,aAAnChxC,EAAQixC,0BAA2CjxC,EAAQ+wC,UAAY74C,KAAKs6C,eAAgB,CAChH,MAAM30C,EAAOmC,EAAQ0e,SAAWxmB,KAAK0F,MAAQ1F,KAAK2nB,WAClD,QAA2B3nB,KAAKo6C,QAAStyC,EAASyM,EAAW5O,EAAMmJ,GACnE9O,KAAKs6C,gBAAiB,CAC1B,CACJ,CACA,UAAIr0B,CAAOA,GACPjmB,KAAKo6C,QAAUn0B,SACRjmB,KAAKq6C,iBACLr6C,KAAK65C,MACZ75C,KAAKs6C,gBAAiB,CAC1B,CACA,UAAIr0B,GACA,OAAOjmB,KAAKo6C,OAChB,CACA,YAAIL,GACA,OAAO/5C,KAAKq6C,YAAcr6C,KAAKq6C,WAAY,QAAiBr6C,KAAMA,KAAK8H,QAAQgf,SACnF,CACH,KAAA6P,GACO,MAAMojB,EAAW/5C,KAAK+5C,SAChB9zB,EAASjmB,KAAKimB,OACpB,OAAO8zB,EAAS93C,QAAUgkB,EAAO8zB,EAAS,GAAGz4C,MACjD,CACH,IAAA+hB,GACO,MAAM02B,EAAW/5C,KAAK+5C,SAChB9zB,EAASjmB,KAAKimB,OACd7U,EAAQ2oC,EAAS93C,OACvB,OAAOmP,GAAS6U,EAAO8zB,EAAS3oC,EAAQ,GAAGlI,IAC/C,CACH,WAAAqxC,CAAYr0B,EAAO2f,GACZ,MAAM/9B,EAAU9H,KAAK8H,QACfa,EAAQud,EAAM2f,GACd5f,EAASjmB,KAAKimB,OACd8zB,GAAW,QAAe/5C,KAAM,CAClC6lC,WACAvkC,MAAOqH,EACPO,IAAKP,IAET,IAAKoxC,EAAS93C,OACV,OAEJ,MAAMmnB,EAAS,GACToxB,EA/Hb,SAAiC1yC,GAC9B,OAAIA,EAAQ+wC,QACD,KAEP/wC,EAAQgxC,SAA8C,aAAnChxC,EAAQixC,uBACpB,KAEJ,IACX,CAuH6B0B,CAAwB3yC,GAC7C,IAAI3F,EAAGoH,EACP,IAAIpH,EAAI,EAAGoH,EAAOwwC,EAAS93C,OAAQE,EAAIoH,IAAQpH,EAAE,CAC7C,MAAM,MAAEb,EAAM,IAAE4H,GAAS6wC,EAAS53C,GAC5BshC,EAAKxd,EAAO3kB,GACZoiC,EAAKzd,EAAO/c,GAClB,GAAIu6B,IAAOC,EAAI,CACXta,EAAOlmB,KAAKugC,GACZ,QACJ,CACA,MACMiX,EAAeF,EAAa/W,EAAIC,EAD5BtiC,KAAK4X,KAAKrQ,EAAQ86B,EAAGoC,KAAcnC,EAAGmC,GAAYpC,EAAGoC,KAClB/9B,EAAQ+wC,SACrD6B,EAAa7U,GAAY3f,EAAM2f,GAC/Bzc,EAAOlmB,KAAKw3C,EAChB,CACA,OAAyB,IAAlBtxB,EAAOnnB,OAAemnB,EAAO,GAAKA,CAC7C,CACH,WAAAuvB,CAAYhsC,EAAKma,EAAS0F,GAEnB,OADsBitB,GAAkBz5C,KACjCg6C,CAAcrtC,EAAK3M,KAAM8mB,EAAS0F,EAC7C,CACH,IAAAotB,CAAKjtC,EAAKrL,EAAO8P,GACV,MAAM2oC,EAAW/5C,KAAK+5C,SAChBC,EAAgBP,GAAkBz5C,MACxC,IAAI2F,EAAO3F,KAAK0F,MAChBpE,EAAQA,GAAS,EACjB8P,EAAQA,GAASpR,KAAKimB,OAAOhkB,OAASX,EACtC,IAAK,MAAMwlB,KAAWizB,EAClBp0C,GAAQq0C,EAAcrtC,EAAK3M,KAAM8mB,EAAS,CACtCxlB,QACA4H,IAAK5H,EAAQ8P,EAAQ,IAG7B,QAASzL,CACb,CACH,IAAAvD,CAAKuK,EAAK4H,EAAWjT,EAAO8P,GACrB,MAAMtJ,EAAU9H,KAAK8H,SAAW,CAAC,GAClB9H,KAAKimB,QAAU,IACnBhkB,QAAU6F,EAAQ2U,cACzB9P,EAAIy2B,OACJhhC,GAAKuK,EAAK3M,KAAMsB,EAAO8P,GACvBzE,EAAI22B,WAEJtjC,KAAK+mB,WACL/mB,KAAKs6C,gBAAiB,EACtBt6C,KAAK65C,WAAQv5C,EAErB,EAGJ,SAASq6C,GAAUhxB,EAAIsC,EAAK5gB,EAAM8e,GAC9B,MAAMriB,EAAU6hB,EAAG7hB,SACX,CAACuD,GAAO1C,GAAWghB,EAAG2B,SAAS,CACnCjgB,GACD8e,GACH,OAAO/oB,KAAK4X,IAAIiT,EAAMtjB,GAASb,EAAQuT,OAASvT,EAAQ8yC,SAC5D,CAiFA,SAASC,GAAaC,EAAK3wB,GACvB,MAAM,EAAE9b,EAAE,EAAEC,EAAE,KAAE6L,EAAK,MAAE0D,EAAM,OAAEC,GAAag9B,EAAIxvB,SAAS,CACrD,IACA,IACA,OACA,QACA,UACDnB,GACH,IAAInW,EAAMF,EAAOD,EAAKE,EAAQgnC,EAc9B,OAbID,EAAI5gC,YACJ6gC,EAAOj9B,EAAS,EAChB9J,EAAO5S,KAAKC,IAAIgN,EAAG8L,GACnBrG,EAAQ1S,KAAKoC,IAAI6K,EAAG8L,GACpBtG,EAAMvF,EAAIysC,EACVhnC,EAASzF,EAAIysC,IAEbA,EAAOl9B,EAAQ,EACf7J,EAAO3F,EAAI0sC,EACXjnC,EAAQzF,EAAI0sC,EACZlnC,EAAMzS,KAAKC,IAAIiN,EAAG6L,GAClBpG,EAAS3S,KAAKoC,IAAI8K,EAAG6L,IAElB,CACHnG,OACAH,MACAC,QACAC,SAER,CACA,SAASinC,GAAY30B,EAAM1d,EAAOtH,EAAKmC,GACnC,OAAO6iB,EAAO,GAAI,OAAY1d,EAAOtH,EAAKmC,EAC9C,CA4BA,SAASy3C,GAAcH,GACnB,MAAMI,EAASL,GAAaC,GACtBj9B,EAAQq9B,EAAOpnC,MAAQonC,EAAOlnC,KAC9B8J,EAASo9B,EAAOnnC,OAASmnC,EAAOrnC,IAChCwT,EA/BV,SAA0ByzB,EAAKK,EAAMC,GACjC,MAAMzyC,EAAQmyC,EAAIhzC,QAAQ2U,YACpB4J,EAAOy0B,EAAI7gC,cACX86B,GAAI,QAAOpsC,GACjB,MAAO,CACHgL,EAAGqnC,GAAY30B,EAAKxS,IAAKkhC,EAAElhC,IAAK,EAAGunC,GACnC55C,EAAGw5C,GAAY30B,EAAKvS,MAAOihC,EAAEjhC,MAAO,EAAGqnC,GACvCvnC,EAAGonC,GAAY30B,EAAKtS,OAAQghC,EAAEhhC,OAAQ,EAAGqnC,GACzC9qC,EAAG0qC,GAAY30B,EAAKrS,KAAM+gC,EAAE/gC,KAAM,EAAGmnC,GAE7C,CAqBmBE,CAAiBP,EAAKj9B,EAAQ,EAAGC,EAAS,GACnDzC,EArBV,SAA2By/B,EAAKK,EAAMC,GAClC,MAAM,mBAAE/gC,GAAwBygC,EAAIxvB,SAAS,CACzC,uBAEE3iB,EAAQmyC,EAAIhzC,QAAQktC,aACpBD,GAAI,QAAcpsC,GAClB2yC,EAAOl6C,KAAKC,IAAI85C,EAAMC,GACtB/0B,EAAOy0B,EAAI7gC,cACXshC,EAAelhC,IAAsB,IAAAlY,GAASwG,GACpD,MAAO,CACH6yC,QAASR,IAAaO,GAAgBl1B,EAAKxS,KAAOwS,EAAKrS,KAAM+gC,EAAEyG,QAAS,EAAGF,GAC3EG,SAAUT,IAAaO,GAAgBl1B,EAAKxS,KAAOwS,EAAKvS,MAAOihC,EAAE0G,SAAU,EAAGH,GAC9EI,WAAYV,IAAaO,GAAgBl1B,EAAKtS,QAAUsS,EAAKrS,KAAM+gC,EAAE2G,WAAY,EAAGJ,GACpFK,YAAaX,IAAaO,GAAgBl1B,EAAKtS,QAAUsS,EAAKvS,MAAOihC,EAAE4G,YAAa,EAAGL,GAE/F,CAMmBM,CAAkBd,EAAKj9B,EAAQ,EAAGC,EAAS,GAC1D,MAAO,CACH+9B,MAAO,CACHxtC,EAAG6sC,EAAOlnC,KACV1F,EAAG4sC,EAAOrnC,IACVma,EAAGnQ,EACHqQ,EAAGpQ,EACHzC,UAEJk8B,MAAO,CACHlpC,EAAG6sC,EAAOlnC,KAAOqT,EAAO/W,EACxBhC,EAAG4sC,EAAOrnC,IAAMwT,EAAO1T,EACvBqa,EAAGnQ,EAAQwJ,EAAO/W,EAAI+W,EAAO7lB,EAC7B0sB,EAAGpQ,EAASuJ,EAAO1T,EAAI0T,EAAOzT,EAC9ByH,OAAQ,CACJmgC,QAASp6C,KAAKoC,IAAI,EAAG6X,EAAOmgC,QAAUp6C,KAAKoC,IAAI6jB,EAAO1T,EAAG0T,EAAO/W,IAChEmrC,SAAUr6C,KAAKoC,IAAI,EAAG6X,EAAOogC,SAAWr6C,KAAKoC,IAAI6jB,EAAO1T,EAAG0T,EAAO7lB,IAClEk6C,WAAYt6C,KAAKoC,IAAI,EAAG6X,EAAOqgC,WAAat6C,KAAKoC,IAAI6jB,EAAOzT,EAAGyT,EAAO/W,IACtEqrC,YAAav6C,KAAKoC,IAAI,EAAG6X,EAAOsgC,YAAcv6C,KAAKoC,IAAI6jB,EAAOzT,EAAGyT,EAAO7lB,MAIxF,CACA,SAAS8oB,GAAQwwB,EAAKzsC,EAAGC,EAAG6b,GACxB,MAAM2xB,EAAc,OAANztC,EACR0tC,EAAc,OAANztC,EAER4sC,EAASJ,KADEgB,GAASC,IACSlB,GAAaC,EAAK3wB,GACrD,OAAO+wB,IAAWY,IAAS,QAAWztC,EAAG6sC,EAAOlnC,KAAMknC,EAAOpnC,UAAYioC,IAAS,QAAWztC,EAAG4sC,EAAOrnC,IAAKqnC,EAAOnnC,QACvH,CAIC,SAASioC,GAAkBrvC,EAAKorC,GAC7BprC,EAAIorC,KAAKA,EAAK1pC,EAAG0pC,EAAKzpC,EAAGypC,EAAK/pB,EAAG+pB,EAAK7pB,EAC1C,CACA,SAAS+tB,GAAYlE,EAAMmE,EAAQC,EAAU,CAAC,GAC1C,MAAM9tC,EAAI0pC,EAAK1pC,IAAM8tC,EAAQ9tC,GAAK6tC,EAAS,EACrC5tC,EAAIypC,EAAKzpC,IAAM6tC,EAAQ7tC,GAAK4tC,EAAS,EACrCluB,GAAK+pB,EAAK1pC,EAAI0pC,EAAK/pB,IAAMmuB,EAAQ9tC,EAAI8tC,EAAQnuB,EAAIkuB,EAAS,GAAK7tC,EAC/D6f,GAAK6pB,EAAKzpC,EAAIypC,EAAK7pB,IAAMiuB,EAAQ7tC,EAAI6tC,EAAQjuB,EAAIguB,EAAS,GAAK5tC,EACrE,MAAO,CACHD,EAAG0pC,EAAK1pC,EAAIA,EACZC,EAAGypC,EAAKzpC,EAAIA,EACZ0f,EAAG+pB,EAAK/pB,EAAIA,EACZE,EAAG6pB,EAAK7pB,EAAIA,EACZ7S,OAAQ08B,EAAK18B,OAErB,CAuEA,IAAIhH,GAAwBnN,OAAO0O,OAAO,CAC1CqM,UAAW,KACXm6B,WA5pBA,cAAyB9mB,GACrB7oB,UAAY,MACZA,gBAAkB,CACd6T,YAAa,SACbhE,YAAa,OACb+kB,WAAY,GACZE,iBAAkB,EAClB+V,qBAAiBh3C,EACjB00C,aAAc,EACdv4B,YAAa,EACb+D,OAAQ,EACRlF,QAAS,EACTsD,WAAOte,EACP2gB,UAAU,EACV02B,UAAU,GAEdlrC,qBAAuB,CACnB2P,gBAAiB,mBAErB3P,mBAAqB,CACjB8O,aAAa,EACbE,WAAaD,GAAgB,eAATA,GAExBJ,cACAgD,SACAi5B,YACAt6B,YACAC,YACA44B,YACAz3B,WACA,WAAApe,CAAY+E,GACRgY,QACA9c,KAAK8H,aAAUxH,EACfN,KAAKob,mBAAgB9a,EACrBN,KAAKme,gBAAa7d,EAClBN,KAAKoe,cAAW9d,EAChBN,KAAK+c,iBAAczc,EACnBN,KAAKgd,iBAAc1c,EACnBN,KAAK41C,YAAc,EACnB51C,KAAKq3C,YAAc,EACfvyC,GACAoC,OAAOc,OAAOhI,KAAM8E,EAE5B,CACA,OAAAwlB,CAAQ+xB,EAAQC,EAAQnyB,GACpB,MAAMjE,EAAQlmB,KAAKsrB,SAAS,CACxB,IACA,KACDnB,IACG,MAAEvL,EAAM,SAAEwM,IAAc,OAAkBlF,EAAO,CACnD7X,EAAGguC,EACH/tC,EAAGguC,KAED,WAAEn+B,EAAW,SAAEC,EAAS,YAAErB,EAAY,YAAEC,EAAY,cAAE5B,GAAmBpb,KAAKsrB,SAAS,CACzF,aACA,WACA,cACA,cACA,iBACDnB,GACGoyB,GAAWv8C,KAAK8H,QAAQwT,QAAUtb,KAAK8H,QAAQ2U,aAAe,EAC9DoD,GAAiB,IAAApR,GAAe2M,EAAegD,EAAWD,GAC1Dq+B,GAAiB,OAAc59B,EAAOT,EAAYC,IAAaD,IAAeC,EAC9Eq+B,EAAgB58B,GAAkB,EAAAtC,GAAOi/B,EACzCE,GAAe,QAAWtxB,EAAUrO,EAAcw/B,EAASv/B,EAAcu/B,GAC/E,OAAOE,GAAiBC,CAC5B,CACA,cAAAvxB,CAAehB,GACX,MAAM,EAAE9b,EAAE,EAAEC,EAAE,WAAE6P,EAAW,SAAEC,EAAS,YAAErB,EAAY,YAAEC,GAAiBhd,KAAKsrB,SAAS,CACjF,IACA,IACA,aACA,WACA,cACA,eACDnB,IACG,OAAE3J,EAAO,QAAElF,GAAatb,KAAK8H,QAC7B60C,GAAax+B,EAAaC,GAAY,EACtCw+B,GAAc7/B,EAAcC,EAAc1B,EAAUkF,GAAU,EACpE,MAAO,CACHnS,EAAGA,EAAIjN,KAAKkd,IAAIq+B,GAAaC,EAC7BtuC,EAAGA,EAAIlN,KAAKod,IAAIm+B,GAAaC,EAErC,CACA,eAAArnB,CAAgBpL,GACZ,OAAOnqB,KAAKmrB,eAAehB,EAC/B,CACA,IAAA/nB,CAAKuK,GACD,MAAM,QAAE7E,EAAQ,cAAEsT,GAAmBpb,KAC/BwgB,GAAU1Y,EAAQ0Y,QAAU,GAAK,EACjClF,GAAWxT,EAAQwT,SAAW,GAAK,EACnC2F,EAAWnZ,EAAQmZ,SAGzB,GAFAjhB,KAAK41C,YAAsC,UAAxB9tC,EAAQwY,YAA0B,IAAO,EAC5DtgB,KAAKq3C,YAAcj8B,EAAgB,EAAAmC,EAAMnc,KAAKoE,MAAM4V,EAAgB,EAAAmC,GAAO,EACrD,IAAlBnC,GAAuBpb,KAAK+c,YAAc,GAAK/c,KAAKgd,YAAc,EAClE,OAEJrQ,EAAIy2B,OACJ,MAAMuZ,GAAa38C,KAAKme,WAAane,KAAKoe,UAAY,EACtDzR,EAAIkwC,UAAUz7C,KAAKkd,IAAIq+B,GAAan8B,EAAQpf,KAAKod,IAAIm+B,GAAan8B,GAClE,MACMs8B,EAAet8B,GADT,EAAIpf,KAAKod,IAAIpd,KAAKC,IAAI,EAAA6d,EAAI9D,GAAiB,KAEvDzO,EAAIwP,UAAYrU,EAAQsU,gBACxBzP,EAAI0P,YAAcvU,EAAQwU,YA5JlC,SAAiB3P,EAAK8H,EAAS+L,EAAQlF,EAAS2F,GAC5C,MAAM,YAAEo2B,EAAY,WAAEl5B,EAAW,cAAE/C,GAAmB3G,EACtD,IAAI2J,EAAW3J,EAAQ2J,SACvB,GAAIi5B,EAAa,CACb1B,GAAQhpC,EAAK8H,EAAS+L,EAAQlF,EAAS8C,EAAU6C,GACjD,IAAI,IAAI9e,EAAI,EAAGA,EAAIk1C,IAAel1C,EAC9BwK,EAAIoB,OAEHqS,MAAMhF,KACPgD,EAAWD,GAAc/C,EAAgB,EAAAmC,GAAO,EAAAA,GAExD,CACAo4B,GAAQhpC,EAAK8H,EAAS+L,EAAQlF,EAAS8C,EAAU6C,GACjDtU,EAAIoB,MAER,CA8IQgvC,CAAQpwC,EAAK3M,KAAM88C,EAAcxhC,EAAS2F,GAC1CijB,GAAWv3B,EAAK3M,KAAM88C,EAAcxhC,EAAS2F,GAC7CtU,EAAI22B,SACR,GAkjBJ0Z,WAzEA,cAAyB1nB,GACrB7oB,UAAY,MACfA,gBAAkB,CACXwN,cAAe,QACfwC,YAAa,EACbu4B,aAAc,EACdp6B,cAAe,OACfmB,gBAAYzb,GAEnBmM,qBAAuB,CAChB2P,gBAAiB,kBACjBE,YAAa,eAEjB,WAAAvc,CAAY+E,GACRgY,QACA9c,KAAK8H,aAAUxH,EACfN,KAAKka,gBAAa5Z,EAClBN,KAAKma,UAAO7Z,EACZN,KAAK6d,WAAQvd,EACbN,KAAK8d,YAASxd,EACdN,KAAK4a,mBAAgBta,EACjBwE,GACAoC,OAAOc,OAAOhI,KAAM8E,EAE5B,CACA,IAAA1C,CAAKuK,GACD,MAAM,cAAEiO,EAAgB9S,SAAS,YAAEwU,EAAY,gBAAEF,IAAwBpc,MACnE,MAAEu3C,EAAM,MAAEsE,GAAWZ,GAAcj7C,MACnCi9C,GA/CK5hC,EA+CmBwgC,EAAMxgC,QA9C1BmgC,SAAWngC,EAAOogC,UAAYpgC,EAAOqgC,YAAcrgC,EAAOsgC,YA8CtB,KAAqBK,GA/C3E,IAAmB3gC,EAgDX1O,EAAIy2B,OACAyY,EAAM7tB,IAAMupB,EAAMvpB,GAAK6tB,EAAM3tB,IAAMqpB,EAAMrpB,IACzCvhB,EAAIk3B,YACJoZ,EAAYtwC,EAAKsvC,GAAYJ,EAAOjhC,EAAe28B,IACnD5qC,EAAIwH,OACJ8oC,EAAYtwC,EAAKsvC,GAAY1E,GAAQ38B,EAAeihC,IACpDlvC,EAAIwP,UAAYG,EAChB3P,EAAIoB,KAAK,YAEbpB,EAAIk3B,YACJoZ,EAAYtwC,EAAKsvC,GAAY1E,EAAO38B,IACpCjO,EAAIwP,UAAYC,EAChBzP,EAAIoB,OACJpB,EAAI22B,SACR,CACA,OAAAhZ,CAAQ4yB,EAAQC,EAAQhzB,GACpB,OAAOG,GAAQtqB,KAAMk9C,EAAQC,EAAQhzB,EACzC,CACA,QAAAizB,CAASF,EAAQ/yB,GACb,OAAOG,GAAQtqB,KAAMk9C,EAAQ,KAAM/yB,EACvC,CACA,QAAAkzB,CAASF,EAAQhzB,GACb,OAAOG,GAAQtqB,KAAM,KAAMm9C,EAAQhzB,EACvC,CACA,cAAAgB,CAAehB,GACX,MAAM,EAAE9b,EAAE,EAAEC,EAAE,KAAE6L,EAAK,WAAED,GAAiBla,KAAKsrB,SAAS,CAClD,IACA,IACA,OACA,cACDnB,GACH,MAAO,CACH9b,EAAG6L,GAAc7L,EAAI8L,GAAQ,EAAI9L,EACjCC,EAAG4L,EAAa5L,GAAKA,EAAI6L,GAAQ,EAEzC,CACA,QAAAyP,CAASve,GACL,MAAgB,MAATA,EAAerL,KAAK6d,MAAQ,EAAI7d,KAAK8d,OAAS,CACzD,GAOJo8B,YAAaA,GACboD,aA5QA,cAA2BhoB,GACvB7oB,UAAY,QACZzB,OACAqb,KACA3iB,KAGE+I,gBAAkB,CAChBgQ,YAAa,EACbm+B,UAAW,EACXr6B,iBAAkB,EAClBg9B,YAAa,EACbxhC,WAAY,SACZV,OAAQ,EACRF,SAAU,GAIZ1O,qBAAuB,CACrB2P,gBAAiB,kBACjBE,YAAa,eAEjB,WAAAvc,CAAY+E,GACRgY,QACA9c,KAAK8H,aAAUxH,EACfN,KAAKgL,YAAS1K,EACdN,KAAKqmB,UAAO/lB,EACZN,KAAK0D,UAAOpD,EACRwE,GACAoC,OAAOc,OAAOhI,KAAM8E,EAE5B,CACA,OAAAwlB,CAAQ4yB,EAAQC,EAAQhzB,GACpB,MAAMriB,EAAU9H,KAAK8H,SACf,EAAEuG,EAAE,EAAEC,GAAOtO,KAAKsrB,SAAS,CAC7B,IACA,KACDnB,GACH,OAAO/oB,KAAK4pB,IAAIkyB,EAAS7uC,EAAG,GAAKjN,KAAK4pB,IAAImyB,EAAS7uC,EAAG,GAAKlN,KAAK4pB,IAAIljB,EAAQ8yC,UAAY9yC,EAAQuT,OAAQ,EAC5G,CACA,QAAA+hC,CAASF,EAAQ/yB,GACb,OAAOwwB,GAAU36C,KAAMk9C,EAAQ,IAAK/yB,EACxC,CACA,QAAAkzB,CAASF,EAAQhzB,GACb,OAAOwwB,GAAU36C,KAAMm9C,EAAQ,IAAKhzB,EACxC,CACA,cAAAgB,CAAehB,GACX,MAAM,EAAE9b,EAAE,EAAEC,GAAOtO,KAAKsrB,SAAS,CAC7B,IACA,KACDnB,GACH,MAAO,CACH9b,IACAC,IAER,CACA,IAAA1F,CAAKd,GAED,IAAIuT,GADJvT,EAAUA,GAAW9H,KAAK8H,SAAW,CAAC,GACjBuT,QAAU,EAC/BA,EAASja,KAAKoC,IAAI6X,EAAQA,GAAUvT,EAAQy1C,aAAe,GAE3D,OAAgC,GAAxBliC,GADYA,GAAUvT,EAAQ2U,aAAe,GAEzD,CACA,IAAAra,CAAKuK,EAAK2H,GACN,MAAMxM,EAAU9H,KAAK8H,QACjB9H,KAAKqmB,MAAQve,EAAQuT,OAAS,MAAQ,OAAerb,KAAMsU,EAAMtU,KAAK4I,KAAKd,GAAW,KAG1F6E,EAAI0P,YAAcvU,EAAQwU,YAC1B3P,EAAI6P,UAAY1U,EAAQ2U,YACxB9P,EAAIwP,UAAYrU,EAAQsU,iBACxB,QAAUzP,EAAK7E,EAAS9H,KAAKqO,EAAGrO,KAAKsO,GACzC,CACA,QAAAsb,GACI,MAAM9hB,EAAU9H,KAAK8H,SAAW,CAAC,EAEjC,OAAOA,EAAQuT,OAASvT,EAAQ8yC,SACpC,KAkMJ,MAAM4C,GAAgB,CAClB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAGEC,GAAoCD,GAAcxhC,IAAK3X,GAAQA,EAAMq5C,QAAQ,OAAQ,SAASA,QAAQ,IAAK,WACjH,SAASC,GAAex7C,GACpB,OAAOq7C,GAAcr7C,EAAIq7C,GAAcv7C,OAC3C,CACA,SAAS27C,GAAmBz7C,GACxB,OAAOs7C,GAAkBt7C,EAAIs7C,GAAkBx7C,OACnD,CAcA,SAAS47C,GAAar9C,GAClB,IAAI2B,EAAI,EACR,MAAO,CAAC+L,EAASpE,KACb,MAAMiB,EAAavK,EAAMiP,eAAe3F,GAAciB,WAClDA,aAAsB+P,EACtB3Y,EAbZ,SAAiC+L,EAAS/L,GAEtC,OADA+L,EAAQkO,gBAAkBlO,EAAQqB,KAAKyM,IAAI,IAAI2hC,GAAex7C,MACvDA,CACX,CAUgB27C,CAAwB5vC,EAAS/L,GAC9B4I,aAAsB6V,EAC7Bze,EAXZ,SAAkC+L,EAAS/L,GAEvC,OADA+L,EAAQkO,gBAAkBlO,EAAQqB,KAAKyM,IAAI,IAAI4hC,GAAmBz7C,MAC3DA,CACX,CAQgB47C,CAAyB7vC,EAAS/L,GAC/B4I,IACP5I,EAtBZ,SAAgC+L,EAAS/L,GAGrC,OAFA+L,EAAQoO,YAAcqhC,GAAex7C,GACrC+L,EAAQkO,gBAAkBwhC,GAAmBz7C,KACpCA,CACb,CAkBgB67C,CAAuB9vC,EAAS/L,IAGhD,CACA,SAAS87C,GAA0BzX,GAC/B,IAAI0X,EACJ,IAAIA,KAAK1X,EACL,GAAIA,EAAY0X,GAAG5hC,aAAekqB,EAAY0X,GAAG9hC,gBAC7C,OAAO,EAGf,OAAO,CACX,CAOA,IAAI+hC,GAAgB,CAChB1yC,GAAI,SACJi6B,SAAU,CACNlP,SAAS,EACT4nB,eAAe,GAEnB,YAAAluB,CAAc1vB,EAAO69C,EAAOv2C,GACxB,IAAKA,EAAQ0uB,QACT,OAEJ,MAAQjnB,MAAM,SAAEC,GAAc1H,QAASw2C,GAAkB99C,EAAMqG,QACzD,SAAEwN,GAAciqC,EAChBC,EAA0BN,GAA0BzuC,KAlBhCi5B,EAkBsE6V,KAjB9E7V,EAAWnsB,aAAemsB,EAAWrsB,kBAiB0D/H,GAAY4pC,GAA0B5pC,IAd3H,oBAAzB,EAAAjN,EAASkV,aAAkE,oBAA7B,EAAAlV,EAASgV,gBAJlE,IAAkCqsB,EAmB1B,IAAK3gC,EAAQs2C,eAAiBG,EAC1B,OAEJ,MAAMC,EAAYX,GAAar9C,GAC/BgP,EAASxO,QAAQw9C,EACrB,GAmGJ,SAASC,GAAsBvwC,GAC3B,GAAIA,EAAQ2Y,WAAY,CACpB,MAAMtX,EAAOrB,EAAQlB,aACdkB,EAAQ2Y,kBACR3Y,EAAQlB,MACf9F,OAAOw3C,eAAexwC,EAAS,OAAQ,CACnCywC,cAAc,EACdC,YAAY,EACZC,UAAU,EACVl2C,MAAO4G,GAEf,CACJ,CACA,SAASuvC,GAAmBt+C,GACxBA,EAAM+O,KAAKC,SAASxO,QAASkN,IACzBuwC,GAAsBvwC,IAE9B,CAoBA,IAAI6wC,GAAoB,CACpBtzC,GAAI,aACJi6B,SAAU,CACNsZ,UAAW,UACXxoB,SAAS,GAEbyoB,qBAAsB,CAACz+C,EAAOmX,EAAM7P,KAChC,IAAKA,EAAQ0uB,QAET,YADAsoB,GAAmBt+C,GAGvB,MAAM2sB,EAAiB3sB,EAAMqd,MAC7Brd,EAAM+O,KAAKC,SAASxO,QAAQ,CAACkN,EAASpE,KAClC,MAAM,MAAEkD,EAAM,UAAE8B,GAAeZ,EACzB/D,EAAO3J,EAAMiP,eAAe3F,GAC5ByF,EAAOvC,GAASkB,EAAQqB,KAC9B,GAGO,OAHH,OAAQ,CACRT,EACAtO,EAAMsH,QAAQgH,YAEd,OAEJ,IAAK3E,EAAKY,WAAWuC,mBACjB,OAEJ,MAAM4xC,EAAQ1+C,EAAMuL,OAAO5B,EAAKqE,SAChC,GAAmB,WAAf0wC,EAAMv+C,MAAoC,SAAfu+C,EAAMv+C,KACjC,OAEJ,GAAIH,EAAMsH,QAAQoJ,QACd,OAEJ,IAAI,MAAE5P,EAAM,MAAE8P,GAnD1B,SAAmDjH,EAAM8b,GACrD,MAAMk5B,EAAal5B,EAAOhkB,OAC1B,IACImP,EADA9P,EAAQ,EAEZ,MAAM,OAAE6J,GAAYhB,GACd,IAAE9I,EAAI,IAAEmC,EAAI,WAAEyP,EAAW,WAAEC,GAAgB/H,EAAOgI,gBASxD,OARIF,IACA3R,GAAQ,QAAY,OAAa2kB,EAAQ9a,EAAOE,KAAMhK,GAAKkoB,GAAI,EAAG41B,EAAa,IAG/E/tC,EADA8B,GACQ,QAAY,OAAa+S,EAAQ9a,EAAOE,KAAM7H,GAAKkmB,GAAK,EAAGpoB,EAAO69C,GAAc79C,EAEhF69C,EAAa79C,EAElB,CACHA,QACA8P,QAER,CAiCqCguC,CAA0Cj1C,EAAMoF,GAEzE,GAAI6B,IADctJ,EAAQu3C,WAAa,EAAIlyB,GAGvC,YADAsxB,GAAsBvwC,GAiB1B,IAAIoxC,EACJ,QAfI,OAActyC,KACdkB,EAAQlB,MAAQuC,SACTrB,EAAQqB,KACfrI,OAAOw3C,eAAexwC,EAAS,OAAQ,CACnCywC,cAAc,EACdC,YAAY,EACZj8C,IAAK,WACD,OAAO3C,KAAK6mB,UAChB,EACA/jB,IAAK,SAASsE,GACVpH,KAAKgN,MAAQ5F,CACjB,KAIDU,EAAQk3C,WACX,IAAK,OACDM,EA5LpB,SAAwB/vC,EAAMjO,EAAO8P,EAAO+b,EAAgBrlB,GAC3D,MAAMy3C,EAAUz3C,EAAQy3C,SAAWpyB,EAChC,GAAIoyB,GAAWnuC,EACX,OAAO7B,EAAK+Z,MAAMhoB,EAAOA,EAAQ8P,GAErC,MAAMkuC,EAAY,GACZE,GAAepuC,EAAQ,IAAMmuC,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAWp+C,EAAQ8P,EAAQ,EACjC,IACIjP,EAAGw9C,EAAcC,EAAStrC,EAAMurC,EADhClnC,EAAIrX,EAGR,IADAg+C,EAAUG,KAAkBlwC,EAAKoJ,GAC7BxW,EAAI,EAAGA,EAAIo9C,EAAU,EAAGp9C,IAAI,CAC5B,IAEI8nB,EAFAmvB,EAAO,EACP0G,EAAO,EAEX,MAAMC,EAAgB3+C,KAAKoE,OAAOrD,EAAI,GAAKq9C,GAAe,EAAIl+C,EACxD0+C,EAAc5+C,KAAKC,IAAID,KAAKoE,OAAOrD,EAAI,GAAKq9C,GAAe,EAAGpuC,GAAS9P,EACvE2+C,EAAiBD,EAAcD,EACrC,IAAI91B,EAAI81B,EAAe91B,EAAI+1B,EAAa/1B,IACpCmvB,GAAQ7pC,EAAK0a,GAAG5b,EAChByxC,GAAQvwC,EAAK0a,GAAG3b,EAEpB8qC,GAAQ6G,EACRH,GAAQG,EACR,MAAMC,EAAY9+C,KAAKoE,MAAMrD,EAAIq9C,GAAe,EAAIl+C,EAC9C6+C,EAAU/+C,KAAKC,IAAID,KAAKoE,OAAOrD,EAAI,GAAKq9C,GAAe,EAAGpuC,GAAS9P,GACjE+M,EAAG+xC,EAAU9xC,EAAG+xC,GAAa9wC,EAAKoJ,GAE1C,IADAinC,EAAUtrC,GAAQ,EACd2V,EAAIi2B,EAAWj2B,EAAIk2B,EAASl2B,IAC5B3V,EAAO,GAAMlT,KAAK4X,KAAKonC,EAAUhH,IAAS7pC,EAAK0a,GAAG3b,EAAI+xC,IAAYD,EAAU7wC,EAAK0a,GAAG5b,IAAMyxC,EAAOO,IAC7F/rC,EAAOsrC,IACPA,EAAUtrC,EACVqrC,EAAepwC,EAAK0a,GACpB41B,EAAQ51B,GAGhBq1B,EAAUG,KAAkBE,EAC5BhnC,EAAIknC,CACR,CAEA,OADAP,EAAUG,KAAkBlwC,EAAKmwC,GAC1BJ,CACX,CAkJgCgB,CAAe/wC,EAAMjO,EAAO8P,EAAO+b,EAAgBrlB,GAC/D,MACJ,IAAK,UACDw3C,EApJpB,SAA0B/vC,EAAMjO,EAAO8P,EAAO+b,GAC1C,IAEIhrB,EAAG+jB,EAAO7X,EAAGC,EAAG4qC,EAAOqH,EAAUC,EAAUC,EAAYthC,EAAMJ,EAF7Dq6B,EAAO,EACPC,EAAS,EAEb,MAAMiG,EAAY,GACZI,EAAWp+C,EAAQ8P,EAAQ,EAC3BsvC,EAAOnxC,EAAKjO,GAAO+M,EAEnBsyC,EADOpxC,EAAKmwC,GAAUrxC,EACVqyC,EAClB,IAAIv+C,EAAIb,EAAOa,EAAIb,EAAQ8P,IAASjP,EAAE,CAClC+jB,EAAQ3W,EAAKpN,GACbkM,GAAK6X,EAAM7X,EAAIqyC,GAAQC,EAAKxzB,EAC5B7e,EAAI4X,EAAM5X,EACV,MAAMkrC,EAAa,EAAJnrC,EACf,GAAImrC,IAAWN,EACP5qC,EAAI6Q,GACJA,EAAO7Q,EACPiyC,EAAWp+C,GACJmM,EAAIyQ,IACXA,EAAOzQ,EACPkyC,EAAWr+C,GAEfi3C,GAAQC,EAASD,EAAOlzB,EAAM7X,KAAOgrC,MAClC,CACH,MAAMuH,EAAYz+C,EAAI,EACtB,KAAK,OAAco+C,MAAc,OAAcC,GAAW,CACtD,MAAMK,EAAqBz/C,KAAKC,IAAIk/C,EAAUC,GACxCM,EAAqB1/C,KAAKoC,IAAI+8C,EAAUC,GAC1CK,IAAuBJ,GAAcI,IAAuBD,GAC5DtB,EAAUp8C,KAAK,IACRqM,EAAKsxC,GACRxyC,EAAG+qC,IAGP0H,IAAuBL,GAAcK,IAAuBF,GAC5DtB,EAAUp8C,KAAK,IACRqM,EAAKuxC,GACRzyC,EAAG+qC,GAGf,CACIj3C,EAAI,GAAKy+C,IAAcH,GACvBnB,EAAUp8C,KAAKqM,EAAKqxC,IAExBtB,EAAUp8C,KAAKgjB,GACfgzB,EAAQM,EACRH,EAAS,EACTl6B,EAAOJ,EAAOzQ,EACdiyC,EAAWC,EAAWC,EAAat+C,CACvC,CACJ,CACA,OAAOm9C,CACX,CAgGgCyB,CAAiBxxC,EAAMjO,EAAO8P,EAAO+b,GACjD,MACJ,QACI,MAAM,IAAIhF,MAAM,qCAAqCrgB,EAAQk3C,cAErE9wC,EAAQ2Y,WAAay4B,KAG7B,OAAArM,CAASzyC,GACLs+C,GAAmBt+C,EACvB,GAyCJ,SAASwgD,GAAWnb,EAAUlP,EAAOtT,EAAM1d,GACvC,GAAIA,EACA,OAEJ,IAAIrE,EAAQq1B,EAAMkP,GACd38B,EAAMma,EAAKwiB,GAKf,MAJiB,UAAbA,IACAvkC,GAAQ,QAAgBA,GACxB4H,GAAM,QAAgBA,IAEnB,CACH28B,WACAvkC,QACA4H,MAER,CA+BA,SAAS+3C,GAAgB3/C,EAAO4H,EAAK+c,GACjC,KAAM/c,EAAM5H,EAAO4H,IAAM,CACrB,MAAMgd,EAAQD,EAAO/c,GACrB,IAAKkX,MAAM8F,EAAM7X,KAAO+R,MAAM8F,EAAM5X,GAChC,KAER,CACA,OAAOpF,CACX,CACA,SAASg4C,GAASvoC,EAAG/E,EAAG5O,EAAM/D,GAC1B,OAAI0X,GAAK/E,EACE3S,EAAG0X,EAAE3T,GAAO4O,EAAE5O,IAElB2T,EAAIA,EAAE3T,GAAQ4O,EAAIA,EAAE5O,GAAQ,CACvC,CAEA,SAASm8C,GAAoBC,EAAU36B,GACnC,IAAIR,EAAS,GACTvgB,GAAQ,EAOZ,OANI,OAAQ07C,IACR17C,GAAQ,EACRugB,EAASm7B,GAETn7B,EArDR,SAA6Bm7B,EAAU36B,GACnC,MAAM,EAAEpY,EAAG,KAAK,EAAEC,EAAG,MAAU8yC,GAAY,CAAC,EACtCC,EAAa56B,EAAKR,OAClBA,EAAS,GAyBf,OAxBAQ,EAAKszB,SAAS/4C,QAAQ,EAAGM,QAAQ4H,UAC7BA,EAAM+3C,GAAgB3/C,EAAO4H,EAAKm4C,GAClC,MAAM1qB,EAAQ0qB,EAAW//C,GACnB+hB,EAAOg+B,EAAWn4C,GACd,OAANoF,GACA2X,EAAO/iB,KAAK,CACRmL,EAAGsoB,EAAMtoB,EACTC,MAEJ2X,EAAO/iB,KAAK,CACRmL,EAAGgV,EAAKhV,EACRC,OAES,OAAND,IACP4X,EAAO/iB,KAAK,CACRmL,IACAC,EAAGqoB,EAAMroB,IAEb2X,EAAO/iB,KAAK,CACRmL,IACAC,EAAG+U,EAAK/U,OAIb2X,CACX,CAwBiBq7B,CAAoBF,EAAU36B,GAEpCR,EAAOhkB,OAAS,IAAIi4C,GAAY,CACnCj0B,SACAne,QAAS,CACLgxC,QAAS,GAEbpzC,QACAiiB,UAAWjiB,IACV,IACT,CACA,SAAS67C,GAAiB7lB,GACtB,OAAOA,IAA0B,IAAhBA,EAAO3tB,IAC5B,CAEA,SAASyzC,GAAeC,EAASj4C,EAAOk4C,GAEpC,IAAI3zC,EADW0zC,EAAQj4C,GACLuE,KAClB,MAAM4zC,EAAU,CACZn4C,GAEJ,IAAIzE,EACJ,IAAK28C,EACD,OAAO3zC,EAEX,MAAe,IAATA,IAA6C,IAA3B4zC,EAAQh+B,QAAQ5V,IAAa,CACjD,KAAK,OAAeA,GAChB,OAAOA,EAGX,GADAhJ,EAAS08C,EAAQ1zC,IACZhJ,EACD,OAAO,EAEX,GAAIA,EAAOgsC,QACP,OAAOhjC,EAEX4zC,EAAQz+C,KAAK6K,GACbA,EAAOhJ,EAAOgJ,IAClB,CACA,OAAO,CACX,CACC,SAAS6zC,GAAYn7B,EAAMjd,EAAO4H,GAC9B,MAAMrD,EAmDV,SAAyB0Y,GACtB,MAAM3e,EAAU2e,EAAK3e,QACf+5C,EAAa/5C,EAAQiG,KAC3B,IAAIA,GAAO,IAAAU,GAAeozC,GAAcA,EAAW98C,OAAQ88C,QAC9CvhD,IAATyN,IACAA,IAASjG,EAAQsU,iBAErB,IAAa,IAATrO,GAA2B,OAATA,EAClB,OAAO,EAEX,IAAa,IAATA,EACA,MAAO,SAEX,OAAOA,CACX,CAjEkB+zC,CAAgBr7B,GAC9B,IAAI,IAAAtkB,GAAS4L,GACT,OAAOqS,MAAMrS,EAAKpF,QAAiBoF,EAEvC,IAAIhJ,EAASg9C,WAAWh0C,GACxB,OAAI,OAAehJ,IAAW3D,KAAKoE,MAAMT,KAAYA,EAWzD,SAA2Bi9C,EAASx4C,EAAOzE,EAAQqM,GAC/B,MAAZ4wC,GAA+B,MAAZA,IACnBj9C,EAASyE,EAAQzE,GAErB,GAAIA,IAAWyE,GAASzE,EAAS,GAAKA,GAAUqM,EAC5C,OAAO,EAEX,OAAOrM,CACX,CAlBek9C,CAAkBl0C,EAAK,GAAIvE,EAAOzE,EAAQqM,GAE9C,CACH,SACA,QACA,MACA,QACA,SACFuS,QAAQ5V,IAAS,GAAKA,CAC5B,CAuFC,SAASm0C,GAAej8B,EAAQk8B,EAAaC,GAC1C,MAAMC,EAAY,GAClB,IAAI,IAAIp4B,EAAI,EAAGA,EAAIm4B,EAAWngD,OAAQgoB,IAAI,CACtC,MAAMxD,EAAO27B,EAAWn4B,IAClB,MAAE0M,EAAM,KAAEtT,EAAK,MAAE6C,GAAWo8B,GAAU77B,EAAM07B,EAAa,KAC/D,MAAKj8B,GAASyQ,GAAStT,GAGvB,GAAIsT,EACA0rB,EAAUE,QAAQr8B,QAGlB,GADAD,EAAO/iB,KAAKgjB,IACP7C,EACD,KAGZ,CACA4C,EAAO/iB,QAAQm/C,EACnB,CACC,SAASC,GAAU77B,EAAM07B,EAAatc,GACnC,MAAM3f,EAAQO,EAAK8zB,YAAY4H,EAAatc,GAC5C,IAAK3f,EACD,MAAO,CAAC,EAEZ,MAAMs8B,EAAat8B,EAAM2f,GACnBkU,EAAWtzB,EAAKszB,SAChBsH,EAAa56B,EAAKR,OACxB,IAAI0Q,GAAQ,EACRtT,GAAO,EACX,IAAI,IAAIlhB,EAAI,EAAGA,EAAI43C,EAAS93C,OAAQE,IAAI,CACpC,MAAM2kB,EAAUizB,EAAS53C,GACnBsgD,EAAapB,EAAWv6B,EAAQxlB,OAAOukC,GACvC6c,EAAYrB,EAAWv6B,EAAQ5d,KAAK28B,GAC1C,IAAI,QAAW2c,EAAYC,EAAYC,GAAY,CAC/C/rB,EAAQ6rB,IAAeC,EACvBp/B,EAAOm/B,IAAeE,EACtB,KACJ,CACJ,CACA,MAAO,CACH/rB,QACAtT,OACA6C,QAER,CAEA,MAAMy8B,GACF,WAAA5iD,CAAYiJ,GACRhJ,KAAKqO,EAAIrF,EAAKqF,EACdrO,KAAKsO,EAAItF,EAAKsF,EACdtO,KAAKqb,OAASrS,EAAKqS,MACvB,CACA,WAAAs9B,CAAYhsC,EAAKuuC,EAAQlyC,GACrB,MAAM,EAAEqF,EAAE,EAAEC,EAAE,OAAE+M,GAAYrb,KAM5B,OALAk7C,EAASA,GAAU,CACf55C,MAAO,EACP4H,IAAK,EAAAqU,GAET5Q,EAAIuT,IAAI7R,EAAGC,EAAG+M,EAAQ6/B,EAAOhyC,IAAKgyC,EAAO55C,OAAO,IACxC0H,EAAKkyC,MACjB,CACA,WAAAX,CAAYr0B,GACR,MAAM,EAAE7X,EAAE,EAAEC,EAAE,OAAE+M,GAAYrb,KACtB4e,EAAQsH,EAAMtH,MACpB,MAAO,CACHvQ,EAAGA,EAAIjN,KAAKkd,IAAIM,GAASvD,EACzB/M,EAAGA,EAAIlN,KAAKod,IAAII,GAASvD,EACzBuD,QAER,EAGJ,SAASgkC,GAAWlnB,GAChB,MAAM,MAAEl7B,EAAM,KAAEuN,EAAK,KAAE0Y,GAAUiV,EACjC,IAAI,OAAe3tB,GACf,OAcP,SAAwBvN,EAAOgJ,GAC5B,MAAMW,EAAO3J,EAAMiP,eAAejG,GAC5BunC,EAAU5mC,GAAQ3J,EAAMgd,iBAAiBhU,GAC/C,OAAOunC,EAAU5mC,EAAK+D,QAAU,IACpC,CAlBe20C,CAAeriD,EAAOuN,GAEjC,GAAa,UAATA,EACA,OAjHR,SAAyB2tB,GACrB,MAAM,MAAE5yB,EAAM,MAAEU,EAAM,KAAEid,GAAUiV,EAC5BzV,EAAS,GACT8zB,EAAWtzB,EAAKszB,SAChB+I,EAAer8B,EAAKR,OACpBm8B,EAgBT,SAAuBt5C,EAAOU,GAC3B,MAAMu5C,EAAQ,GACR7oB,EAAQpxB,EAAM+B,wBAAwB,QAC5C,IAAI,IAAI1I,EAAI,EAAGA,EAAI+3B,EAAMj4B,OAAQE,IAAI,CACjC,MAAMgI,EAAO+vB,EAAM/3B,GACnB,GAAIgI,EAAKX,QAAUA,EACf,MAECW,EAAKuI,QACNqwC,EAAMR,QAAQp4C,EAAK+D,QAE3B,CACA,OAAO60C,CACX,CA7BuBC,CAAcl6C,EAAOU,GACxC44C,EAAWl/C,KAAKi+C,GAAoB,CAChC9yC,EAAG,KACHC,EAAGxF,EAAMiL,QACV0S,IACH,IAAI,IAAItkB,EAAI,EAAGA,EAAI43C,EAAS93C,OAAQE,IAAI,CACpC,MAAM2kB,EAAUizB,EAAS53C,GACzB,IAAI,IAAI8nB,EAAInD,EAAQxlB,MAAO2oB,GAAKnD,EAAQ5d,IAAK+gB,IACzCi4B,GAAej8B,EAAQ68B,EAAa74B,GAAIm4B,EAEhD,CACA,OAAO,IAAIlI,GAAY,CACnBj0B,SACAne,QAAS,CAAC,GAElB,CA6Fem7C,CAAgBvnB,GAE3B,GAAa,UAAT3tB,EACA,OAAO,EAEX,MAAMqzC,EAWV,SAAyB1lB,GACrB,MAAM5yB,EAAQ4yB,EAAO5yB,OAAS,CAAC,EAC/B,GAAIA,EAAM+e,yBACN,OAgBR,SAAiC6T,GAC7B,MAAM,MAAE5yB,EAAM,KAAEiF,GAAU2tB,EACpB5zB,EAAUgB,EAAMhB,QAChB7F,EAAS6G,EAAM+I,YAAY5P,OAC3BX,EAAQwG,EAAQmB,QAAUH,EAAMtF,IAAMsF,EAAMzH,IAC5CsH,EAtLT,SAAyBoF,EAAMjF,EAAOwQ,GACnC,IAAI3Q,EAUJ,OARIA,EADS,UAAToF,EACQuL,EACQ,QAATvL,EACCjF,EAAMhB,QAAQmB,QAAUH,EAAMzH,IAAMyH,EAAMtF,KAC3C,IAAArB,GAAS4L,GACRA,EAAKpF,MAELG,EAAM42B,eAEX/2B,CACX,CA0KkBu6C,CAAgBn1C,EAAMjF,EAAOxH,GACrCyD,EAAS,GACf,GAAI+C,EAAQkZ,KAAKC,SAAU,CACvB,MAAMkC,EAASra,EAAM+e,yBAAyB,EAAGvmB,GACjD,OAAO,IAAIqhD,GAAU,CACjBt0C,EAAG8U,EAAO9U,EACVC,EAAG6U,EAAO7U,EACV+M,OAAQvS,EAAMiZ,8BAA8BpZ,IAEpD,CACA,IAAI,IAAIxG,EAAI,EAAGA,EAAIF,IAAUE,EACzB4C,EAAO7B,KAAK4F,EAAM+e,yBAAyB1lB,EAAGwG,IAElD,OAAO5D,CACX,CAnCeo+C,CAAwBznB,GAEnC,OAEJ,SAA+BA,GAC3B,MAAM,MAAE5yB,EAAO,CAAC,EAAE,KAAEiF,GAAU2tB,EACxB6D,EApLT,SAAyBxxB,EAAMjF,GAC5B,IAAIy2B,EAAQ,KAUZ,MATa,UAATxxB,EACAwxB,EAAQz2B,EAAMiL,OACE,QAAThG,EACPwxB,EAAQz2B,EAAM+K,KACP,IAAA1R,GAAS4L,GAChBwxB,EAAQz2B,EAAMmQ,iBAAiBlL,EAAKpF,OAC7BG,EAAM4Z,eACb6c,EAAQz2B,EAAM4Z,gBAEX6c,CACX,CAwKkB6jB,CAAgBr1C,EAAMjF,GACpC,IAAI,OAAey2B,GAAQ,CACvB,MAAMrlB,EAAapR,EAAM6Z,eACzB,MAAO,CACHtU,EAAG6L,EAAaqlB,EAAQ,KACxBjxB,EAAG4L,EAAa,KAAOqlB,EAE/B,CACA,OAAO,IACX,CAbW8jB,CAAsB3nB,EACjC,CAjBqB4nB,CAAgB5nB,GACjC,OAAI0lB,aAAoBuB,GACbvB,EAEJD,GAAoBC,EAAU36B,EACzC,CA8CA,SAAS88B,GAAU52C,EAAK+uB,EAAQpnB,GAC5B,MAAMvP,EAAS69C,GAAWlnB,IACpB,MAAEl7B,EAAM,MAAEgJ,EAAM,KAAEid,EAAK,MAAE3d,EAAM,KAAEuC,GAAUqwB,EAC3C8nB,EAAW/8B,EAAK3e,QAChB+5C,EAAa2B,EAASz1C,KACtB1J,EAAQm/C,EAASpnC,iBACjB,MAAEqnC,EAAOp/C,EAAM,MAAE0+C,EAAO1+C,GAAWw9C,GAAc,CAAC,EAClD13C,EAAO3J,EAAMiP,eAAejG,GAC5B2K,GAAO,QAAmB3T,EAAO2J,GACnCpF,GAAU0hB,EAAKR,OAAOhkB,UACtB,OAAS0K,EAAK2H,GActB,SAAgB3H,EAAK7H,GACjB,MAAM,KAAE2hB,EAAK,OAAE1hB,EAAO,MAAE0+C,EAAM,MAAEV,EAAM,KAAEzuC,EAAK,MAAExL,EAAM,KAAEqL,GAAUrP,EAC3D+gC,EAAWpf,EAAK/gB,MAAQ,QAAUZ,EAAIuG,KAC5CsB,EAAIy2B,OACJ,IAAIsgB,EAAYX,EACZA,IAAUU,IACO,MAAb5d,GACA8d,GAAah3C,EAAK5H,EAAQuP,EAAKT,KAC/B9F,GAAKpB,EAAK,CACN8Z,OACA1hB,SACAV,MAAOo/C,EACP36C,QACA+8B,WACA1xB,SAEJxH,EAAI22B,UACJ32B,EAAIy2B,OACJugB,GAAah3C,EAAK5H,EAAQuP,EAAKP,SACX,MAAb8xB,IACP+d,GAAej3C,EAAK5H,EAAQuP,EAAKN,MACjCjG,GAAKpB,EAAK,CACN8Z,OACA1hB,SACAV,MAAO0+C,EACPj6C,QACA+8B,WACA1xB,SAEJxH,EAAI22B,UACJ32B,EAAIy2B,OACJwgB,GAAej3C,EAAK5H,EAAQuP,EAAKR,OACjC4vC,EAAYD,IAGpB11C,GAAKpB,EAAK,CACN8Z,OACA1hB,SACAV,MAAOq/C,EACP56C,QACA+8B,WACA1xB,SAEJxH,EAAI22B,SACR,CAzDQugB,CAAOl3C,EAAK,CACR8Z,OACA1hB,SACA0+C,QACAV,QACAzuC,OACAxL,QACAuC,OACA8I,UAEJ,OAAWxH,GAEnB,CA8CA,SAASg3C,GAAah3C,EAAK5H,EAAQ++C,GAC/B,MAAM,SAAE/J,EAAS,OAAE9zB,GAAYlhB,EAC/B,IAAI4xB,GAAQ,EACRotB,GAAW,EACfp3C,EAAIk3B,YACJ,IAAK,MAAM/c,KAAWizB,EAAS,CAC3B,MAAM,MAAEz4C,EAAM,IAAE4H,GAAS4d,EACnBQ,EAAarB,EAAO3kB,GACpBimB,EAAYtB,EAAOg7B,GAAgB3/C,EAAO4H,EAAK+c,IACjD0Q,GACAhqB,EAAIm3B,OAAOxc,EAAWjZ,EAAGiZ,EAAWhZ,GACpCqoB,GAAQ,IAERhqB,EAAIo3B,OAAOzc,EAAWjZ,EAAGy1C,GACzBn3C,EAAIo3B,OAAOzc,EAAWjZ,EAAGiZ,EAAWhZ,IAExCy1C,IAAah/C,EAAO4zC,YAAYhsC,EAAKma,EAAS,CAC1CzP,KAAM0sC,IAENA,EACAp3C,EAAIyqC,YAEJzqC,EAAIo3B,OAAOxc,EAAUlZ,EAAGy1C,EAEhC,CACAn3C,EAAIo3B,OAAOh/B,EAAO4xB,QAAQtoB,EAAGy1C,GAC7Bn3C,EAAIyqC,YACJzqC,EAAIwH,MACR,CACA,SAASyvC,GAAej3C,EAAK5H,EAAQi/C,GACjC,MAAM,SAAEjK,EAAS,OAAE9zB,GAAYlhB,EAC/B,IAAI4xB,GAAQ,EACRotB,GAAW,EACfp3C,EAAIk3B,YACJ,IAAK,MAAM/c,KAAWizB,EAAS,CAC3B,MAAM,MAAEz4C,EAAM,IAAE4H,GAAS4d,EACnBQ,EAAarB,EAAO3kB,GACpBimB,EAAYtB,EAAOg7B,GAAgB3/C,EAAO4H,EAAK+c,IACjD0Q,GACAhqB,EAAIm3B,OAAOxc,EAAWjZ,EAAGiZ,EAAWhZ,GACpCqoB,GAAQ,IAERhqB,EAAIo3B,OAAOigB,EAAO18B,EAAWhZ,GAC7B3B,EAAIo3B,OAAOzc,EAAWjZ,EAAGiZ,EAAWhZ,IAExCy1C,IAAah/C,EAAO4zC,YAAYhsC,EAAKma,EAAS,CAC1CzP,KAAM0sC,IAENA,EACAp3C,EAAIyqC,YAEJzqC,EAAIo3B,OAAOigB,EAAOz8B,EAAUjZ,EAEpC,CACA3B,EAAIo3B,OAAOigB,EAAOj/C,EAAO4xB,QAAQroB,GACjC3B,EAAIyqC,YACJzqC,EAAIwH,MACR,CACA,SAASpG,GAAKpB,EAAK7H,GACf,MAAM,KAAE2hB,EAAK,OAAE1hB,EAAO,SAAE8gC,EAAS,MAAExhC,EAAM,MAAEyE,EAAM,KAAEqL,GAAUrP,EACvDi1C,EAlgBV,SAAmBtzB,EAAM1hB,EAAQ8gC,GAC7B,MAAMkU,EAAWtzB,EAAKszB,SAChB9zB,EAASQ,EAAKR,OACdg+B,EAAUl/C,EAAOkhB,OACjBkgB,EAAQ,GACd,IAAK,MAAMrf,KAAWizB,EAAS,CAC3B,IAAI,MAAEz4C,EAAM,IAAE4H,GAAS4d,EACvB5d,EAAM+3C,GAAgB3/C,EAAO4H,EAAK+c,GAClC,MAAMi1B,EAAS8F,GAAWnb,EAAU5f,EAAO3kB,GAAQ2kB,EAAO/c,GAAM4d,EAAQnhB,MACxE,IAAKZ,EAAOg1C,SAAU,CAClB5T,EAAMjjC,KAAK,CACPw4B,OAAQ5U,EACR/hB,OAAQm2C,EACR55C,MAAO2kB,EAAO3kB,GACd4H,IAAK+c,EAAO/c,KAEhB,QACJ,CACA,MAAMg7C,GAAiB,QAAen/C,EAAQm2C,GAC9C,IAAK,MAAMiJ,KAAOD,EAAe,CAC7B,MAAME,EAAYpD,GAAWnb,EAAUoe,EAAQE,EAAI7iD,OAAQ2iD,EAAQE,EAAIj7C,KAAMi7C,EAAIx+C,MAC3E0+C,GAAc,QAAcv9B,EAASb,EAAQm+B,GACnD,IAAK,MAAME,KAAcD,EACrBle,EAAMjjC,KAAK,CACPw4B,OAAQ4oB,EACRv/C,OAAQo/C,EACR7iD,MAAO,CACH,CAACukC,GAAWqb,GAAShG,EAAQkJ,EAAW,QAAShjD,KAAKoC,MAE1D0F,IAAK,CACD,CAAC28B,GAAWqb,GAAShG,EAAQkJ,EAAW,MAAOhjD,KAAKC,OAIpE,CACJ,CACA,OAAO8kC,CACX,CA6dqBkU,CAAU5zB,EAAM1hB,EAAQ8gC,GACzC,IAAK,MAAQnK,OAAQ6oB,EAAMx/C,OAAQo/C,EAAI,MAAE7iD,EAAM,IAAE4H,KAAU6wC,EAAS,CAChE,MAAQ99B,OAAO,gBAAEG,EAAiB/X,GAAW,CAAC,GAAOkgD,EAC/CC,GAAsB,IAAXz/C,EACjB4H,EAAIy2B,OACJz2B,EAAIwP,UAAYC,EAChBqoC,GAAW93C,EAAK7D,EAAOqL,EAAMqwC,GAAYxD,GAAWnb,EAAUvkC,EAAO4H,IACrEyD,EAAIk3B,YACJ,MAAMkgB,IAAat9B,EAAKkyB,YAAYhsC,EAAK43C,GACzC,IAAI5+C,EACJ,GAAI6+C,EAAU,CACNT,EACAp3C,EAAIyqC,YAEJsN,GAAmB/3C,EAAK5H,EAAQmE,EAAK28B,GAEzC,MAAM8e,IAAe5/C,EAAO4zC,YAAYhsC,EAAKw3C,EAAK,CAC9C9sC,KAAM0sC,EACN96C,SAAS,IAEbtD,EAAOo+C,GAAYY,EACdh/C,GACD++C,GAAmB/3C,EAAK5H,EAAQzD,EAAOukC,EAE/C,CACAl5B,EAAIyqC,YACJzqC,EAAIoB,KAAKpI,EAAO,UAAY,WAC5BgH,EAAI22B,SACR,CACJ,CACA,SAASmhB,GAAW93C,EAAK7D,EAAOqL,EAAM+mC,GAClC,MAAM3mC,EAAYzL,EAAMtI,MAAM+T,WACxB,SAAEsxB,EAAS,MAAEvkC,EAAM,IAAE4H,GAASgyC,GAAU,CAAC,EAC/C,GAAiB,MAAbrV,GAAiC,MAAbA,EAAkB,CACtC,IAAI7xB,EAAMH,EAAKC,EAAOC,EACL,MAAb8xB,GACA7xB,EAAO1S,EACPuS,EAAMU,EAAUV,IAChBC,EAAQ5K,EACR6K,EAASQ,EAAUR,SAEnBC,EAAOO,EAAUP,KACjBH,EAAMvS,EACNwS,EAAQS,EAAUT,MAClBC,EAAS7K,GAEbyD,EAAIk3B,YACA1vB,IACAH,EAAO5S,KAAKoC,IAAIwQ,EAAMG,EAAKH,MAC3BF,EAAQ1S,KAAKC,IAAIyS,EAAOK,EAAKL,OAC7BD,EAAMzS,KAAKoC,IAAIqQ,EAAKM,EAAKN,KACzBE,EAAS3S,KAAKC,IAAI0S,EAAQI,EAAKJ,SAEnCpH,EAAIorC,KAAK/jC,EAAMH,EAAKC,EAAQE,EAAMD,EAASF,GAC3ClH,EAAIwH,MACR,CACJ,CACA,SAASuwC,GAAmB/3C,EAAK5H,EAAQmhB,EAAO2f,GAC5C,MAAM+e,EAAoB7/C,EAAOw1C,YAAYr0B,EAAO2f,GAChD+e,GACAj4C,EAAIo3B,OAAO6gB,EAAkBv2C,EAAGu2C,EAAkBt2C,EAE1D,CAEA,IAAI9E,GAAQ,CACRiC,GAAI,SACJ,mBAAAo5C,CAAqBrkD,EAAO69C,EAAOv2C,GAC/B,MAAMsJ,GAAS5Q,EAAM+O,KAAKC,UAAY,IAAIvN,OACpCw/C,EAAU,GAChB,IAAIt3C,EAAMhI,EAAGskB,EAAMiV,EACnB,IAAIv5B,EAAI,EAAGA,EAAIiP,IAASjP,EACpBgI,EAAO3J,EAAMiP,eAAetN,GAC5BskB,EAAOtc,EAAK+D,QACZwtB,EAAS,KACLjV,GAAQA,EAAK3e,SAAW2e,aAAgByzB,KACxCxe,EAAS,CACLqV,QAASvwC,EAAMgd,iBAAiBrb,GAChCqH,MAAOrH,EACP4L,KAAM6zC,GAAYn7B,EAAMtkB,EAAGiP,GAC3B5Q,QACA6K,KAAMlB,EAAKY,WAAWjD,QAAQgH,UAC9BhG,MAAOqB,EAAKQ,OACZ8b,SAGRtc,EAAK26C,QAAUppB,EACf+lB,EAAQv+C,KAAKw4B,GAEjB,IAAIv5B,EAAI,EAAGA,EAAIiP,IAASjP,EACpBu5B,EAAS+lB,EAAQt/C,GACZu5B,IAA0B,IAAhBA,EAAO3tB,OAGtB2tB,EAAO3tB,KAAOyzC,GAAeC,EAASt/C,EAAG2F,EAAQ45C,WAEzD,EACA,UAAAqD,CAAYvkD,EAAO69C,EAAOv2C,GACtB,MAAM1F,EAA4B,eAArB0F,EAAQk9C,SACf37C,EAAW7I,EAAMwpB,+BACjB1V,EAAO9T,EAAM+T,UACnB,IAAI,IAAIpS,EAAIkH,EAASpH,OAAS,EAAGE,GAAK,IAAKA,EAAE,CACzC,MAAMu5B,EAASryB,EAASlH,GAAG2iD,QACtBppB,IAGLA,EAAOjV,KAAKe,oBAAoBlT,EAAMonB,EAAOrwB,MACzCjJ,GAAQs5B,EAAO3tB,MACfw1C,GAAU/iD,EAAMmM,IAAK+uB,EAAQpnB,GAErC,CACJ,EACA,kBAAA2wC,CAAoBzkD,EAAO69C,EAAOv2C,GAC9B,GAAyB,uBAArBA,EAAQk9C,SACR,OAEJ,MAAM37C,EAAW7I,EAAMwpB,+BACvB,IAAI,IAAI7nB,EAAIkH,EAASpH,OAAS,EAAGE,GAAK,IAAKA,EAAE,CACzC,MAAMu5B,EAASryB,EAASlH,GAAG2iD,QACvBvD,GAAiB7lB,IACjB6nB,GAAU/iD,EAAMmM,IAAK+uB,EAAQl7B,EAAM+T,UAE3C,CACJ,EACA,iBAAA2wC,CAAmB1kD,EAAOmX,EAAM7P,GAC5B,MAAM4zB,EAAS/jB,EAAKxN,KAAK26C,QACpBvD,GAAiB7lB,IAAgC,sBAArB5zB,EAAQk9C,UAGzCzB,GAAU/iD,EAAMmM,IAAK+uB,EAAQl7B,EAAM+T,UACvC,EACAmxB,SAAU,CACNgc,WAAW,EACXsD,SAAU,sBAIlB,MAAMG,GAAa,CAACC,EAAWtgB,KAC3B,IAAI,UAAEugB,EAAWvgB,EAAS,SAAEwgB,EAAUxgB,GAAcsgB,EAKpD,OAJIA,EAAUG,gBACVF,EAAYjkD,KAAKC,IAAIgkD,EAAWvgB,GAChCwgB,EAAWF,EAAUI,iBAAmBpkD,KAAKC,IAAIikD,EAAUxgB,IAExD,CACHwgB,WACAD,YACAI,WAAYrkD,KAAKoC,IAAIshC,EAAUugB,KAIvC,MAAMK,WAAepwB,GACpB,WAAAv1B,CAAY8G,GACLiW,QACA9c,KAAK2lD,QAAS,EACd3lD,KAAK4lD,eAAiB,GAC7B5lD,KAAK6lD,aAAe,KACb7lD,KAAK8lD,cAAe,EACpB9lD,KAAKQ,MAAQqG,EAAOrG,MACpBR,KAAK8H,QAAUjB,EAAOiB,QACtB9H,KAAK2M,IAAM9F,EAAO8F,IAClB3M,KAAK+lD,iBAAczlD,EACnBN,KAAKgmD,iBAAc1lD,EACnBN,KAAKimD,gBAAa3lD,EAClBN,KAAKsf,eAAYhf,EACjBN,KAAKqf,cAAW/e,EAChBN,KAAK6T,SAAMvT,EACXN,KAAK+T,YAASzT,EACdN,KAAKgU,UAAO1T,EACZN,KAAK8T,WAAQxT,EACbN,KAAK8d,YAASxd,EACdN,KAAK6d,WAAQvd,EACbN,KAAK64B,cAAWv4B,EAChBN,KAAK8pB,cAAWxpB,EAChBN,KAAK2gB,YAASrgB,EACdN,KAAKktB,cAAW5sB,CACpB,CACA,MAAA4F,CAAOmZ,EAAUC,EAAWmb,GACxBz6B,KAAKqf,SAAWA,EAChBrf,KAAKsf,UAAYA,EACjBtf,KAAK64B,SAAW4B,EAChBz6B,KAAK66B,gBACL76B,KAAKkmD,cACLlmD,KAAK67B,KACT,CACA,aAAAhB,GACQ76B,KAAK2iB,gBACL3iB,KAAK6d,MAAQ7d,KAAKqf,SAClBrf,KAAKgU,KAAOhU,KAAK64B,SAAS7kB,KAC1BhU,KAAK8T,MAAQ9T,KAAK6d,QAElB7d,KAAK8d,OAAS9d,KAAKsf,UACnBtf,KAAK6T,IAAM7T,KAAK64B,SAAShlB,IACzB7T,KAAK+T,OAAS/T,KAAK8d,OAE3B,CACA,WAAAooC,GACI,MAAMd,EAAYplD,KAAK8H,QAAQ8J,QAAU,CAAC,EAC1C,IAAIm0C,GAAc,OAASX,EAAUtpC,eAAgB,CACjD9b,KAAKQ,OACNR,OAAS,GACRolD,EAAUp5C,SACV+5C,EAAcA,EAAY/5C,OAAQ9J,GAAOkjD,EAAUp5C,OAAO9J,EAAMlC,KAAKQ,MAAM+O,QAE3E61C,EAAU1sC,OACVqtC,EAAcA,EAAYrtC,KAAK,CAACC,EAAG/E,IAAIwxC,EAAU1sC,KAAKC,EAAG/E,EAAG5T,KAAKQ,MAAM+O,QAEvEvP,KAAK8H,QAAQmB,SACb88C,EAAY98C,UAEhBjJ,KAAK+lD,YAAcA,CACvB,CACA,GAAAlqB,GACI,MAAM,QAAE/zB,EAAQ,IAAE6E,GAAS3M,KAC3B,IAAK8H,EAAQgZ,QAET,YADA9gB,KAAK6d,MAAQ7d,KAAK8d,OAAS,GAG/B,MAAMsnC,EAAYt9C,EAAQ8J,OACpBu0C,GAAY,QAAOf,EAAU7sB,MAC7BuM,EAAWqhB,EAAUv9C,KACrB60B,EAAcz9B,KAAKomD,uBACnB,SAAEd,EAAS,WAAEG,GAAgBN,GAAWC,EAAWtgB,GACzD,IAAIjnB,EAAOC,EACXnR,EAAI4rB,KAAO4tB,EAAUlnB,OACjBj/B,KAAK2iB,gBACL9E,EAAQ7d,KAAKqf,SACbvB,EAAS9d,KAAKqmD,SAAS5oB,EAAaqH,EAAUwgB,EAAUG,GAAc,KAEtE3nC,EAAS9d,KAAKsf,UACdzB,EAAQ7d,KAAKsmD,SAAS7oB,EAAa0oB,EAAWb,EAAUG,GAAc,IAE1EzlD,KAAK6d,MAAQzc,KAAKC,IAAIwc,EAAO/V,EAAQuX,UAAYrf,KAAKqf,UACtDrf,KAAK8d,OAAS1c,KAAKC,IAAIyc,EAAQhW,EAAQwX,WAAatf,KAAKsf,UAC7D,CACH,QAAA+mC,CAAS5oB,EAAaqH,EAAUwgB,EAAUG,GACnC,MAAM,IAAE94C,EAAI,SAAE0S,EAAWvX,SAAW8J,QAAQ,QAAEqd,KAAmBjvB,KAC3DumD,EAAWvmD,KAAK4lD,eAAiB,GACjCK,EAAajmD,KAAKimD,WAAa,CACjC,GAEEztB,EAAaitB,EAAax2B,EAChC,IAAIu3B,EAAc/oB,EAClB9wB,EAAIo1B,UAAY,OAChBp1B,EAAIu1B,aAAe,SACnB,IAAIukB,GAAO,EACP5yC,GAAO2kB,EAkBX,OAjBAx4B,KAAK+lD,YAAY/kD,QAAQ,CAAC4b,EAAYza,KAClC,MAAMukD,EAAYpB,EAAWxgB,EAAW,EAAIn4B,EAAIg6C,YAAY/pC,EAAWV,MAAM2B,OACnE,IAAN1b,GAAW8jD,EAAWA,EAAWhkD,OAAS,GAAKykD,EAAY,EAAIz3B,EAAU5P,KACzEmnC,GAAehuB,EACfytB,EAAWA,EAAWhkD,QAAUE,EAAI,EAAI,EAAI,IAAM,EAClD0R,GAAO2kB,EACPiuB,KAEJF,EAASpkD,GAAK,CACV6R,KAAM,EACNH,MACA4yC,MACA5oC,MAAO6oC,EACP5oC,OAAQ2nC,GAEZQ,EAAWA,EAAWhkD,OAAS,IAAMykD,EAAYz3B,IAE9Cu3B,CACX,CACA,QAAAF,CAAS7oB,EAAa0oB,EAAWb,EAAUsB,GACvC,MAAM,IAAEj6C,EAAI,UAAE2S,EAAYxX,SAAW8J,QAAQ,QAAEqd,KAAmBjvB,KAC5DumD,EAAWvmD,KAAK4lD,eAAiB,GACjCI,EAAchmD,KAAKgmD,YAAc,GACjCa,EAAcvnC,EAAYme,EAChC,IAAIqpB,EAAa73B,EACb83B,EAAkB,EAClBC,EAAmB,EACnBhzC,EAAO,EACPizC,EAAM,EA4BV,OA3BAjnD,KAAK+lD,YAAY/kD,QAAQ,CAAC4b,EAAYza,KAClC,MAAM,UAAEukD,EAAU,WAAEjB,GAqRhC,SAA2BH,EAAUa,EAAWx5C,EAAKiQ,EAAYgqC,GAC7D,MAAMF,EAOV,SAA4B9pC,EAAY0oC,EAAUa,EAAWx5C,GACzD,IAAIu6C,EAAiBtqC,EAAWV,KAC5BgrC,GAA4C,kBAAnBA,IACzBA,EAAiBA,EAAe7jD,OAAO,CAACsV,EAAG/E,IAAI+E,EAAE1W,OAAS2R,EAAE3R,OAAS0W,EAAI/E,IAE7E,OAAO0xC,EAAWa,EAAUv9C,KAAO,EAAI+D,EAAIg6C,YAAYO,GAAgBrpC,KAC3E,CAbsBspC,CAAmBvqC,EAAY0oC,EAAUa,EAAWx5C,GAChE84C,EAaV,SAA6BmB,EAAahqC,EAAYwqC,GAClD,IAAI3B,EAAamB,EACc,kBAApBhqC,EAAWV,OAClBupC,EAAa4B,GAA0BzqC,EAAYwqC,IAEvD,OAAO3B,CACX,CAnBuB6B,CAAoBV,EAAahqC,EAAYupC,EAAU3tB,YAC1E,MAAO,CACHkuB,YACAjB,aAER,CA5RgD8B,CAAkBjC,EAAUa,EAAWx5C,EAAKiQ,EAAYgqC,GACxFzkD,EAAI,GAAK6kD,EAAmBvB,EAAa,EAAIx2B,EAAU43B,IACvDC,GAAcC,EAAkB93B,EAChC+2B,EAAY9iD,KAAK,CACb2a,MAAOkpC,EACPjpC,OAAQkpC,IAEZhzC,GAAQ+yC,EAAkB93B,EAC1Bg4B,IACAF,EAAkBC,EAAmB,GAEzCT,EAASpkD,GAAK,CACV6R,OACAH,IAAKmzC,EACLC,MACAppC,MAAO6oC,EACP5oC,OAAQ2nC,GAEZsB,EAAkB3lD,KAAKoC,IAAIujD,EAAiBL,GAC5CM,GAAoBvB,EAAax2B,IAErC63B,GAAcC,EACdf,EAAY9iD,KAAK,CACb2a,MAAOkpC,EACPjpC,OAAQkpC,IAELF,CACX,CACA,cAAAU,GACI,IAAKxnD,KAAK8H,QAAQgZ,QACd,OAEJ,MAAM2c,EAAcz9B,KAAKomD,uBACjBR,eAAgBW,EAAWz+C,SAAS,MAAE4wB,EAAQ9mB,QAAQ,QAAEqd,GAAW,IAAEw4B,IAAYznD,KACnF0nD,GAAY,QAAcD,EAAKznD,KAAKgU,KAAMhU,KAAK6d,OACrD,GAAI7d,KAAK2iB,eAAgB,CACrB,IAAI8jC,EAAM,EACNzyC,GAAO,QAAe0kB,EAAO14B,KAAKgU,KAAOib,EAASjvB,KAAK8T,MAAQ9T,KAAKimD,WAAWQ,IACnF,IAAK,MAAMkB,KAAUpB,EACbE,IAAQkB,EAAOlB,MACfA,EAAMkB,EAAOlB,IACbzyC,GAAO,QAAe0kB,EAAO14B,KAAKgU,KAAOib,EAASjvB,KAAK8T,MAAQ9T,KAAKimD,WAAWQ,KAEnFkB,EAAO9zC,KAAO7T,KAAK6T,IAAM4pB,EAAcxO,EACvC04B,EAAO3zC,KAAO0zC,EAAUE,WAAWF,EAAUr5C,EAAE2F,GAAO2zC,EAAO9pC,OAC7D7J,GAAQ2zC,EAAO9pC,MAAQoR,CAE/B,KAAO,CACH,IAAIg4B,EAAM,EACNpzC,GAAM,QAAe6kB,EAAO14B,KAAK6T,IAAM4pB,EAAcxO,EAASjvB,KAAK+T,OAAS/T,KAAKgmD,YAAYiB,GAAKnpC,QACtG,IAAK,MAAM6pC,KAAUpB,EACboB,EAAOV,MAAQA,IACfA,EAAMU,EAAOV,IACbpzC,GAAM,QAAe6kB,EAAO14B,KAAK6T,IAAM4pB,EAAcxO,EAASjvB,KAAK+T,OAAS/T,KAAKgmD,YAAYiB,GAAKnpC,SAEtG6pC,EAAO9zC,IAAMA,EACb8zC,EAAO3zC,MAAQhU,KAAKgU,KAAOib,EAC3B04B,EAAO3zC,KAAO0zC,EAAUE,WAAWF,EAAUr5C,EAAEs5C,EAAO3zC,MAAO2zC,EAAO9pC,OACpEhK,GAAO8zC,EAAO7pC,OAASmR,CAE/B,CACJ,CACA,YAAAtM,GACI,MAAiC,QAA1B3iB,KAAK8H,QAAQgiB,UAAgD,WAA1B9pB,KAAK8H,QAAQgiB,QAC3D,CACA,IAAA1nB,GACI,GAAIpC,KAAK8H,QAAQgZ,QAAS,CACtB,MAAMnU,EAAM3M,KAAK2M,KACjB,OAASA,EAAK3M,MACdA,KAAK6nD,SACL,OAAWl7C,EACf,CACJ,CACH,KAAAk7C,GACO,MAAQ//C,QAASkB,EAAK,YAAEg9C,EAAY,WAAEC,EAAW,IAAEt5C,GAAS3M,MACtD,MAAE04B,EAAQ9mB,OAAQwzC,GAAep8C,EACjC8+C,EAAe,EAAA1gD,EAAS/C,MACxBqjD,GAAY,QAAc1+C,EAAKy+C,IAAKznD,KAAKgU,KAAMhU,KAAK6d,OACpDsoC,GAAY,QAAOf,EAAU7sB,OAC7B,QAAEtJ,GAAam2B,EACftgB,EAAWqhB,EAAUv9C,KACrBm/C,EAAejjB,EAAW,EAChC,IAAIkjB,EACJhoD,KAAKskC,YACL33B,EAAIo1B,UAAY2lB,EAAU3lB,UAAU,QACpCp1B,EAAIu1B,aAAe,SACnBv1B,EAAI6P,UAAY,GAChB7P,EAAI4rB,KAAO4tB,EAAUlnB,OACrB,MAAM,SAAEqmB,EAAS,UAAED,EAAU,WAAEI,GAAgBN,GAAWC,EAAWtgB,GAqD/DniB,EAAe3iB,KAAK2iB,eACpB8a,EAAcz9B,KAAKomD,sBAErB4B,EADArlC,EACS,CACLtU,GAAG,QAAeqqB,EAAO14B,KAAKgU,KAAOib,EAASjvB,KAAK8T,MAAQmyC,EAAW,IACtE33C,EAAGtO,KAAK6T,IAAMob,EAAUwO,EACxBhX,KAAM,GAGD,CACLpY,EAAGrO,KAAKgU,KAAOib,EACf3gB,GAAG,QAAeoqB,EAAO14B,KAAK6T,IAAM4pB,EAAcxO,EAASjvB,KAAK+T,OAASiyC,EAAY,GAAGloC,QACxF2I,KAAM,IAGd,QAAsBzmB,KAAK2M,IAAK3D,EAAKi/C,eACrC,MAAMzvB,EAAaitB,EAAax2B,EAChCjvB,KAAK+lD,YAAY/kD,QAAQ,CAAC4b,EAAYza,KAClCwK,EAAI0P,YAAcO,EAAWL,UAC7B5P,EAAIwP,UAAYS,EAAWL,UAC3B,MAAM2rC,EAAYv7C,EAAIg6C,YAAY/pC,EAAWV,MAAM2B,MAC7CkkB,EAAY2lB,EAAU3lB,UAAUnlB,EAAWmlB,YAAcnlB,EAAWmlB,UAAYqjB,EAAUrjB,YAC1FlkB,EAAQynC,EAAWyC,EAAeG,EACxC,IAAI75C,EAAI25C,EAAO35C,EACXC,EAAI05C,EAAO15C,EACfo5C,EAAUS,SAASnoD,KAAK6d,OACpB8E,EACIxgB,EAAI,GAAKkM,EAAIwP,EAAQoR,EAAUjvB,KAAK8T,QACpCxF,EAAI05C,EAAO15C,GAAKkqB,EAChBwvB,EAAOvhC,OACPpY,EAAI25C,EAAO35C,GAAI,QAAeqqB,EAAO14B,KAAKgU,KAAOib,EAASjvB,KAAK8T,MAAQmyC,EAAW+B,EAAOvhC,QAEtFtkB,EAAI,GAAKmM,EAAIkqB,EAAax4B,KAAK+T,SACtC1F,EAAI25C,EAAO35C,EAAIA,EAAI23C,EAAYgC,EAAOvhC,MAAM5I,MAAQoR,EACpD+4B,EAAOvhC,OACPnY,EAAI05C,EAAO15C,GAAI,QAAeoqB,EAAO14B,KAAK6T,IAAM4pB,EAAcxO,EAASjvB,KAAK+T,OAASiyC,EAAYgC,EAAOvhC,MAAM3I,SAMlH,GA7FkB,SAASzP,EAAGC,EAAGsO,GACjC,GAAIwD,MAAMklC,IAAaA,GAAY,GAAKllC,MAAMilC,IAAcA,EAAY,EACpE,OAEJ14C,EAAIy2B,OACJ,MAAM5mB,GAAY,IAAA/N,GAAemO,EAAWJ,UAAW,GAQvD,GAPA7P,EAAIwP,WAAY,IAAA1N,GAAemO,EAAWT,UAAW2rC,GACrDn7C,EAAIurC,SAAU,IAAAzpC,GAAemO,EAAWs7B,QAAS,QACjDvrC,EAAIi3B,gBAAiB,IAAAn1B,GAAemO,EAAWgnB,eAAgB,GAC/Dj3B,EAAI6qC,UAAW,IAAA/oC,GAAemO,EAAW46B,SAAU,SACnD7qC,EAAI6P,UAAYA,EAChB7P,EAAI0P,aAAc,IAAA5N,GAAemO,EAAWP,YAAayrC,GACzDn7C,EAAIg3B,aAAY,IAAAl1B,GAAemO,EAAWwrC,SAAU,KAChDhD,EAAUG,cAAe,CACzB,MAAM8C,EAAc,CAChBhtC,OAAQgqC,EAAYjkD,KAAKknD,MAAQ,EACjCvsC,WAAYa,EAAWb,WACvBZ,SAAUyB,EAAWzB,SACrBsB,YAAaD,GAEXwD,EAAU0nC,EAAUa,MAAMl6C,EAAGi3C,EAAW,GACxCrlC,EAAU3R,EAAIy5C,GACpB,QAAgBp7C,EAAK07C,EAAaroC,EAASC,EAASmlC,EAAUI,iBAAmBF,EACrF,KAAO,CACH,MAAMkD,EAAUl6C,EAAIlN,KAAKoC,KAAKshC,EAAWugB,GAAa,EAAG,GACnDoD,EAAWf,EAAUE,WAAWv5C,EAAGi3C,GACnCtQ,GAAe,QAAcp4B,EAAWo4B,cAC9CroC,EAAIk3B,YACA38B,OAAOU,OAAOotC,GAAc1L,KAAM76B,GAAU,IAANA,IACtC,QAAmB9B,EAAK,CACpB0B,EAAGo6C,EACHn6C,EAAGk6C,EACHx6B,EAAGs3B,EACHp3B,EAAGm3B,EACHhqC,OAAQ25B,IAGZroC,EAAIorC,KAAK0Q,EAAUD,EAASlD,EAAUD,GAE1C14C,EAAIoB,OACc,IAAdyO,GACA7P,EAAIq3B,QAEZ,CACAr3B,EAAI22B,SACR,CA6CIolB,CADchB,EAAUr5C,EAAEA,GACLC,EAAGsO,GACxBvO,GAAI,QAAO0zB,EAAW1zB,EAAIi3C,EAAWyC,EAAcplC,EAAetU,EAAIwP,EAAQ7d,KAAK8T,MAAO9K,EAAKy+C,KA7ClF,SAASp5C,EAAGC,EAAGsO,IAC5B,OAAWjQ,EAAKiQ,EAAWV,KAAM7N,EAAGC,EAAIm3C,EAAa,EAAGU,EAAW,CAC/DwC,cAAe/rC,EAAWlK,OAC1BqvB,UAAW2lB,EAAU3lB,UAAUnlB,EAAWmlB,YAElD,CAyCI6mB,CAASlB,EAAUr5C,EAAEA,GAAIC,EAAGsO,GACxB+F,EACAqlC,EAAO35C,GAAKwP,EAAQoR,OACjB,GAA+B,kBAApBrS,EAAWV,KAAmB,CAC5C,MAAMkrC,EAAiBjB,EAAU3tB,WACjCwvB,EAAO15C,GAAK+4C,GAA0BzqC,EAAYwqC,GAAkBn4B,CACxE,MACI+4B,EAAO15C,GAAKkqB,KAGpB,QAAqBx4B,KAAK2M,IAAK3D,EAAKi/C,cACxC,CACH,SAAA3jB,GACO,MAAMt7B,EAAOhJ,KAAK8H,QACZy1B,EAAYv0B,EAAKq0B,MACjBwrB,GAAY,QAAOtrB,EAAUhF,MAC7BuwB,GAAe,OAAUvrB,EAAUtO,SACzC,IAAKsO,EAAUzc,QACX,OAEJ,MAAM4mC,GAAY,QAAc1+C,EAAKy+C,IAAKznD,KAAKgU,KAAMhU,KAAK6d,OACpDlR,EAAM3M,KAAK2M,IACXmd,EAAWyT,EAAUzT,SACrBi+B,EAAec,EAAUjgD,KAAO,EAChCmgD,EAA6BD,EAAaj1C,IAAMk0C,EACtD,IAAIz5C,EACA0F,EAAOhU,KAAKgU,KACZqL,EAAWrf,KAAK6d,MACpB,GAAI7d,KAAK2iB,eACLtD,EAAWje,KAAKoC,OAAOxD,KAAKimD,YAC5B33C,EAAItO,KAAK6T,IAAMk1C,EACf/0C,GAAO,QAAehL,EAAK0vB,MAAO1kB,EAAMhU,KAAK8T,MAAQuL,OAClD,CACH,MAAMC,EAAYtf,KAAKgmD,YAAY3iD,OAAO,CAACC,EAAKsF,IAAOxH,KAAKoC,IAAIF,EAAKsF,EAAKkV,QAAS,GACnFxP,EAAIy6C,GAA6B,QAAe//C,EAAK0vB,MAAO14B,KAAK6T,IAAK7T,KAAK+T,OAASuL,EAAYtW,EAAK4I,OAAOqd,QAAUjvB,KAAKomD,sBAC/H,CACA,MAAM/3C,GAAI,QAAeyb,EAAU9V,EAAMA,EAAOqL,GAChD1S,EAAIo1B,UAAY2lB,EAAU3lB,WAAU,QAAmBjY,IACvDnd,EAAIu1B,aAAe,SACnBv1B,EAAI0P,YAAckhB,EAAUl5B,MAC5BsI,EAAIwP,UAAYohB,EAAUl5B,MAC1BsI,EAAI4rB,KAAOswB,EAAU5pB,QACrB,OAAWtyB,EAAK4wB,EAAUrhB,KAAM7N,EAAGC,EAAGu6C,EAC1C,CACH,mBAAAzC,GACO,MAAM7oB,EAAYv9B,KAAK8H,QAAQu1B,MACzBwrB,GAAY,QAAOtrB,EAAUhF,MAC7BuwB,GAAe,OAAUvrB,EAAUtO,SACzC,OAAOsO,EAAUzc,QAAU+nC,EAAUrwB,WAAaswB,EAAahrC,OAAS,CAC5E,CACH,gBAAAkrC,CAAiB36C,EAAGC,GACb,IAAInM,EAAG8mD,EAAQC,EACf,IAAI,QAAW76C,EAAGrO,KAAKgU,KAAMhU,KAAK8T,SAAU,QAAWxF,EAAGtO,KAAK6T,IAAK7T,KAAK+T,QAErE,IADAm1C,EAAKlpD,KAAK4lD,eACNzjD,EAAI,EAAGA,EAAI+mD,EAAGjnD,SAAUE,EAExB,GADA8mD,EAASC,EAAG/mD,IACR,QAAWkM,EAAG46C,EAAOj1C,KAAMi1C,EAAOj1C,KAAOi1C,EAAOprC,SAAU,QAAWvP,EAAG26C,EAAOp1C,IAAKo1C,EAAOp1C,IAAMo1C,EAAOnrC,QACxG,OAAO9d,KAAK+lD,YAAY5jD,GAIpC,OAAO,IACX,CACH,WAAAgnD,CAAY/jD,GACL,MAAM4D,EAAOhJ,KAAK8H,QAClB,IAyDR,SAAoBnH,EAAMqI,GACtB,IAAc,cAATrI,GAAiC,aAATA,KAAyBqI,EAAK4rC,SAAW5rC,EAAKogD,SACvE,OAAO,EAEX,GAAIpgD,EAAK2T,UAAqB,UAAThc,GAA6B,YAATA,GACrC,OAAO,EAEX,OAAO,CACX,CAjEa0oD,CAAWjkD,EAAEzE,KAAMqI,GACpB,OAEJ,MAAMsgD,EAActpD,KAAKgpD,iBAAiB5jD,EAAEiJ,EAAGjJ,EAAEkJ,GACjD,GAAe,cAAXlJ,EAAEzE,MAAmC,aAAXyE,EAAEzE,KAAqB,CACjD,MAAMy3C,EAAWp4C,KAAK6lD,aAChB0D,GA3XK31C,EA2X2B01C,EA3XjB,QAAb3wC,EA2XoBy/B,IA3XO,OAANxkC,GAAc+E,EAAE7O,eAAiB8J,EAAE9J,cAAgB6O,EAAEnP,QAAUoK,EAAEpK,OA4X1F4uC,IAAamR,IACb,OAASvgD,EAAKogD,QAAS,CACnBhkD,EACAgzC,EACAp4C,MACDA,MAEPA,KAAK6lD,aAAeyD,EAChBA,IAAgBC,IAChB,OAASvgD,EAAK4rC,QAAS,CACnBxvC,EACAkkD,EACAtpD,MACDA,KAEX,MAAWspD,IACP,OAAStgD,EAAK2T,QAAS,CACnBvX,EACAkkD,EACAtpD,MACDA,MAhZI,IAAC2Y,EAAG/E,CAkZnB,EAwBJ,SAASyzC,GAA0BzqC,EAAYwqC,GAE3C,OAAOA,GADaxqC,EAAWV,KAAOU,EAAWV,KAAKja,OAAS,EAEnE,CAUA,IAAIunD,GAAgB,CAChB/9C,GAAI,SACPg+C,SAAU/D,GACP,KAAApkD,CAAOd,EAAO69C,EAAOv2C,GACjB,MAAM+T,EAASrb,EAAMqb,OAAS,IAAI6pC,GAAO,CACrC/4C,IAAKnM,EAAMmM,IACX7E,UACAtH,UAEJ+rB,GAAQvlB,UAAUxG,EAAOqb,EAAQ/T,GACjCykB,GAAQ2C,OAAO1uB,EAAOqb,EAC1B,EACA,IAAAnY,CAAMlD,GACF+rB,GAAQ8C,UAAU7uB,EAAOA,EAAMqb,eACxBrb,EAAMqb,MACjB,EACA,YAAA2e,CAAch6B,EAAO69C,EAAOv2C,GACxB,MAAM+T,EAASrb,EAAMqb,OACrB0Q,GAAQvlB,UAAUxG,EAAOqb,EAAQ/T,GACjC+T,EAAO/T,QAAUA,CACrB,EACA,WAAAi0B,CAAav7B,GACT,MAAMqb,EAASrb,EAAMqb,OACrBA,EAAOqqC,cACPrqC,EAAO2rC,gBACX,EACA,UAAAkC,CAAYlpD,EAAOmX,GACVA,EAAKq8B,QACNxzC,EAAMqb,OAAOstC,YAAYxxC,EAAK3U,MAEtC,EACA0iC,SAAU,CACN5kB,SAAS,EACTgJ,SAAU,MACV4O,MAAO,SACPxL,UAAU,EACVjkB,SAAS,EACT0X,OAAQ,IACR,OAAAhE,CAASvX,EAAGwX,EAAYf,GACpB,MAAMrS,EAAQoT,EAAW9S,aACnB6/C,EAAK9tC,EAAOrb,MACdmpD,EAAGnsC,iBAAiBhU,IACpBmgD,EAAG7W,KAAKtpC,GACRoT,EAAWlK,QAAS,IAEpBi3C,EAAG5W,KAAKvpC,GACRoT,EAAWlK,QAAS,EAE5B,EACAkiC,QAAS,KACTwU,QAAS,KACTx3C,OAAQ,CACJvN,MAAQsI,GAAMA,EAAInM,MAAMsH,QAAQzD,MAChCihD,SAAU,GACVr2B,QAAS,GACT,cAAAnT,CAAgBtb,GACZ,MAAMgP,EAAWhP,EAAM+O,KAAKC,UACpBoC,QAAQ,cAAE2zC,EAAc,WAAExpC,EAAW,UAAEgmB,EAAU,MAAE19B,EAAM,gBAAEulD,EAAgB,aAAE5U,IAAqBx0C,EAAMqb,OAAO/T,QACvH,OAAOtH,EAAM8I,yBAAyB0S,IAAK7R,IACvC,MAAM8R,EAAQ9R,EAAKY,WAAW2J,SAAS6wC,EAAgB,OAAIjlD,GACrDmc,GAAc,OAAUR,EAAMQ,aACpC,MAAO,CACHP,KAAM1M,EAASrF,EAAKX,OAAOgK,MAC3B2I,UAAWF,EAAMG,gBACjBG,UAAWlY,EACXqO,QAASvI,EAAK4mC,QACdmH,QAASj8B,EAAMk8B,eACfiQ,SAAUnsC,EAAMolB,WAChBuC,eAAgB3nB,EAAMslB,iBACtBiW,SAAUv7B,EAAMq7B,gBAChB96B,WAAYC,EAAYoB,MAAQpB,EAAYqB,QAAU,EACtDzB,YAAaJ,EAAMK,YACnBP,WAAYA,GAAcE,EAAMF,WAChCZ,SAAUc,EAAMd,SAChB4mB,UAAWA,GAAa9lB,EAAM8lB,UAC9BiT,aAAc4U,IAAoB5U,GAAgB/4B,EAAM+4B,cACxDlrC,aAAcK,EAAKX,QAExBxJ,KACP,GAEJq9B,MAAO,CACHh5B,MAAQsI,GAAMA,EAAInM,MAAMsH,QAAQzD,MAChCyc,SAAS,EACTgJ,SAAU,SACV5N,KAAM,KAGdsqB,YAAa,CACTjrB,YAAcC,IAAQA,EAAKE,WAAW,MACtC9J,OAAQ,CACJ2J,YAAcC,IAAQ,CACd,iBACA,SACA,QACFmR,SAASnR,MAK3B,MAAMquC,WAAcv0B,GACnB,WAAAv1B,CAAY8G,GACLiW,QACA9c,KAAKQ,MAAQqG,EAAOrG,MACpBR,KAAK8H,QAAUjB,EAAOiB,QACtB9H,KAAK2M,IAAM9F,EAAO8F,IAClB3M,KAAK8pD,cAAWxpD,EAChBN,KAAK6T,SAAMvT,EACXN,KAAK+T,YAASzT,EACdN,KAAKgU,UAAO1T,EACZN,KAAK8T,WAAQxT,EACbN,KAAK6d,WAAQvd,EACbN,KAAK8d,YAASxd,EACdN,KAAK8pB,cAAWxpB,EAChBN,KAAK2gB,YAASrgB,EACdN,KAAKktB,cAAW5sB,CACpB,CACA,MAAA4F,CAAOmZ,EAAUC,GACb,MAAMtW,EAAOhJ,KAAK8H,QAGlB,GAFA9H,KAAKgU,KAAO,EACZhU,KAAK6T,IAAM,GACN7K,EAAK8X,QAEN,YADA9gB,KAAK6d,MAAQ7d,KAAK8d,OAAS9d,KAAK8T,MAAQ9T,KAAK+T,OAAS,GAG1D/T,KAAK6d,MAAQ7d,KAAK8T,MAAQuL,EAC1Brf,KAAK8d,OAAS9d,KAAK+T,OAASuL,EAC5B,MAAM0iB,GAAY,OAAQh5B,EAAKkT,MAAQlT,EAAKkT,KAAKja,OAAS,EAC1DjC,KAAK8pD,UAAW,OAAU9gD,EAAKimB,SAC/B,MAAM86B,EAAW/nB,GAAY,QAAOh5B,EAAKuvB,MAAMC,WAAax4B,KAAK8pD,SAAShsC,OACtE9d,KAAK2iB,eACL3iB,KAAK8d,OAASisC,EAEd/pD,KAAK6d,MAAQksC,CAErB,CACA,YAAApnC,GACI,MAAMsJ,EAAMjsB,KAAK8H,QAAQgiB,SACzB,MAAe,QAARmC,GAAyB,WAARA,CAC5B,CACA,SAAA+9B,CAAUxpC,GACN,MAAM,IAAE3M,EAAI,KAAEG,EAAK,OAAED,EAAO,MAAED,EAAM,QAAEhM,GAAa9H,KAC7C04B,EAAQ5wB,EAAQ4wB,MACtB,IACIrZ,EAAUklB,EAAQC,EADlBrpB,EAAW,EAkBf,OAhBInb,KAAK2iB,gBACL4hB,GAAS,QAAe7L,EAAO1kB,EAAMF,GACrC0wB,EAAS3wB,EAAM2M,EACfnB,EAAWvL,EAAQE,IAEM,SAArBlM,EAAQgiB,UACRya,EAASvwB,EAAOwM,EAChBgkB,GAAS,QAAe9L,EAAO3kB,EAAQF,GACvCsH,GAAiB,GAAN,EAAA+D,IAEXqlB,EAASzwB,EAAQ0M,EACjBgkB,GAAS,QAAe9L,EAAO7kB,EAAKE,GACpCoH,EAAgB,GAAL,EAAA+D,GAEfG,EAAWtL,EAASF,GAEjB,CACH0wB,SACAC,SACAnlB,WACAlE,WAER,CACA,IAAA/Y,GACI,MAAMuK,EAAM3M,KAAK2M,IACX3D,EAAOhJ,KAAK8H,QAClB,IAAKkB,EAAK8X,QACN,OAEJ,MAAMmpC,GAAW,QAAOjhD,EAAKuvB,MAEvB/X,EADaypC,EAASzxB,WACA,EAAIx4B,KAAK8pD,SAASj2C,KACxC,OAAE0wB,EAAO,OAAEC,EAAO,SAAEnlB,EAAS,SAAElE,GAAcnb,KAAKgqD,UAAUxpC,IAClE,OAAW7T,EAAK3D,EAAKkT,KAAM,EAAG,EAAG+tC,EAAU,CACvC5lD,MAAO2E,EAAK3E,MACZgb,WACAlE,WACA4mB,WAAW,QAAmB/4B,EAAK0vB,OACnCwJ,aAAc,SACde,YAAa,CACTsB,EACAC,IAGZ,EAYJ,IAAI0lB,GAAe,CACfz+C,GAAI,QACPg+C,SAAUI,GACP,KAAAvoD,CAAOd,EAAO69C,EAAOv2C,IAbzB,SAAqBtH,EAAO+8B,GACxB,MAAMF,EAAQ,IAAIwsB,GAAM,CACpBl9C,IAAKnM,EAAMmM,IACX7E,QAASy1B,EACT/8B,UAEJ+rB,GAAQvlB,UAAUxG,EAAO68B,EAAOE,GAChChR,GAAQ2C,OAAO1uB,EAAO68B,GACtB78B,EAAM2pD,WAAa9sB,CACvB,CAKQ+sB,CAAY5pD,EAAOsH,EACvB,EACA,IAAApE,CAAMlD,GACF,MAAM2pD,EAAa3pD,EAAM2pD,WACzB59B,GAAQ8C,UAAU7uB,EAAO2pD,UAClB3pD,EAAM2pD,UACjB,EACA,YAAA3vB,CAAch6B,EAAO69C,EAAOv2C,GACxB,MAAMu1B,EAAQ78B,EAAM2pD,WACpB59B,GAAQvlB,UAAUxG,EAAO68B,EAAOv1B,GAChCu1B,EAAMv1B,QAAUA,CACpB,EACA49B,SAAU,CACNhN,MAAO,SACP5X,SAAS,EACTyX,KAAM,CACF5X,OAAQ,QAEZuM,UAAU,EACV+B,QAAS,GACTnF,SAAU,MACV5N,KAAM,GACNyE,OAAQ,KAEZglB,cAAe,CACXthC,MAAO,SAEXmiC,YAAa,CACTjrB,aAAa,EACbE,YAAY,IAIpB,MAAMO,GAAM,IAAIquC,QAChB,IAAIC,GAAkB,CAClB7+C,GAAI,WACJ,KAAAnK,CAAOd,EAAO69C,EAAOv2C,GACjB,MAAMu1B,EAAQ,IAAIwsB,GAAM,CACpBl9C,IAAKnM,EAAMmM,IACX7E,UACAtH,UAEJ+rB,GAAQvlB,UAAUxG,EAAO68B,EAAOv1B,GAChCykB,GAAQ2C,OAAO1uB,EAAO68B,GACtBrhB,GAAIlZ,IAAItC,EAAO68B,EACnB,EACA,IAAA35B,CAAMlD,GACF+rB,GAAQ8C,UAAU7uB,EAAOwb,GAAIrZ,IAAInC,IACjCwb,GAAInY,OAAOrD,EACf,EACA,YAAAg6B,CAAch6B,EAAO69C,EAAOv2C,GACxB,MAAMu1B,EAAQrhB,GAAIrZ,IAAInC,GACtB+rB,GAAQvlB,UAAUxG,EAAO68B,EAAOv1B,GAChCu1B,EAAMv1B,QAAUA,CACpB,EACA49B,SAAU,CACNhN,MAAO,SACP5X,SAAS,EACTyX,KAAM,CACF5X,OAAQ,UAEZuM,UAAU,EACV+B,QAAS,EACTnF,SAAU,MACV5N,KAAM,GACNyE,OAAQ,MAEZglB,cAAe,CACXthC,MAAO,SAEXmiC,YAAa,CACTjrB,aAAa,EACbE,YAAY,IAIpB,MAAM8uC,GAAc,CACnB,OAAAC,CAASxoD,GACF,IAAKA,EAAMC,OACP,OAAO,EAEX,IAAIE,EAAG60B,EACHyzB,EAAO,IAAIrf,IACX98B,EAAI,EACJ8C,EAAQ,EACZ,IAAIjP,EAAI,EAAG60B,EAAMh1B,EAAMC,OAAQE,EAAI60B,IAAO70B,EAAE,CACxC,MAAMwnB,EAAK3nB,EAAMG,GAAGsS,QACpB,GAAIkV,GAAMA,EAAG6L,WAAY,CACrB,MAAMvJ,EAAMtC,EAAG4L,kBACfk1B,EAAKtnD,IAAI8oB,EAAI5d,GACbC,GAAK2d,EAAI3d,IACP8C,CACN,CACJ,CACA,GAAc,IAAVA,GAA6B,IAAdq5C,EAAK7hD,KACpB,OAAO,EAKX,MAAO,CACHyF,EAJa,IACVo8C,GACLpnD,OAAO,CAACsV,EAAG/E,IAAI+E,EAAI/E,GAAK62C,EAAK7hD,KAG3B0F,EAAGA,EAAI8C,EAEf,EACH,OAAAya,CAAS7pB,EAAO0oD,GACT,IAAK1oD,EAAMC,OACP,OAAO,EAEX,IAGIE,EAAG60B,EAAK2zB,EAHRt8C,EAAIq8C,EAAcr8C,EAClBC,EAAIo8C,EAAcp8C,EAClB4c,EAActY,OAAOC,kBAEzB,IAAI1Q,EAAI,EAAG60B,EAAMh1B,EAAMC,OAAQE,EAAI60B,IAAO70B,EAAE,CACxC,MAAMwnB,EAAK3nB,EAAMG,GAAGsS,QACpB,GAAIkV,GAAMA,EAAG6L,WAAY,CACrB,MAAMrS,EAASwG,EAAGwB,iBACZ/jB,GAAI,QAAsBsjD,EAAevnC,GAC3C/b,EAAI8jB,IACJA,EAAc9jB,EACdujD,EAAiBhhC,EAEzB,CACJ,CACA,GAAIghC,EAAgB,CAChB,MAAMC,EAAKD,EAAep1B,kBAC1BlnB,EAAIu8C,EAAGv8C,EACPC,EAAIs8C,EAAGt8C,CACX,CACA,MAAO,CACHD,IACAC,IAER,GAEJ,SAASu8C,GAAa1wC,EAAM2wC,GAQxB,OAPIA,KACI,OAAQA,GACR36C,MAAMoY,UAAUrlB,KAAK6nD,MAAM5wC,EAAM2wC,GAEjC3wC,EAAKjX,KAAK4nD,IAGX3wC,CACX,CACC,SAAS6wC,GAAcC,GACpB,OAAoB,kBAARA,GAAoBA,aAAeC,SAAWD,EAAItnC,QAAQ,OAAS,EACpEsnC,EAAIllB,MAAM,MAEdklB,CACX,CACC,SAASE,GAAkB3qD,EAAO0B,GAC/B,MAAM,QAAEuS,EAAQ,aAAE3K,EAAa,MAAEN,GAAWtH,EACtC6I,EAAavK,EAAMiP,eAAe3F,GAAciB,YAChD,MAAEyI,EAAM,MAAE7K,GAAWoC,EAAWwI,iBAAiB/J,GACvD,MAAO,CACHhJ,QACAgT,QACAxI,OAAQD,EAAWkH,UAAUzI,GAC7BwL,IAAKxU,EAAM+O,KAAKC,SAAS1F,GAAcyF,KAAK/F,GAC5C4hD,eAAgBziD,EAChBuF,QAASnD,EAAWoD,aACpB4G,UAAWvL,EACXM,eACA2K,UAER,CACC,SAAS42C,GAAeC,EAASxjD,GAC9B,MAAM6E,EAAM2+C,EAAQ9qD,MAAMmM,KACpB,KAAE4+C,EAAK,OAAEC,EAAO,MAAEnuB,GAAWiuB,GAC7B,SAAEhG,EAAS,UAAED,GAAev9C,EAC5B2jD,GAAW,QAAO3jD,EAAQ2jD,UAC1B5C,GAAY,QAAO/gD,EAAQ+gD,WAC3B6C,GAAa,QAAO5jD,EAAQ4jD,YAC5BC,EAAiBtuB,EAAMp7B,OACvB2pD,EAAkBJ,EAAOvpD,OACzB4pD,EAAoBN,EAAKtpD,OACzBgtB,GAAU,OAAUnnB,EAAQmnB,SAClC,IAAInR,EAASmR,EAAQnR,OACjBD,EAAQ,EACRiuC,EAAqBP,EAAKloD,OAAO,CAAC+N,EAAO26C,IAAW36C,EAAQ26C,EAASC,OAAO/pD,OAAS8pD,EAASE,MAAMhqD,OAAS8pD,EAASG,MAAMjqD,OAAQ,GAKxI,GAJA6pD,GAAsBR,EAAQa,WAAWlqD,OAASqpD,EAAQc,UAAUnqD,OAChE0pD,IACA7tC,GAAU6tC,EAAiB9C,EAAUrwB,YAAcmzB,EAAiB,GAAK7jD,EAAQukD,aAAevkD,EAAQwkD,mBAExGR,EAAoB,CAEpBhuC,GAAU+tC,GADa/jD,EAAQykD,cAAgBnrD,KAAKoC,IAAI6hD,EAAWoG,EAASjzB,YAAcizB,EAASjzB,aACnDszB,EAAqBD,GAAqBJ,EAASjzB,YAAcszB,EAAqB,GAAKhkD,EAAQ0kD,WACvJ,CACIZ,IACA9tC,GAAUhW,EAAQ2kD,gBAAkBb,EAAkBF,EAAWlzB,YAAcozB,EAAkB,GAAK9jD,EAAQ4kD,eAElH,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASnmC,GAC1B5I,EAAQzc,KAAKoC,IAAIqa,EAAOlR,EAAIg6C,YAAYlgC,GAAM5I,MAAQ8uC,EAC1D,EAiBA,OAhBAhgD,EAAIy2B,OACJz2B,EAAI4rB,KAAOswB,EAAU5pB,QACrB,OAAKqsB,EAAQjuB,MAAOuvB,GACpBjgD,EAAI4rB,KAAOkzB,EAASxsB,QACpB,OAAKqsB,EAAQa,WAAW3zC,OAAO8yC,EAAQc,WAAYQ,GACnDD,EAAe7kD,EAAQykD,cAAgBjH,EAAW,EAAIx9C,EAAQ0lB,WAAa,GAC3E,OAAK+9B,EAAOQ,KACR,OAAKA,EAASC,OAAQY,IACtB,OAAKb,EAASE,MAAOW,IACrB,OAAKb,EAASG,MAAOU,KAEzBD,EAAe,EACfhgD,EAAI4rB,KAAOmzB,EAAWzsB,QACtB,OAAKqsB,EAAQE,OAAQoB,GACrBjgD,EAAI22B,UACJzlB,GAASoR,EAAQpR,MACV,CACHA,QACAC,SAER,CAoBA,SAAS+uC,GAAgBrsD,EAAOsH,EAASc,EAAMkkD,GAC3C,MAAM,EAAEz+C,EAAE,MAAEwP,GAAWjV,GACfiV,MAAOkvC,EAAax4C,WAAW,KAAEP,EAAK,MAAEF,IAActT,EAC9D,IAAIwsD,EAAS,SAWb,MAVe,WAAXF,EACAE,EAAS3+C,IAAM2F,EAAOF,GAAS,EAAI,OAAS,QACrCzF,GAAKwP,EAAQ,EACpBmvC,EAAS,OACF3+C,GAAK0+C,EAAalvC,EAAQ,IACjCmvC,EAAS,SAnBjB,SAA6BA,EAAQxsD,EAAOsH,EAASc,GACjD,MAAM,EAAEyF,EAAE,MAAEwP,GAAWjV,EACjBqkD,EAAQnlD,EAAQolD,UAAYplD,EAAQqlD,aAC1C,MAAe,SAAXH,GAAqB3+C,EAAIwP,EAAQovC,EAAQzsD,EAAMqd,OAGpC,UAAXmvC,GAAsB3+C,EAAIwP,EAAQovC,EAAQ,QAA9C,CAGJ,CAYQG,CAAoBJ,EAAQxsD,EAAOsH,EAASc,KAC5CokD,EAAS,UAENA,CACX,CACC,SAASK,GAAmB7sD,EAAOsH,EAASc,GACzC,MAAMkkD,EAASlkD,EAAKkkD,QAAUhlD,EAAQglD,QApC1C,SAAyBtsD,EAAOoI,GAC5B,MAAM,EAAE0F,EAAE,OAAEwP,GAAYlV,EACxB,OAAI0F,EAAIwP,EAAS,EACN,MACAxP,EAAI9N,EAAMsd,OAASA,EAAS,EAC5B,SAEJ,QACX,CA4BoDwvC,CAAgB9sD,EAAOoI,GACvE,MAAO,CACHokD,OAAQpkD,EAAKokD,QAAUllD,EAAQklD,QAAUH,GAAgBrsD,EAAOsH,EAASc,EAAMkkD,GAC/EA,SAER,CAqBC,SAASS,GAAmBzlD,EAASc,EAAM4kD,EAAWhtD,GACnD,MAAM,UAAE0sD,EAAU,aAAEC,EAAa,aAAEM,GAAkB3lD,GAC/C,OAAEklD,EAAO,OAAEF,GAAYU,EACvBE,EAAiBR,EAAYC,GAC7B,QAAE3R,EAAQ,SAAEC,EAAS,WAAEC,EAAW,YAAEC,IAAiB,QAAc8R,GACzE,IAAIp/C,EAzBR,SAAgBzF,EAAMokD,GAClB,IAAI,EAAE3+C,EAAE,MAAEwP,GAAWjV,EAMrB,MALe,UAAXokD,EACA3+C,GAAKwP,EACa,WAAXmvC,IACP3+C,GAAKwP,EAAQ,GAEVxP,CACX,CAiBYs/C,CAAO/kD,EAAMokD,GACrB,MAAM1+C,EAjBV,SAAgB1F,EAAMkkD,EAAQY,GAC1B,IAAI,EAAEp/C,EAAE,OAAEwP,GAAYlV,EAQtB,MAPe,QAAXkkD,EACAx+C,GAAKo/C,EAELp/C,GADkB,WAAXw+C,EACFhvC,EAAS4vC,EAET5vC,EAAS,EAEXxP,CACX,CAOcs/C,CAAOhlD,EAAMkkD,EAAQY,GAY/B,MAXe,WAAXZ,EACe,SAAXE,EACA3+C,GAAKq/C,EACa,UAAXV,IACP3+C,GAAKq/C,GAES,SAAXV,EACP3+C,GAAKjN,KAAKoC,IAAIg4C,EAASE,GAAcwR,EACnB,UAAXF,IACP3+C,GAAKjN,KAAKoC,IAAIi4C,EAAUE,GAAeuR,GAEpC,CACH7+C,GAAG,OAAYA,EAAG,EAAG7N,EAAMqd,MAAQjV,EAAKiV,OACxCvP,GAAG,OAAYA,EAAG,EAAG9N,EAAMsd,OAASlV,EAAKkV,QAEjD,CACA,SAAS+vC,GAAYvC,EAAS5yB,EAAO5wB,GACjC,MAAMmnB,GAAU,OAAUnnB,EAAQmnB,SAClC,MAAiB,WAAVyJ,EAAqB4yB,EAAQj9C,EAAIi9C,EAAQztC,MAAQ,EAAc,UAAV6a,EAAoB4yB,EAAQj9C,EAAIi9C,EAAQztC,MAAQoR,EAAQnb,MAAQw3C,EAAQj9C,EAAI4gB,EAAQjb,IACpJ,CACC,SAAS85C,GAAwBvxB,GAC9B,OAAOsuB,GAAa,GAAIG,GAAczuB,GAC1C,CAQA,SAASwxB,GAAkBntD,EAAWiU,GAClC,MAAMwT,EAAWxT,GAAWA,EAAQ3G,SAAW2G,EAAQ3G,QAAQo9C,SAAWz2C,EAAQ3G,QAAQo9C,QAAQ1qD,UAClG,OAAOynB,EAAWznB,EAAUynB,SAASA,GAAYznB,CACrD,CACA,MAAMotD,GAAmB,CACrBC,YAAa,KACb,KAAA5wB,CAAO6wB,GACH,GAAIA,EAAajsD,OAAS,EAAG,CACzB,MAAMC,EAAOgsD,EAAa,GACpBt8C,EAAS1P,EAAK1B,MAAM+O,KAAKqC,OACzBu8C,EAAav8C,EAASA,EAAO3P,OAAS,EAC5C,GAAIjC,MAAQA,KAAK8H,SAAiC,YAAtB9H,KAAK8H,QAAQ+B,KACrC,OAAO3H,EAAKgM,QAAQsF,OAAS,GAC1B,GAAItR,EAAKsR,MACZ,OAAOtR,EAAKsR,MACT,GAAI26C,EAAa,GAAKjsD,EAAK6S,UAAYo5C,EAC1C,OAAOv8C,EAAO1P,EAAK6S,UAE3B,CACA,MAAO,EACX,EACAq5C,WAAY,KACZjC,WAAY,KACZkC,YAAa,KACb,KAAA76C,CAAO86C,GACH,GAAItuD,MAAQA,KAAK8H,SAAiC,YAAtB9H,KAAK8H,QAAQ+B,KACrC,OAAOykD,EAAY96C,MAAQ,KAAO86C,EAAYlD,gBAAkBkD,EAAYlD,eAEhF,IAAI53C,EAAQ86C,EAAYpgD,QAAQsF,OAAS,GACrCA,IACAA,GAAS,MAEb,MAAM7K,EAAQ2lD,EAAYlD,eAI1B,OAHK,OAAcziD,KACf6K,GAAS7K,GAEN6K,CACX,EACA,UAAA+6C,CAAYD,GACR,MACMxmD,EADOwmD,EAAY9tD,MAAMiP,eAAe6+C,EAAYxkD,cACrCiB,WAAW2J,SAAS45C,EAAYv5C,WACrD,MAAO,CACHuH,YAAaxU,EAAQwU,YACrBF,gBAAiBtU,EAAQsU,gBACzBK,YAAa3U,EAAQ2U,YACrB4kB,WAAYv5B,EAAQu5B,WACpBE,iBAAkBz5B,EAAQy5B,iBAC1ByT,aAAc,EAEtB,EACA,cAAAwZ,GACI,OAAOxuD,KAAK8H,QAAQ2mD,SACxB,EACA,eAAAC,CAAiBJ,GACb,MACMxmD,EADOwmD,EAAY9tD,MAAMiP,eAAe6+C,EAAYxkD,cACrCiB,WAAW2J,SAAS45C,EAAYv5C,WACrD,MAAO,CACHgH,WAAYjU,EAAQiU,WACpBZ,SAAUrT,EAAQqT,SAE1B,EACAwzC,WAAY,KACZvC,UAAW,KACXwC,aAAc,KACdpD,OAAQ,KACRqD,YAAa,MAEhB,SAASC,GAA2BluD,EAAW4a,EAAM7O,EAAKi7B,GACvD,MAAMxe,EAASxoB,EAAU4a,GAAM/Z,KAAKkL,EAAKi7B,GACzC,MAAsB,qBAAXxe,EACA4kC,GAAiBxyC,GAAM/Z,KAAKkL,EAAKi7B,GAErCxe,CACX,CACA,MAAM2lC,WAAgBz5B,GACrB7oB,mBAAqB89C,GAClB,WAAAxqD,CAAY8G,GACRiW,QACA9c,KAAKgvD,QAAU,EACfhvD,KAAKqC,QAAU,GACfrC,KAAKivD,oBAAiB3uD,EACtBN,KAAKkvD,WAAQ5uD,EACbN,KAAKmvD,uBAAoB7uD,EACzBN,KAAKovD,cAAgB,GACrBpvD,KAAKiI,iBAAc3H,EACnBN,KAAKuN,cAAWjN,EAChBN,KAAKQ,MAAQqG,EAAOrG,MACpBR,KAAK8H,QAAUjB,EAAOiB,QACtB9H,KAAKqvD,gBAAa/uD,EAClBN,KAAKq9B,WAAQ/8B,EACbN,KAAKmsD,gBAAa7rD,EAClBN,KAAKurD,UAAOjrD,EACZN,KAAKosD,eAAY9rD,EACjBN,KAAKwrD,YAASlrD,EACdN,KAAKgtD,YAAS1sD,EACdN,KAAK8sD,YAASxsD,EACdN,KAAKqO,OAAI/N,EACTN,KAAKsO,OAAIhO,EACTN,KAAK8d,YAASxd,EACdN,KAAK6d,WAAQvd,EACbN,KAAKsvD,YAAShvD,EACdN,KAAKuvD,YAASjvD,EACdN,KAAKwvD,iBAAclvD,EACnBN,KAAKyvD,sBAAmBnvD,EACxBN,KAAK0vD,qBAAkBpvD,CAC3B,CACA,UAAAqN,CAAW7F,GACP9H,KAAK8H,QAAUA,EACf9H,KAAKmvD,uBAAoB7uD,EACzBN,KAAKuN,cAAWjN,CACpB,CACH,kBAAAuV,GACO,MAAMvJ,EAAStM,KAAKmvD,kBACpB,GAAI7iD,EACA,OAAOA,EAEX,MAAM9L,EAAQR,KAAKQ,MACbsH,EAAU9H,KAAK8H,QAAQiyB,WAAW/5B,KAAKiR,cACvCjI,EAAOlB,EAAQ0uB,SAAWh2B,EAAMsH,QAAQT,WAAaS,EAAQK,WAC7DA,EAAa,IAAIvB,EAAW5G,KAAKQ,MAAOwI,GAI9C,OAHIA,EAAKgN,aACLhW,KAAKmvD,kBAAoBjoD,OAAO0O,OAAOzN,IAEpCA,CACX,CACH,UAAA8I,GACO,OAAOjR,KAAKuN,WAAavN,KAAKuN,UArIRuH,EAqIwC9U,KAAKQ,MAAMyQ,aArI3Cq6C,EAqIyDtrD,KArIhDkuD,EAqIsDluD,KAAKovD,eApI/F,OAAct6C,EAAQ,CACzBw2C,UACA4C,eACAvtD,KAAM,cAJd,IAA8BmU,EAAQw2C,EAAS4C,CAsI3C,CACA,QAAAyB,CAAS96C,EAAS/M,GACd,MAAM,UAAElH,GAAekH,EACjBmmD,EAAca,GAA2BluD,EAAW,cAAeZ,KAAM6U,GACzEwoB,EAAQyxB,GAA2BluD,EAAW,QAASZ,KAAM6U,GAC7Du5C,EAAaU,GAA2BluD,EAAW,aAAcZ,KAAM6U,GAC7E,IAAIo3C,EAAQ,GAIZ,OAHAA,EAAQpB,GAAaoB,EAAOjB,GAAciD,IAC1ChC,EAAQpB,GAAaoB,EAAOjB,GAAc3tB,IAC1C4uB,EAAQpB,GAAaoB,EAAOjB,GAAcoD,IACnCnC,CACX,CACA,aAAA2D,CAAc1B,EAAcpmD,GACxB,OAAOgmD,GAAwBgB,GAA2BhnD,EAAQlH,UAAW,aAAcZ,KAAMkuD,GACrG,CACA,OAAA2B,CAAQ3B,EAAcpmD,GAClB,MAAM,UAAElH,GAAekH,EACjBgoD,EAAY,GAalB,OAZA,OAAK5B,EAAer5C,IAChB,MAAMk3C,EAAW,CACbC,OAAQ,GACRC,MAAO,GACPC,MAAO,IAEL6D,EAAShC,GAAkBntD,EAAWiU,GAC5Cg2C,GAAakB,EAASC,OAAQhB,GAAc8D,GAA2BiB,EAAQ,cAAe/vD,KAAM6U,KACpGg2C,GAAakB,EAASE,MAAO6C,GAA2BiB,EAAQ,QAAS/vD,KAAM6U,IAC/Eg2C,GAAakB,EAASG,MAAOlB,GAAc8D,GAA2BiB,EAAQ,aAAc/vD,KAAM6U,KAClGi7C,EAAU5sD,KAAK6oD,KAEZ+D,CACX,CACA,YAAAE,CAAa9B,EAAcpmD,GACvB,OAAOgmD,GAAwBgB,GAA2BhnD,EAAQlH,UAAW,YAAaZ,KAAMkuD,GACpG,CACA,SAAA+B,CAAU/B,EAAcpmD,GACpB,MAAM,UAAElH,GAAekH,EACjB8mD,EAAeE,GAA2BluD,EAAW,eAAgBZ,KAAMkuD,GAC3E1C,EAASsD,GAA2BluD,EAAW,SAAUZ,KAAMkuD,GAC/DW,EAAcC,GAA2BluD,EAAW,cAAeZ,KAAMkuD,GAC/E,IAAIjC,EAAQ,GAIZ,OAHAA,EAAQpB,GAAaoB,EAAOjB,GAAc4D,IAC1C3C,EAAQpB,GAAaoB,EAAOjB,GAAcQ,IAC1CS,EAAQpB,GAAaoB,EAAOjB,GAAc6D,IACnC5C,CACX,CACH,YAAAiE,CAAapoD,GACN,MAAM7B,EAASjG,KAAKqC,QACdkN,EAAOvP,KAAKQ,MAAM+O,KAClBigD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACIvtD,EAAG60B,EADHk3B,EAAe,GAEnB,IAAI/rD,EAAI,EAAG60B,EAAM/wB,EAAOhE,OAAQE,EAAI60B,IAAO70B,EACvC+rD,EAAahrD,KAAKioD,GAAkBnrD,KAAKQ,MAAOyF,EAAO9D,KAkB3D,OAhBI2F,EAAQkE,SACRkiD,EAAeA,EAAaliD,OAAO,CAACyI,EAASjL,EAAOwiB,IAAQlkB,EAAQkE,OAAOyI,EAASjL,EAAOwiB,EAAOzc,KAElGzH,EAAQqoD,WACRjC,EAAeA,EAAax1C,KAAK,CAACC,EAAG/E,IAAI9L,EAAQqoD,SAASx3C,EAAG/E,EAAGrE,MAEpE,OAAK2+C,EAAer5C,IAChB,MAAMk7C,EAAShC,GAAkBjmD,EAAQlH,UAAWiU,GACpD26C,EAAYtsD,KAAK4rD,GAA2BiB,EAAQ,aAAc/vD,KAAM6U,IACxE46C,EAAiBvsD,KAAK4rD,GAA2BiB,EAAQ,kBAAmB/vD,KAAM6U,IAClF66C,EAAgBxsD,KAAK4rD,GAA2BiB,EAAQ,iBAAkB/vD,KAAM6U,MAEpF7U,KAAKwvD,YAAcA,EACnBxvD,KAAKyvD,iBAAmBA,EACxBzvD,KAAK0vD,gBAAkBA,EACvB1vD,KAAKqvD,WAAanB,EACXA,CACX,CACA,MAAAhoD,CAAO2oB,EAASmlB,GACZ,MAAMlsC,EAAU9H,KAAK8H,QAAQiyB,WAAW/5B,KAAKiR,cACvChL,EAASjG,KAAKqC,QACpB,IAAIqF,EACAwmD,EAAe,GACnB,GAAKjoD,EAAOhE,OAML,CACH,MAAM6nB,EAAWygC,GAAYziD,EAAQgiB,UAAUroB,KAAKzB,KAAMiG,EAAQjG,KAAKivD,gBACvEf,EAAeluD,KAAKkwD,aAAapoD,GACjC9H,KAAKq9B,MAAQr9B,KAAK2vD,SAASzB,EAAcpmD,GACzC9H,KAAKmsD,WAAansD,KAAK4vD,cAAc1B,EAAcpmD,GACnD9H,KAAKurD,KAAOvrD,KAAK6vD,QAAQ3B,EAAcpmD,GACvC9H,KAAKosD,UAAYpsD,KAAKgwD,aAAa9B,EAAcpmD,GACjD9H,KAAKwrD,OAASxrD,KAAKiwD,UAAU/B,EAAcpmD,GAC3C,MAAMc,EAAO5I,KAAKkvD,MAAQ7D,GAAerrD,KAAM8H,GACzCsoD,EAAkBlpD,OAAOc,OAAO,CAAC,EAAG8hB,EAAUlhB,GAC9C4kD,EAAYH,GAAmBrtD,KAAKQ,MAAOsH,EAASsoD,GACpDC,EAAkB9C,GAAmBzlD,EAASsoD,EAAiB5C,EAAWxtD,KAAKQ,OACrFR,KAAKgtD,OAASQ,EAAUR,OACxBhtD,KAAK8sD,OAASU,EAAUV,OACxBplD,EAAa,CACTsnD,QAAS,EACT3gD,EAAGgiD,EAAgBhiD,EACnBC,EAAG+hD,EAAgB/hD,EACnBuP,MAAOjV,EAAKiV,MACZC,OAAQlV,EAAKkV,OACbwxC,OAAQxlC,EAASzb,EACjBkhD,OAAQzlC,EAASxb,EAEzB,MA5ByB,IAAjBtO,KAAKgvD,UACLtnD,EAAa,CACTsnD,QAAS,IA2BrBhvD,KAAKovD,cAAgBlB,EACrBluD,KAAKuN,cAAWjN,EACZoH,GACA1H,KAAK6V,qBAAqB3P,OAAOlG,KAAM0H,GAEvCmnB,GAAW/mB,EAAQwoD,UACnBxoD,EAAQwoD,SAAS7uD,KAAKzB,KAAM,CACxBQ,MAAOR,KAAKQ,MACZ8qD,QAAStrD,KACTg0C,UAGZ,CACA,SAAAuc,CAAUC,EAAc7jD,EAAK/D,EAAMd,GAC/B,MAAM2oD,EAAgBzwD,KAAK0wD,iBAAiBF,EAAc5nD,EAAMd,GAChE6E,EAAIo3B,OAAO0sB,EAAc9vB,GAAI8vB,EAAc7vB,IAC3Cj0B,EAAIo3B,OAAO0sB,EAAc5vB,GAAI4vB,EAAc3vB,IAC3Cn0B,EAAIo3B,OAAO0sB,EAAcE,GAAIF,EAAcG,GAC/C,CACA,gBAAAF,CAAiBF,EAAc5nD,EAAMd,GACjC,MAAM,OAAEklD,EAAO,OAAEF,GAAY9sD,MACvB,UAAEktD,EAAU,aAAEO,GAAkB3lD,GAChC,QAAE0zC,EAAQ,SAAEC,EAAS,WAAEC,EAAW,YAAEC,IAAiB,QAAc8R,IACjEp/C,EAAGwiD,EAAMviD,EAAGwiD,GAASN,GACvB,MAAE3yC,EAAM,OAAEC,GAAYlV,EAC5B,IAAI+3B,EAAIE,EAAI8vB,EAAI/vB,EAAIE,EAAI8vB,EAoCxB,MAnCe,WAAX9D,GACAhsB,EAAKgwB,EAAMhzC,EAAS,EACL,SAAXkvC,GACArsB,EAAKkwB,EACLhwB,EAAKF,EAAKusB,EACVtsB,EAAKE,EAAKosB,EACV0D,EAAK9vB,EAAKosB,IAEVvsB,EAAKkwB,EAAMhzC,EACXgjB,EAAKF,EAAKusB,EACVtsB,EAAKE,EAAKosB,EACV0D,EAAK9vB,EAAKosB,GAEdyD,EAAKhwB,IAGDE,EADW,SAAXmsB,EACK6D,EAAMzvD,KAAKoC,IAAIg4C,EAASE,GAAcwR,EACzB,UAAXF,EACF6D,EAAMhzC,EAAQzc,KAAKoC,IAAIi4C,EAAUE,GAAeuR,EAEhDltD,KAAKsvD,OAEC,QAAXxC,GACAlsB,EAAKkwB,EACLhwB,EAAKF,EAAKssB,EACVvsB,EAAKE,EAAKqsB,EACVyD,EAAK9vB,EAAKqsB,IAEVtsB,EAAKkwB,EAAMhzC,EACXgjB,EAAKF,EAAKssB,EACVvsB,EAAKE,EAAKqsB,EACVyD,EAAK9vB,EAAKqsB,GAEd0D,EAAKhwB,GAEF,CACHD,KACAE,KACA8vB,KACA/vB,KACAE,KACA8vB,KAER,CACA,SAAAtsB,CAAUysB,EAAIpkD,EAAK7E,GACf,MAAMu1B,EAAQr9B,KAAKq9B,MACbp7B,EAASo7B,EAAMp7B,OACrB,IAAI4mD,EAAWwD,EAAclqD,EAC7B,GAAIF,EAAQ,CACR,MAAMylD,GAAY,QAAc5/C,EAAQ2/C,IAAKznD,KAAKqO,EAAGrO,KAAK6d,OAQ1D,IAPAkzC,EAAG1iD,EAAIw/C,GAAY7tD,KAAM8H,EAAQ2wB,WAAY3wB,GAC7C6E,EAAIo1B,UAAY2lB,EAAU3lB,UAAUj6B,EAAQ2wB,YAC5C9rB,EAAIu1B,aAAe,SACnB2mB,GAAY,QAAO/gD,EAAQ+gD,WAC3BwD,EAAevkD,EAAQukD,aACvB1/C,EAAIwP,UAAYrU,EAAQkpD,WACxBrkD,EAAI4rB,KAAOswB,EAAU5pB,OACjB98B,EAAI,EAAGA,EAAIF,IAAUE,EACrBwK,EAAIi8C,SAASvrB,EAAMl7B,GAAIulD,EAAUr5C,EAAE0iD,EAAG1iD,GAAI0iD,EAAGziD,EAAIu6C,EAAUrwB,WAAa,GACxEu4B,EAAGziD,GAAKu6C,EAAUrwB,WAAa6zB,EAC3BlqD,EAAI,IAAMF,IACV8uD,EAAGziD,GAAKxG,EAAQwkD,kBAAoBD,EAGhD,CACJ,CACH,aAAA4E,CAActkD,EAAKokD,EAAI5uD,EAAGulD,EAAW5/C,GAC9B,MAAMymD,EAAavuD,KAAKwvD,YAAYrtD,GAC9BusD,EAAkB1uD,KAAKyvD,iBAAiBttD,IACxC,UAAEkjD,EAAU,SAAEC,GAAcx9C,EAC5B2jD,GAAW,QAAO3jD,EAAQ2jD,UAC1ByF,EAASrD,GAAY7tD,KAAM,OAAQ8H,GACnCqpD,EAAYzJ,EAAUr5C,EAAE6iD,GACxBE,EAAU/L,EAAYoG,EAASjzB,YAAcizB,EAASjzB,WAAa6sB,GAAa,EAAI,EACpFgM,EAASN,EAAGziD,EAAI8iD,EACtB,GAAItpD,EAAQy9C,cAAe,CACvB,MAAM8C,EAAc,CAChBhtC,OAAQja,KAAKC,IAAIikD,EAAUD,GAAa,EACxCtpC,WAAY2yC,EAAgB3yC,WAC5BZ,SAAUuzC,EAAgBvzC,SAC1BsB,YAAa,GAEXuD,EAAU0nC,EAAUE,WAAWuJ,EAAW7L,GAAYA,EAAW,EACjErlC,EAAUoxC,EAAShM,EAAY,EACrC14C,EAAI0P,YAAcvU,EAAQwpD,mBAC1B3kD,EAAIwP,UAAYrU,EAAQwpD,oBACxB,QAAU3kD,EAAK07C,EAAaroC,EAASC,GACrCtT,EAAI0P,YAAckyC,EAAWjyC,YAC7B3P,EAAIwP,UAAYoyC,EAAWnyC,iBAC3B,QAAUzP,EAAK07C,EAAaroC,EAASC,EACzC,KAAO,CACHtT,EAAI6P,WAAY,IAAAra,GAASosD,EAAW9xC,aAAerb,KAAKoC,OAAO0D,OAAOU,OAAO2mD,EAAW9xC,cAAgB8xC,EAAW9xC,aAAe,EAClI9P,EAAI0P,YAAckyC,EAAWjyC,YAC7B3P,EAAIg3B,YAAY4qB,EAAWltB,YAAc,IACzC10B,EAAIi3B,eAAiB2qB,EAAWhtB,kBAAoB,EACpD,MAAMgwB,EAAS7J,EAAUE,WAAWuJ,EAAW7L,GACzCkM,EAAS9J,EAAUE,WAAWF,EAAUa,MAAM4I,EAAW,GAAI7L,EAAW,GACxEtQ,GAAe,QAAcuZ,EAAWvZ,cAC1C9tC,OAAOU,OAAOotC,GAAc1L,KAAM76B,GAAU,IAANA,IACtC9B,EAAIk3B,YACJl3B,EAAIwP,UAAYrU,EAAQwpD,oBACxB,QAAmB3kD,EAAK,CACpB0B,EAAGkjD,EACHjjD,EAAG+iD,EACHrjC,EAAGs3B,EACHp3B,EAAGm3B,EACHhqC,OAAQ25B,IAEZroC,EAAIoB,OACJpB,EAAIq3B,SACJr3B,EAAIwP,UAAYoyC,EAAWnyC,gBAC3BzP,EAAIk3B,aACJ,QAAmBl3B,EAAK,CACpB0B,EAAGmjD,EACHljD,EAAG+iD,EAAS,EACZrjC,EAAGs3B,EAAW,EACdp3B,EAAGm3B,EAAY,EACfhqC,OAAQ25B,IAEZroC,EAAIoB,SAEJpB,EAAIwP,UAAYrU,EAAQwpD,mBACxB3kD,EAAI02B,SAASkuB,EAAQF,EAAQ/L,EAAUD,GACvC14C,EAAI8kD,WAAWF,EAAQF,EAAQ/L,EAAUD,GACzC14C,EAAIwP,UAAYoyC,EAAWnyC,gBAC3BzP,EAAI02B,SAASmuB,EAAQH,EAAS,EAAG/L,EAAW,EAAGD,EAAY,GAEnE,CACA14C,EAAIwP,UAAYnc,KAAK0vD,gBAAgBvtD,EACzC,CACA,QAAAuvD,CAASX,EAAIpkD,EAAK7E,GACd,MAAM,KAAEyjD,GAAUvrD,MACZ,YAAEwsD,EAAY,UAAEmF,EAAU,cAAEpF,EAAc,UAAElH,EAAU,SAAEC,EAAS,WAAE93B,GAAgB1lB,EACnF2jD,GAAW,QAAO3jD,EAAQ2jD,UAChC,IAAImG,EAAiBnG,EAASjzB,WAC1Bq5B,EAAe,EACnB,MAAMnK,GAAY,QAAc5/C,EAAQ2/C,IAAKznD,KAAKqO,EAAGrO,KAAK6d,OACpDi0C,EAAiB,SAASrrC,GAC5B9Z,EAAIi8C,SAASniC,EAAMihC,EAAUr5C,EAAE0iD,EAAG1iD,EAAIwjD,GAAed,EAAGziD,EAAIsjD,EAAiB,GAC7Eb,EAAGziD,GAAKsjD,EAAiBpF,CAC7B,EACMuF,EAA0BrK,EAAU3lB,UAAU4vB,GACpD,IAAI5F,EAAUiG,EAAW/F,EAAO9pD,EAAG8nB,EAAG1gB,EAAMm1B,EAQ5C,IAPA/xB,EAAIo1B,UAAY4vB,EAChBhlD,EAAIu1B,aAAe,SACnBv1B,EAAI4rB,KAAOkzB,EAASxsB,OACpB8xB,EAAG1iD,EAAIw/C,GAAY7tD,KAAM+xD,EAAyBjqD,GAClD6E,EAAIwP,UAAYrU,EAAQ2mD,WACxB,OAAKzuD,KAAKmsD,WAAY2F,GACtBD,EAAetF,GAA6C,UAA5BwF,EAAoD,WAAdJ,EAAyBrM,EAAW,EAAI93B,EAAa83B,EAAW,EAAI93B,EAAa,EACnJrrB,EAAI,EAAGoH,EAAOgiD,EAAKtpD,OAAQE,EAAIoH,IAAQpH,EAAE,CAUzC,IATA4pD,EAAWR,EAAKppD,GAChB6vD,EAAYhyD,KAAK0vD,gBAAgBvtD,GACjCwK,EAAIwP,UAAY61C,GAChB,OAAKjG,EAASC,OAAQ8F,GACtB7F,EAAQF,EAASE,MACbM,GAAiBN,EAAMhqD,SACvBjC,KAAKixD,cAActkD,EAAKokD,EAAI5uD,EAAGulD,EAAW5/C,GAC1C8pD,EAAiBxwD,KAAKoC,IAAIioD,EAASjzB,WAAY6sB,IAE/Cp7B,EAAI,EAAGyU,EAAOutB,EAAMhqD,OAAQgoB,EAAIyU,IAAQzU,EACxC6nC,EAAe7F,EAAMhiC,IACrB2nC,EAAiBnG,EAASjzB,YAE9B,OAAKuzB,EAASG,MAAO4F,EACzB,CACAD,EAAe,EACfD,EAAiBnG,EAASjzB,YAC1B,OAAKx4B,KAAKosD,UAAW0F,GACrBf,EAAGziD,GAAKk+C,CACZ,CACA,UAAAyF,CAAWlB,EAAIpkD,EAAK7E,GAChB,MAAM0jD,EAASxrD,KAAKwrD,OACdvpD,EAASupD,EAAOvpD,OACtB,IAAIypD,EAAYvpD,EAChB,GAAIF,EAAQ,CACR,MAAMylD,GAAY,QAAc5/C,EAAQ2/C,IAAKznD,KAAKqO,EAAGrO,KAAK6d,OAQ1D,IAPAkzC,EAAG1iD,EAAIw/C,GAAY7tD,KAAM8H,EAAQoqD,YAAapqD,GAC9CipD,EAAGziD,GAAKxG,EAAQ2kD,gBAChB9/C,EAAIo1B,UAAY2lB,EAAU3lB,UAAUj6B,EAAQoqD,aAC5CvlD,EAAIu1B,aAAe,SACnBwpB,GAAa,QAAO5jD,EAAQ4jD,YAC5B/+C,EAAIwP,UAAYrU,EAAQqqD,YACxBxlD,EAAI4rB,KAAOmzB,EAAWzsB,OAClB98B,EAAI,EAAGA,EAAIF,IAAUE,EACrBwK,EAAIi8C,SAAS4C,EAAOrpD,GAAIulD,EAAUr5C,EAAE0iD,EAAG1iD,GAAI0iD,EAAGziD,EAAIo9C,EAAWlzB,WAAa,GAC1Eu4B,EAAGziD,GAAKo9C,EAAWlzB,WAAa1wB,EAAQ4kD,aAEhD,CACJ,CACA,cAAAvpB,CAAe4tB,EAAIpkD,EAAKylD,EAAatqD,GACjC,MAAM,OAAEklD,EAAO,OAAEF,GAAY9sD,MACvB,EAAEqO,EAAE,EAAEC,GAAOyiD,GACb,MAAElzC,EAAM,OAAEC,GAAYs0C,GACtB,QAAE5W,EAAQ,SAAEC,EAAS,WAAEC,EAAW,YAAEC,IAAiB,QAAc7zC,EAAQ2lD,cACjF9gD,EAAIwP,UAAYrU,EAAQsU,gBACxBzP,EAAI0P,YAAcvU,EAAQwU,YAC1B3P,EAAI6P,UAAY1U,EAAQ2U,YACxB9P,EAAIk3B,YACJl3B,EAAIm3B,OAAOz1B,EAAImtC,EAASltC,GACT,QAAXw+C,GACA9sD,KAAKuwD,UAAUQ,EAAIpkD,EAAKylD,EAAatqD,GAEzC6E,EAAIo3B,OAAO11B,EAAIwP,EAAQ49B,EAAUntC,GACjC3B,EAAI0lD,iBAAiBhkD,EAAIwP,EAAOvP,EAAGD,EAAIwP,EAAOvP,EAAImtC,GACnC,WAAXqR,GAAkC,UAAXE,GACvBhtD,KAAKuwD,UAAUQ,EAAIpkD,EAAKylD,EAAatqD,GAEzC6E,EAAIo3B,OAAO11B,EAAIwP,EAAOvP,EAAIwP,EAAS69B,GACnChvC,EAAI0lD,iBAAiBhkD,EAAIwP,EAAOvP,EAAIwP,EAAQzP,EAAIwP,EAAQ89B,EAAartC,EAAIwP,GAC1D,WAAXgvC,GACA9sD,KAAKuwD,UAAUQ,EAAIpkD,EAAKylD,EAAatqD,GAEzC6E,EAAIo3B,OAAO11B,EAAIqtC,EAAYptC,EAAIwP,GAC/BnR,EAAI0lD,iBAAiBhkD,EAAGC,EAAIwP,EAAQzP,EAAGC,EAAIwP,EAAS49B,GACrC,WAAXoR,GAAkC,SAAXE,GACvBhtD,KAAKuwD,UAAUQ,EAAIpkD,EAAKylD,EAAatqD,GAEzC6E,EAAIo3B,OAAO11B,EAAGC,EAAIktC,GAClB7uC,EAAI0lD,iBAAiBhkD,EAAGC,EAAGD,EAAImtC,EAASltC,GACxC3B,EAAIyqC,YACJzqC,EAAIoB,OACAjG,EAAQ2U,YAAc,GACtB9P,EAAIq3B,QAEZ,CACH,sBAAAsuB,CAAuBxqD,GAChB,MAAMtH,EAAQR,KAAKQ,MACbC,EAAQT,KAAKiI,YACbsqD,EAAQ9xD,GAASA,EAAM4N,EACvBmkD,EAAQ/xD,GAASA,EAAM6N,EAC7B,GAAIikD,GAASC,EAAO,CAChB,MAAM1oC,EAAWygC,GAAYziD,EAAQgiB,UAAUroB,KAAKzB,KAAMA,KAAKqC,QAASrC,KAAKivD,gBAC7E,IAAKnlC,EACD,OAEJ,MAAMlhB,EAAO5I,KAAKkvD,MAAQ7D,GAAerrD,KAAM8H,GACzCsoD,EAAkBlpD,OAAOc,OAAO,CAAC,EAAG8hB,EAAU9pB,KAAKkvD,OACnD1B,EAAYH,GAAmB7sD,EAAOsH,EAASsoD,GAC/ClqC,EAAQqnC,GAAmBzlD,EAASsoD,EAAiB5C,EAAWhtD,GAClE+xD,EAAMxsD,MAAQmgB,EAAM7X,GAAKmkD,EAAMzsD,MAAQmgB,EAAM5X,IAC7CtO,KAAKgtD,OAASQ,EAAUR,OACxBhtD,KAAK8sD,OAASU,EAAUV,OACxB9sD,KAAK6d,MAAQjV,EAAKiV,MAClB7d,KAAK8d,OAASlV,EAAKkV,OACnB9d,KAAKsvD,OAASxlC,EAASzb,EACvBrO,KAAKuvD,OAASzlC,EAASxb,EACvBtO,KAAK6V,qBAAqB3P,OAAOlG,KAAMkmB,GAE/C,CACJ,CACH,WAAAusC,GACO,QAASzyD,KAAKgvD,OAClB,CACA,IAAA5sD,CAAKuK,GACD,MAAM7E,EAAU9H,KAAK8H,QAAQiyB,WAAW/5B,KAAKiR,cAC7C,IAAI+9C,EAAUhvD,KAAKgvD,QACnB,IAAKA,EACD,OAEJhvD,KAAKsyD,uBAAuBxqD,GAC5B,MAAMsqD,EAAc,CAChBv0C,MAAO7d,KAAK6d,MACZC,OAAQ9d,KAAK8d,QAEXizC,EAAK,CACP1iD,EAAGrO,KAAKqO,EACRC,EAAGtO,KAAKsO,GAEZ0gD,EAAU5tD,KAAK4X,IAAIg2C,GAAW,KAAO,EAAIA,EACzC,MAAM//B,GAAU,OAAUnnB,EAAQmnB,SAC5ByjC,EAAoB1yD,KAAKq9B,MAAMp7B,QAAUjC,KAAKmsD,WAAWlqD,QAAUjC,KAAKurD,KAAKtpD,QAAUjC,KAAKosD,UAAUnqD,QAAUjC,KAAKwrD,OAAOvpD,OAC9H6F,EAAQ0uB,SAAWk8B,IACnB/lD,EAAIy2B,OACJz2B,EAAIgmD,YAAc3D,EAClBhvD,KAAKmjC,eAAe4tB,EAAIpkD,EAAKylD,EAAatqD,IAC1C,QAAsB6E,EAAK7E,EAAQmgD,eACnC8I,EAAGziD,GAAK2gB,EAAQpb,IAChB7T,KAAKskC,UAAUysB,EAAIpkD,EAAK7E,GACxB9H,KAAK0xD,SAASX,EAAIpkD,EAAK7E,GACvB9H,KAAKiyD,WAAWlB,EAAIpkD,EAAK7E,IACzB,QAAqB6E,EAAK7E,EAAQmgD,eAClCt7C,EAAI22B,UAEZ,CACH,iBAAAqQ,GACO,OAAO3zC,KAAKqC,SAAW,EAC3B,CACH,iBAAAuxC,CAAkBC,EAAgB6W,GAC3B,MAAM5W,EAAa9zC,KAAKqC,QAClB4D,EAAS4tC,EAAe73B,IAAI,EAAGlS,eAAeN,YAChD,MAAMW,EAAOnK,KAAKQ,MAAMiP,eAAe3F,GACvC,IAAKK,EACD,MAAM,IAAIge,MAAM,kCAAoCre,GAExD,MAAO,CACHA,eACA2K,QAAStK,EAAKoF,KAAK/F,GACnBA,WAGFqlB,IAAW,QAAeilB,EAAY7tC,GACtC2sD,EAAkB5yD,KAAK6yD,iBAAiB5sD,EAAQykD,IAClD77B,GAAW+jC,KACX5yD,KAAKqC,QAAU4D,EACfjG,KAAKivD,eAAiBvE,EACtB1qD,KAAK8yD,qBAAsB,EAC3B9yD,KAAKkG,QAAO,GAEpB,CACH,WAAAijD,CAAY/jD,EAAG4uC,EAAQK,GAAc,GAC9B,GAAIL,GAAUh0C,KAAK8yD,oBACf,OAAO,EAEX9yD,KAAK8yD,qBAAsB,EAC3B,MAAMhrD,EAAU9H,KAAK8H,QACfgsC,EAAa9zC,KAAKqC,SAAW,GAC7B4D,EAASjG,KAAKw0C,mBAAmBpvC,EAAG0uC,EAAYE,EAAQK,GACxDue,EAAkB5yD,KAAK6yD,iBAAiB5sD,EAAQb,GAChDypB,EAAUmlB,KAAW,QAAe/tC,EAAQ6tC,IAAe8e,EAWjE,OAVI/jC,IACA7uB,KAAKqC,QAAU4D,GACX6B,EAAQ0uB,SAAW1uB,EAAQwoD,YAC3BtwD,KAAKivD,eAAiB,CAClB5gD,EAAGjJ,EAAEiJ,EACLC,EAAGlJ,EAAEkJ,GAETtO,KAAKkG,QAAO,EAAM8tC,KAGnBnlB,CACX,CACH,kBAAA2lB,CAAmBpvC,EAAG0uC,EAAYE,EAAQK,GACnC,MAAMvsC,EAAU9H,KAAK8H,QACrB,GAAe,aAAX1C,EAAEzE,KACF,MAAO,GAEX,IAAK0zC,EACD,OAAOP,EAAW9nC,OAAQ7J,GAAInC,KAAKQ,MAAM+O,KAAKC,SAASrN,EAAE2H,oBAA6FxJ,IAA5EN,KAAKQ,MAAMiP,eAAetN,EAAE2H,cAAciB,WAAWkH,UAAU9P,EAAEqH,QAE/I,MAAMvD,EAASjG,KAAKQ,MAAMmyC,0BAA0BvtC,EAAG0C,EAAQ+B,KAAM/B,EAASksC,GAI9E,OAHIlsC,EAAQmB,SACRhD,EAAOgD,UAEJhD,CACX,CACH,gBAAA4sD,CAAiB5sD,EAAQb,GAClB,MAAM,OAAEkqD,EAAO,OAAEC,EAAO,QAAEznD,GAAa9H,KACjC8pB,EAAWygC,GAAYziD,EAAQgiB,UAAUroB,KAAKzB,KAAMiG,EAAQb,GAClE,OAAoB,IAAb0kB,IAAuBwlC,IAAWxlC,EAASzb,GAAKkhD,IAAWzlC,EAASxb,EAC/E,EAEJ,IAAIykD,GAAiB,CACjBtnD,GAAI,UACJg+C,SAAUsF,GACVxE,eACA,SAAAyI,CAAWxyD,EAAO69C,EAAOv2C,GACjBA,IACAtH,EAAM8qD,QAAU,IAAIyD,GAAQ,CACxBvuD,QACAsH,YAGZ,EACA,YAAA0yB,CAAch6B,EAAO69C,EAAOv2C,GACpBtH,EAAM8qD,SACN9qD,EAAM8qD,QAAQ39C,WAAW7F,EAEjC,EACA,KAAA8H,CAAOpP,EAAO69C,EAAOv2C,GACbtH,EAAM8qD,SACN9qD,EAAM8qD,QAAQ39C,WAAW7F,EAEjC,EACA,SAAAmrD,CAAWzyD,GACP,MAAM8qD,EAAU9qD,EAAM8qD,QACtB,GAAIA,GAAWA,EAAQmH,cAAe,CAClC,MAAM96C,EAAO,CACT2zC,WAEJ,IAGO,IAHH9qD,EAAM47B,cAAc,oBAAqB,IACtCzkB,EACHgxB,YAAY,IAEZ,OAEJ2iB,EAAQlpD,KAAK5B,EAAMmM,KACnBnM,EAAM47B,cAAc,mBAAoBzkB,EAC5C,CACJ,EACA,UAAA+xC,CAAYlpD,EAAOmX,GACf,GAAInX,EAAM8qD,QAAS,CACf,MAAMnhC,EAAmBxS,EAAKq8B,OAC1BxzC,EAAM8qD,QAAQnC,YAAYxxC,EAAK3U,MAAOmnB,EAAkBxS,EAAK08B,eAC7D18B,EAAKkX,SAAU,EAEvB,CACJ,EACA6W,SAAU,CACNlP,SAAS,EACT85B,SAAU,KACVxmC,SAAU,UACV1N,gBAAiB,kBACjB40C,WAAY,OACZnI,UAAW,CACPloC,OAAQ,QAEZ0rC,aAAc,EACdC,kBAAmB,EACnB7zB,WAAY,OACZg2B,UAAW,OACXjC,YAAa,EACbf,SAAU,CAAC,EACXkG,UAAW,OACXQ,YAAa,OACbzF,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACR/qC,OAAQ,QAEZuxC,YAAa,OACbjjC,QAAS,EACTk+B,aAAc,EACdD,UAAW,EACXO,aAAc,EACdpI,UAAW,CAAC14C,EAAK3D,IAAOA,EAAKyiD,SAAS7iD,KACtC08C,SAAU,CAAC34C,EAAK3D,IAAOA,EAAKyiD,SAAS7iD,KACrC0oD,mBAAoB,OACpB/E,eAAe,EACf/+B,WAAY,EACZlR,YAAa,gBACbG,YAAa,EACbpV,UAAW,CACPtG,SAAU,IACVsE,OAAQ,gBAEZ8C,WAAY,CACR8S,QAAS,CACLta,KAAM,SACN+G,WAAY,CACR,IACA,IACA,QACA,SACA,SACA,WAGRsnD,QAAS,CACL3pD,OAAQ,SACRtE,SAAU,MAGlBH,UAAWotD,IAEfroB,cAAe,CACX8lB,SAAU,OACVC,WAAY,OACZ7C,UAAW,QAEfriB,YAAa,CACTjrB,YAAcC,GAAgB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACjEC,YAAY,EACZ7a,UAAW,CACP2a,aAAa,EACbE,YAAY,GAEhBpU,UAAW,CACP6rD,WAAW,GAEf/qD,WAAY,CACR+qD,UAAW,cAGnBjnB,uBAAwB,CACpB,gBAIJrwB,GAAuB1U,OAAO0O,OAAO,CACzCqM,UAAW,KACXkxC,OAAQhV,GACRiV,WAAYrU,GACZsU,OAAQ7pD,GACRk8C,OAAQ8D,GACR8J,SAAUhJ,GACVT,MAAOK,GACP6E,QAASgE,KAeT,SAASQ,GAAe3hD,EAAQoD,EAAKxL,EAAOgqD,GACxC,MAAM78B,EAAQ/kB,EAAO+R,QAAQ3O,GAC7B,IAAe,IAAX2hB,EACA,MAfY,EAAC/kB,EAAQoD,EAAKxL,EAAOgqD,KAClB,kBAARx+C,GACPxL,EAAQoI,EAAO1O,KAAK8R,GAAO,EAC3Bw+C,EAAYjR,QAAQ,CAChB/4C,QACAgK,MAAOwB,KAEJoL,MAAMpL,KACbxL,EAAQ,MAELA,GAKIiqD,CAAY7hD,EAAQoD,EAAKxL,EAAOgqD,GAG3C,OAAO78B,IADM/kB,EAAO8hD,YAAY1+C,GACRxL,EAAQmtB,CACpC,CAEA,SAASg9B,GAAkBhrD,GACvB,MAAMiJ,EAAS5R,KAAK6R,YACpB,OAAIlJ,GAAS,GAAKA,EAAQiJ,EAAO3P,OACtB2P,EAAOjJ,GAEXA,CACX,CAmMA,SAASirD,GAAkBjrD,EAAOkrD,GAAY,WAAE35C,EAAW,YAAEwiB,IACzD,MAAMo3B,GAAM,IAAAngD,GAAU+oB,GAChB7hB,GAASX,EAAa9Y,KAAKod,IAAIs1C,GAAO1yD,KAAKkd,IAAIw1C,KAAS,KACxD7xD,EAAS,IAAO4xD,GAAc,GAAKlrD,GAAO1G,OAChD,OAAOb,KAAKC,IAAIwyD,EAAah5C,EAAO5Y,EACxC,CACA,MAAM8xD,WAAwBn7B,GAC1B,WAAA74B,CAAY+E,GACRgY,MAAMhY,GACL9E,KAAKsB,WAAQhB,EACbN,KAAKkJ,SAAM5I,EACXN,KAAKg0D,iBAAc1zD,EACnBN,KAAKi0D,eAAY3zD,EAClBN,KAAKk0D,YAAc,CACvB,CACA,KAAA/iD,CAAM6D,EAAKxL,GACP,OAAI,OAAcwL,KAGE,kBAARA,GAAoBA,aAAepC,UAAYuhD,UAAUn/C,GAF1D,MAKHA,CACZ,CACA,sBAAAo/C,GACI,MAAM,YAAErzC,GAAiB/gB,KAAK8H,SACxB,WAAEmL,EAAW,WAAEC,GAAgBlT,KAAKmT,gBAC1C,IAAI,IAAE9R,EAAI,IAAEmC,GAASxD,KACrB,MAAMq0D,EAAU5lD,GAAIpN,EAAM4R,EAAa5R,EAAMoN,EACvC6lD,EAAU7lD,GAAIjL,EAAM0P,EAAa1P,EAAMiL,EAC7C,GAAIsS,EAAa,CACb,MAAMwzC,GAAU,IAAAtqD,GAAK5I,GACfmzD,GAAU,IAAAvqD,GAAKzG,GACjB+wD,EAAU,GAAKC,EAAU,EACzBF,EAAO,GACAC,EAAU,GAAKC,EAAU,GAChCH,EAAO,EAEf,CACA,GAAIhzD,IAAQmC,EAAK,CACb,IAAIgd,EAAiB,IAARhd,EAAY,EAAIpC,KAAK4X,IAAU,IAANxV,GACtC8wD,EAAO9wD,EAAMgd,GACRO,GACDszC,EAAOhzD,EAAMmf,EAErB,CACAxgB,KAAKqB,IAAMA,EACXrB,KAAKwD,IAAMA,CACf,CACA,YAAAixD,GACI,MAAM7+B,EAAW51B,KAAK8H,QAAQoR,MAC9B,IACIw7C,GADA,cAAEr+B,EAAc,SAAEs+B,GAAc/+B,EAepC,OAbI++B,GACAD,EAAWtzD,KAAKy1B,KAAK72B,KAAKwD,IAAMmxD,GAAYvzD,KAAKoE,MAAMxF,KAAKqB,IAAMszD,GAAY,EAC1ED,EAAW,MAEXA,EAAW,OAGfA,EAAW10D,KAAK40D,mBAChBv+B,EAAgBA,GAAiB,IAEjCA,IACAq+B,EAAWtzD,KAAKC,IAAIg1B,EAAeq+B,IAEhCA,CACX,CACH,gBAAAE,GACO,OAAOhiD,OAAOC,iBAClB,CACA,UAAAsoB,GACI,MAAMnyB,EAAOhJ,KAAK8H,QACZ8tB,EAAW5sB,EAAKkQ,MACtB,IAAIw7C,EAAW10D,KAAKy0D,eACpBC,EAAWtzD,KAAKoC,IAAI,EAAGkxD,GACvB,MAcMx7C,EA9Ld,SAAyB27C,EAAmBC,GACxC,MAAM57C,EAAQ,IAER,OAAEgiC,EAAO,KAAEja,EAAK,IAAE5/B,EAAI,IAAEmC,EAAI,UAAEuxD,EAAU,MAAE3jD,EAAM,SAAEsjD,EAAS,UAAEM,EAAU,cAAEC,GAAmBJ,EAC5FK,EAAOj0B,GAAQ,EACfk0B,EAAYT,EAAW,GACrBrzD,IAAK+zD,EAAO5xD,IAAK6xD,GAAUP,EAC7B7hD,IAAc,OAAc5R,GAC5B6R,IAAc,OAAc1P,GAC5B8xD,IAAgB,OAAclkD,GAC9ByiD,GAAcwB,EAAOD,IAASJ,EAAY,GAChD,IACI5wD,EAAQmxD,EAASC,EAASC,EAD1Bn6C,GAAU,SAAS+5C,EAAOD,GAAQD,EAAYD,GAAQA,EAE1D,GAAI55C,EAXgB,QAWUrI,IAAeC,EACzC,MAAO,CACH,CACIvK,MAAOysD,GAEX,CACIzsD,MAAO0sD,IAInBI,EAAYr0D,KAAKy1B,KAAKw+B,EAAO/5C,GAAWla,KAAKoE,MAAM4vD,EAAO95C,GACtDm6C,EAAYN,IACZ75C,GAAU,QAAQm6C,EAAYn6C,EAAU65C,EAAYD,GAAQA,IAE3D,OAAcH,KACf3wD,EAAShD,KAAK4pB,IAAI,GAAI+pC,GACtBz5C,EAAUla,KAAKy1B,KAAKvb,EAAUlX,GAAUA,GAE7B,UAAX82C,GACAqa,EAAUn0D,KAAKoE,MAAM4vD,EAAO95C,GAAWA,EACvCk6C,EAAUp0D,KAAKy1B,KAAKw+B,EAAO/5C,GAAWA,IAEtCi6C,EAAUH,EACVI,EAAUH,GAEVpiD,GAAcC,GAAc+tB,IAAQ,SAAaz9B,EAAMnC,GAAO4/B,EAAM3lB,EAAU,MAC9Em6C,EAAYr0D,KAAKi2B,MAAMj2B,KAAKC,KAAKmC,EAAMnC,GAAOia,EAASo5C,IACvDp5C,GAAW9X,EAAMnC,GAAOo0D,EACxBF,EAAUl0D,EACVm0D,EAAUhyD,GACH8xD,GACPC,EAAUtiD,EAAa5R,EAAMk0D,EAC7BC,EAAUtiD,EAAa1P,EAAMgyD,EAC7BC,EAAYrkD,EAAQ,EACpBkK,GAAWk6C,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAWj6C,EAE9Bm6C,GADA,QAAaA,EAAWr0D,KAAKi2B,MAAMo+B,GAAYn6C,EAAU,KAC7Cla,KAAKi2B,MAAMo+B,GAEXr0D,KAAKy1B,KAAK4+B,IAG9B,MAAMC,EAAgBt0D,KAAKoC,KAAI,QAAe8X,IAAU,QAAei6C,IACvEnxD,EAAShD,KAAK4pB,IAAI,IAAI,OAAc+pC,GAAaW,EAAgBX,GACjEQ,EAAUn0D,KAAKi2B,MAAMk+B,EAAUnxD,GAAUA,EACzCoxD,EAAUp0D,KAAKi2B,MAAMm+B,EAAUpxD,GAAUA,EACzC,IAAI6lB,EAAI,EAgBR,IAfIhX,IACIgiD,GAAiBM,IAAYl0D,GAC7B6X,EAAMhW,KAAK,CACPyF,MAAOtH,IAEPk0D,EAAUl0D,GACV4oB,KAEA,QAAa7oB,KAAKi2B,OAAOk+B,EAAUtrC,EAAI3O,GAAWlX,GAAUA,EAAQ/C,EAAKuyD,GAAkBvyD,EAAKwyD,EAAYgB,KAC5G5qC,KAEGsrC,EAAUl0D,GACjB4oB,KAGFA,EAAIwrC,IAAaxrC,EAAE,CACrB,MAAM0rC,EAAYv0D,KAAKi2B,OAAOk+B,EAAUtrC,EAAI3O,GAAWlX,GAAUA,EACjE,GAAI8O,GAAcyiD,EAAYnyD,EAC1B,MAEJ0V,EAAMhW,KAAK,CACPyF,MAAOgtD,GAEf,CAcA,OAbIziD,GAAc+hD,GAAiBO,IAAYhyD,EACvC0V,EAAMjX,SAAU,QAAaiX,EAAMA,EAAMjX,OAAS,GAAG0G,MAAOnF,EAAKowD,GAAkBpwD,EAAKqwD,EAAYgB,IACpG37C,EAAMA,EAAMjX,OAAS,GAAG0G,MAAQnF,EAEhC0V,EAAMhW,KAAK,CACPyF,MAAOnF,IAGP0P,GAAcsiD,IAAYhyD,GAClC0V,EAAMhW,KAAK,CACPyF,MAAO6sD,IAGRt8C,CACX,CA2FsB08C,CAdkB,CAC5BlB,WACAxZ,OAAQlyC,EAAKkyC,OACb75C,IAAK2H,EAAK3H,IACVmC,IAAKwF,EAAKxF,IACVuxD,UAAWn/B,EAASm/B,UACpB9zB,KAAMrL,EAAS++B,SACfvjD,MAAOwkB,EAASxkB,MAChB4jD,UAAWh1D,KAAK6kC,aAChB3qB,WAAYla,KAAK2iB,eACjB+Z,YAAa9G,EAAS8G,aAAe,EACrCu4B,eAA0C,IAA3Br/B,EAASq/B,eAEVj1D,KAAKm5B,QAAUn5B,MAajC,MAXoB,UAAhBgJ,EAAKkyC,SACL,QAAmBhiC,EAAOlZ,KAAM,SAEhCgJ,EAAKC,SACLiQ,EAAMjQ,UACNjJ,KAAKsB,MAAQtB,KAAKwD,IAClBxD,KAAKkJ,IAAMlJ,KAAKqB,MAEhBrB,KAAKsB,MAAQtB,KAAKqB,IAClBrB,KAAKkJ,IAAMlJ,KAAKwD,KAEb0V,CACX,CACH,SAAAlS,GACO,MAAMkS,EAAQlZ,KAAKkZ,MACnB,IAAI5X,EAAQtB,KAAKqB,IACb6H,EAAMlJ,KAAKwD,IAEf,GADAsZ,MAAM9V,YACFhH,KAAK8H,QAAQ0Y,QAAUtH,EAAMjX,OAAQ,CACrC,MAAMue,GAAUtX,EAAM5H,GAASF,KAAKoC,IAAI0V,EAAMjX,OAAS,EAAG,GAAK,EAC/DX,GAASkf,EACTtX,GAAOsX,CACX,CACAxgB,KAAKg0D,YAAc1yD,EACnBtB,KAAKi0D,UAAY/qD,EACjBlJ,KAAKk0D,YAAchrD,EAAM5H,CAC7B,CACA,gBAAAmS,CAAiB9K,GACb,OAAO,OAAaA,EAAO3I,KAAKQ,MAAMsH,QAAQuY,OAAQrgB,KAAK8H,QAAQoR,MAAMwP,OAC7E,EAGJ,MAAMmtC,WAAoB9B,GACtBtnD,UAAY,SACfA,gBAAkB,CACXyM,MAAO,CACHqjB,SAAU,KAAMu5B,WAAWC,UAGnC,mBAAA/6B,GACI,MAAM,IAAE35B,EAAI,IAAEmC,GAASxD,KAAKuS,WAAU,GACtCvS,KAAKqB,KAAM,OAAeA,GAAOA,EAAM,EACvCrB,KAAKwD,KAAM,OAAeA,GAAOA,EAAM,EACvCxD,KAAKo0D,wBACT,CACH,gBAAAQ,GACO,MAAM16C,EAAala,KAAK2iB,eAClB1gB,EAASiY,EAAala,KAAK6d,MAAQ7d,KAAK8d,OACxC4e,GAAc,IAAA/oB,GAAU3T,KAAK8H,QAAQoR,MAAMwjB,aAC3C7hB,GAASX,EAAa9Y,KAAKod,IAAIke,GAAet7B,KAAKkd,IAAIoe,KAAiB,KACxEiC,EAAW3+B,KAAKg/B,wBAAwB,GAC9C,OAAO59B,KAAKy1B,KAAK50B,EAASb,KAAKC,IAAI,GAAIs9B,EAASnG,WAAa3d,GACjE,CACA,gBAAA5B,CAAiBtQ,GACb,OAAiB,OAAVA,EAAiB2J,IAAMtS,KAAK8kB,oBAAoBnc,EAAQ3I,KAAKg0D,aAAeh0D,KAAKk0D,YAC5F,CACA,gBAAAlvC,CAAiBua,GACb,OAAOv/B,KAAKg0D,YAAch0D,KAAKy/B,mBAAmBF,GAASv/B,KAAKk0D,WACpE,EAGJ,MAAM8B,GAAcvnD,GAAIrN,KAAKoE,OAAM,QAAMiJ,IACnCwnD,GAAiB,CAACxnD,EAAGynD,IAAI90D,KAAK4pB,IAAI,GAAIgrC,GAAWvnD,GAAKynD,GAC5D,SAASC,GAAQC,GAEb,OAAkB,IADHA,EAAUh1D,KAAK4pB,IAAI,GAAIgrC,GAAWI,GAErD,CACA,SAASC,GAAMh1D,EAAKmC,EAAK8yD,GACrB,MAAMC,EAAYn1D,KAAK4pB,IAAI,GAAIsrC,GACzBh1D,EAAQF,KAAKoE,MAAMnE,EAAMk1D,GAE/B,OADYn1D,KAAKy1B,KAAKrzB,EAAM+yD,GACfj1D,CACjB,CAYC,SAASk1D,GAAc3B,GAAmB,IAAExzD,EAAI,IAAEmC,IAC/CnC,GAAM,OAAgBwzD,EAAkBxzD,IAAKA,GAC7C,MAAM6X,EAAQ,GACRu9C,EAAST,GAAW30D,GAC1B,IAAIq1D,EAfR,SAAkBr1D,EAAKmC,GAEnB,IAAI8yD,EAAWN,GADDxyD,EAAMnC,GAEpB,KAAMg1D,GAAMh1D,EAAKmC,EAAK8yD,GAAY,IAC9BA,IAEJ,KAAMD,GAAMh1D,EAAKmC,EAAK8yD,GAAY,IAC9BA,IAEJ,OAAOl1D,KAAKC,IAAIi1D,EAAUN,GAAW30D,GACzC,CAKcs1D,CAASt1D,EAAKmC,GACpBuxD,EAAY2B,EAAM,EAAIt1D,KAAK4pB,IAAI,GAAI5pB,KAAK4X,IAAI09C,IAAQ,EACxD,MAAM/B,EAAWvzD,KAAK4pB,IAAI,GAAI0rC,GACxBv8C,EAAOs8C,EAASC,EAAMt1D,KAAK4pB,IAAI,GAAIyrC,GAAU,EAC7Cn1D,EAAQF,KAAKi2B,OAAOh2B,EAAM8Y,GAAQ46C,GAAaA,EAC/Cv0C,EAASpf,KAAKoE,OAAOnE,EAAM8Y,GAAQw6C,EAAW,IAAMA,EAAW,GACrE,IAAIiC,EAAcx1D,KAAKoE,OAAOlE,EAAQkf,GAAUpf,KAAK4pB,IAAI,GAAI0rC,IACzD/tD,GAAQ,OAAgBksD,EAAkBxzD,IAAKD,KAAKi2B,OAAOld,EAAOqG,EAASo2C,EAAcx1D,KAAK4pB,IAAI,GAAI0rC,IAAQ3B,GAAaA,GAC/H,KAAMpsD,EAAQnF,GACV0V,EAAMhW,KAAK,CACPyF,QACA4tB,MAAO4/B,GAAQxtD,GACfiuD,gBAEAA,GAAe,GACfA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEAA,GAAe,KACfF,IACAE,EAAc,EACd7B,EAAY2B,GAAO,EAAI,EAAI3B,GAE/BpsD,EAAQvH,KAAKi2B,OAAOld,EAAOqG,EAASo2C,EAAcx1D,KAAK4pB,IAAI,GAAI0rC,IAAQ3B,GAAaA,EAExF,MAAM8B,GAAW,OAAgBhC,EAAkBrxD,IAAKmF,GAMxD,OALAuQ,EAAMhW,KAAK,CACPyF,MAAOkuD,EACPtgC,MAAO4/B,GAAQU,GACfD,gBAEG19C,CACX,CACA,MAAM49C,WAAyBl+B,GAC3BnsB,UAAY,cACfA,gBAAkB,CACXyM,MAAO,CACHqjB,SAAU,KAAMu5B,WAAWiB,YAC3BxgC,MAAO,CACHC,SAAS,KAIrB,WAAAz2B,CAAY+E,GACRgY,MAAMhY,GACL9E,KAAKsB,WAAQhB,EACbN,KAAKkJ,SAAM5I,EACXN,KAAKg0D,iBAAc1zD,EACpBN,KAAKk0D,YAAc,CACvB,CACA,KAAA/iD,CAAM6D,EAAKxL,GACP,MAAMb,EAAQorD,GAAgBxrC,UAAUpX,MAAM45C,MAAM/qD,KAAM,CACtDgV,EACAxL,IAEJ,GAAc,IAAVb,EAIJ,OAAO,OAAeA,IAAUA,EAAQ,EAAIA,EAAQ,KAHhD3I,KAAKg3D,OAAQ,CAIrB,CACA,mBAAAh8B,GACI,MAAM,IAAE35B,EAAI,IAAEmC,GAASxD,KAAKuS,WAAU,GACtCvS,KAAKqB,KAAM,OAAeA,GAAOD,KAAKoC,IAAI,EAAGnC,GAAO,KACpDrB,KAAKwD,KAAM,OAAeA,GAAOpC,KAAKoC,IAAI,EAAGA,GAAO,KAChDxD,KAAK8H,QAAQiZ,cACb/gB,KAAKg3D,OAAQ,GAEbh3D,KAAKg3D,OAASh3D,KAAKqB,MAAQrB,KAAK25B,iBAAkB,OAAe35B,KAAKy5B,YACtEz5B,KAAKqB,IAAMA,IAAQ40D,GAAej2D,KAAKqB,IAAK,GAAK40D,GAAej2D,KAAKqB,KAAM,GAAK40D,GAAej2D,KAAKqB,IAAK,IAE7GrB,KAAKo0D,wBACT,CACA,sBAAAA,GACI,MAAM,WAAEnhD,EAAW,WAAEC,GAAgBlT,KAAKmT,gBAC1C,IAAI9R,EAAMrB,KAAKqB,IACXmC,EAAMxD,KAAKwD,IACf,MAAM6wD,EAAU5lD,GAAIpN,EAAM4R,EAAa5R,EAAMoN,EACvC6lD,EAAU7lD,GAAIjL,EAAM0P,EAAa1P,EAAMiL,EACzCpN,IAAQmC,IACJnC,GAAO,GACPgzD,EAAO,GACPC,EAAO,MAEPD,EAAO4B,GAAe50D,GAAM,IAC5BizD,EAAO2B,GAAezyD,EAAK,MAG/BnC,GAAO,GACPgzD,EAAO4B,GAAezyD,GAAM,IAE5BA,GAAO,GACP8wD,EAAO2B,GAAe50D,EAAK,IAE/BrB,KAAKqB,IAAMA,EACXrB,KAAKwD,IAAMA,CACf,CACA,UAAA23B,GACI,MAAMnyB,EAAOhJ,KAAK8H,QAKZoR,EAAQs9C,GAJY,CACtBn1D,IAAKrB,KAAKy5B,SACVj2B,IAAKxD,KAAKw5B,UAEiCx5B,MAY/C,MAXoB,UAAhBgJ,EAAKkyC,SACL,QAAmBhiC,EAAOlZ,KAAM,SAEhCgJ,EAAKC,SACLiQ,EAAMjQ,UACNjJ,KAAKsB,MAAQtB,KAAKwD,IAClBxD,KAAKkJ,IAAMlJ,KAAKqB,MAEhBrB,KAAKsB,MAAQtB,KAAKqB,IAClBrB,KAAKkJ,IAAMlJ,KAAKwD,KAEb0V,CACX,CACH,gBAAAzF,CAAiB9K,GACV,YAAiBrI,IAAVqI,EAAsB,KAAM,OAAaA,EAAO3I,KAAKQ,MAAMsH,QAAQuY,OAAQrgB,KAAK8H,QAAQoR,MAAMwP,OACzG,CACH,SAAA1hB,GACO,MAAM1F,EAAQtB,KAAKqB,IACnByb,MAAM9V,YACNhH,KAAKg0D,aAAc,QAAM1yD,GACzBtB,KAAKk0D,aAAc,QAAMl0D,KAAKwD,MAAO,QAAMlC,EAC/C,CACA,gBAAA2X,CAAiBtQ,GAIb,YAHcrI,IAAVqI,GAAiC,IAAVA,IACvBA,EAAQ3I,KAAKqB,KAEH,OAAVsH,GAAkByX,MAAMzX,GACjB2J,IAEJtS,KAAK8kB,mBAAmBnc,IAAU3I,KAAKqB,IAAM,IAAK,QAAMsH,GAAS3I,KAAKg0D,aAAeh0D,KAAKk0D,YACrG,CACA,gBAAAlvC,CAAiBua,GACb,MAAMC,EAAUx/B,KAAKy/B,mBAAmBF,GACxC,OAAOn+B,KAAK4pB,IAAI,GAAIhrB,KAAKg0D,YAAcx0B,EAAUx/B,KAAKk0D,YAC1D,EAGJ,SAAS+C,GAAsBjuD,GAC3B,MAAM4sB,EAAW5sB,EAAKkQ,MACtB,GAAI0c,EAAS9U,SAAW9X,EAAK8X,QAAS,CAClC,MAAMmO,GAAU,OAAU2G,EAASmN,iBACnC,OAAO,IAAAt0B,GAAemnB,EAAS2C,MAAQ3C,EAAS2C,KAAK3vB,KAAM,EAAAxB,EAASmxB,KAAK3vB,MAAQqmB,EAAQnR,MAC7F,CACA,OAAO,CACX,CACA,SAASo5C,GAAiBvqD,EAAK4rB,EAAM/kB,GAIjC,OAHAA,GAAQ,OAAQA,GAASA,EAAQ,CAC7BA,GAEG,CACHwa,GAAG,QAAarhB,EAAK4rB,EAAK0G,OAAQzrB,GAClC0a,EAAG1a,EAAMvR,OAASs2B,EAAKC,WAE/B,CACA,SAAS2+B,GAAgBv4C,EAAOqN,EAAKrjB,EAAMvH,EAAKmC,GAC5C,OAAIob,IAAUvd,GAAOud,IAAUpb,EACpB,CACHlC,MAAO2qB,EAAMrjB,EAAO,EACpBM,IAAK+iB,EAAMrjB,EAAO,GAEfgW,EAAQvd,GAAOud,EAAQpb,EACvB,CACHlC,MAAO2qB,EAAMrjB,EACbM,IAAK+iB,GAGN,CACH3qB,MAAO2qB,EACP/iB,IAAK+iB,EAAMrjB,EAEnB,CACC,SAASwuD,GAAmBtuD,GACzB,MAAMyR,EAAO,CACTjK,EAAGxH,EAAMkL,KAAOlL,EAAMghD,SAAS91C,KAC/BxS,EAAGsH,EAAMgL,MAAQhL,EAAMghD,SAASh2C,MAChCH,EAAG7K,EAAM+K,IAAM/K,EAAMghD,SAASj2C,IAC9BD,EAAG9K,EAAMiL,OAASjL,EAAMghD,SAAS/1C,QAE/BsjD,EAASnwD,OAAOc,OAAO,CAAC,EAAGuS,GAC3BwiB,EAAa,GACb9N,EAAU,GACVqoC,EAAaxuD,EAAMyuD,aAAat1D,OAChCu1D,EAAiB1uD,EAAMhB,QAAQoZ,YAC/Bu2C,EAAkBD,EAAeE,kBAAoB,EAAAx4C,EAAKo4C,EAAa,EAC7E,IAAI,IAAIn1D,EAAI,EAAGA,EAAIm1D,EAAYn1D,IAAI,CAC/B,MAAM6G,EAAOwuD,EAAez9B,WAAWjxB,EAAM6uD,qBAAqBx1D,IAClE8sB,EAAQ9sB,GAAK6G,EAAKimB,QAClB,MAAMrH,EAAgB9e,EAAM8uD,iBAAiBz1D,EAAG2G,EAAM+uD,YAAc5oC,EAAQ9sB,GAAIs1D,GAC1EK,GAAS,QAAO9uD,EAAKuvB,MACrBwxB,EAAWmN,GAAiBpuD,EAAM6D,IAAKmrD,EAAQhvD,EAAMyuD,aAAap1D,IACxE46B,EAAW56B,GAAK4nD,EAChB,MAAMpsB,GAAe,QAAgB70B,EAAM6Y,cAAcxf,GAAKs1D,GACxD74C,EAAQxd,KAAKi2B,OAAM,OAAUsG,IAGnCo6B,GAAaV,EAAQ98C,EAAMojB,EAFXw5B,GAAgBv4C,EAAOgJ,EAAcvZ,EAAG07C,EAAS/7B,EAAG,EAAG,KACvDmpC,GAAgBv4C,EAAOgJ,EAActZ,EAAGy7C,EAAS77B,EAAG,GAAI,KAE5E,CACAplB,EAAMkvD,eAAez9C,EAAKjK,EAAI+mD,EAAO/mD,EAAG+mD,EAAO71D,EAAI+Y,EAAK/Y,EAAG+Y,EAAK5G,EAAI0jD,EAAO1jD,EAAG0jD,EAAOzjD,EAAI2G,EAAK3G,GAC9F9K,EAAMmvD,iBA6DV,SAA8BnvD,EAAOi0B,EAAY9N,GAC7C,MAAMjtB,EAAQ,GACRs1D,EAAaxuD,EAAMyuD,aAAat1D,OAChC+G,EAAOF,EAAMhB,SACb,kBAAE4vD,EAAkB,QAAE52C,GAAa9X,EAAKkY,YACxCg3C,EAAW,CACbC,MAAOlB,GAAsBjuD,GAAQ,EACrCyuD,gBAAiBC,EAAoB,EAAAx4C,EAAKo4C,EAAa,GAE3D,IAAIhjD,EACJ,IAAI,IAAInS,EAAI,EAAGA,EAAIm1D,EAAYn1D,IAAI,CAC/B+1D,EAASjpC,QAAUA,EAAQ9sB,GAC3B+1D,EAAStvD,KAAOm0B,EAAW56B,GAC3B,MAAMD,EAAOk2D,GAAqBtvD,EAAO3G,EAAG+1D,GAC5Cl2D,EAAMkB,KAAKhB,GACK,SAAZ4e,IACA5e,EAAK6uC,QAAUsnB,GAAgBn2D,EAAMoS,GACjCpS,EAAK6uC,UACLz8B,EAAOpS,GAGnB,CACA,OAAOF,CACX,CApF6Bs2D,CAAqBxvD,EAAOi0B,EAAY9N,EACrE,CACA,SAAS8oC,GAAaV,EAAQ98C,EAAMqE,EAAO25C,EAASC,GAChD,MAAMh6C,EAAMpd,KAAK4X,IAAI5X,KAAKod,IAAII,IACxBN,EAAMld,KAAK4X,IAAI5X,KAAKkd,IAAIM,IAC9B,IAAIvQ,EAAI,EACJC,EAAI,EACJiqD,EAAQj3D,MAAQiZ,EAAKjK,GACrBjC,GAAKkM,EAAKjK,EAAIioD,EAAQj3D,OAASkd,EAC/B64C,EAAO/mD,EAAIlP,KAAKC,IAAIg2D,EAAO/mD,EAAGiK,EAAKjK,EAAIjC,IAChCkqD,EAAQrvD,IAAMqR,EAAK/Y,IAC1B6M,GAAKkqD,EAAQrvD,IAAMqR,EAAK/Y,GAAKgd,EAC7B64C,EAAO71D,EAAIJ,KAAKoC,IAAI6zD,EAAO71D,EAAG+Y,EAAK/Y,EAAI6M,IAEvCmqD,EAAQl3D,MAAQiZ,EAAK5G,GACrBrF,GAAKiM,EAAK5G,EAAI6kD,EAAQl3D,OAASgd,EAC/B+4C,EAAO1jD,EAAIvS,KAAKC,IAAIg2D,EAAO1jD,EAAG4G,EAAK5G,EAAIrF,IAChCkqD,EAAQtvD,IAAMqR,EAAK3G,IAC1BtF,GAAKkqD,EAAQtvD,IAAMqR,EAAK3G,GAAK0K,EAC7B+4C,EAAOzjD,EAAIxS,KAAKoC,IAAI6zD,EAAOzjD,EAAG2G,EAAK3G,EAAItF,GAE/C,CACA,SAAS8pD,GAAqBtvD,EAAOU,EAAO0uD,GACxC,MAAMO,EAAgB3vD,EAAM+uD,aACtB,MAAEM,EAAM,gBAAEV,EAAgB,QAAExoC,EAAQ,KAAErmB,GAAUsvD,EAChDQ,EAAqB5vD,EAAM8uD,iBAAiBpuD,EAAOivD,EAAgBN,EAAQlpC,EAASwoC,GACpF74C,EAAQxd,KAAKi2B,OAAM,QAAU,QAAgBqhC,EAAmB95C,MAAQ,EAAAI,KACxE1Q,EA0EV,SAAmBA,EAAG4f,EAAGtP,GACP,KAAVA,GAA0B,MAAVA,EAChBtQ,GAAK4f,EAAI,GACFtP,EAAQ,KAAOA,EAAQ,MAC9BtQ,GAAK4f,GAET,OAAO5f,CACX,CAjFcqqD,CAAUD,EAAmBpqD,EAAG1F,EAAKslB,EAAGtP,GAC5CmjB,EAyDV,SAA8BnjB,GAC1B,GAAc,IAAVA,GAAyB,MAAVA,EACf,MAAO,SACJ,GAAIA,EAAQ,IACf,MAAO,OAEX,MAAO,OACX,CAhEsBg6C,CAAqBh6C,GACjC5K,EAgEV,SAA0B3F,EAAG2f,EAAG0K,GACd,UAAVA,EACArqB,GAAK2f,EACY,WAAV0K,IACPrqB,GAAK2f,EAAI,GAEb,OAAO3f,CACX,CAvEiBwqD,CAAiBH,EAAmBrqD,EAAGzF,EAAKolB,EAAG+T,GAC5D,MAAO,CACHgP,SAAS,EACT1iC,EAAGqqD,EAAmBrqD,EACtBC,IACAyzB,YACA/tB,OACAH,IAAKvF,EACLwF,MAAOE,EAAOpL,EAAKolB,EACnBja,OAAQzF,EAAI1F,EAAKslB,EAEzB,CACA,SAASmqC,GAAgBn2D,EAAMoS,GAC3B,IAAKA,EACD,OAAO,EAEX,MAAM,KAAEN,EAAK,IAAEH,EAAI,MAAEC,EAAM,OAAEC,GAAY7R,EAczC,SAbqB,OAAe,CAChCmM,EAAG2F,EACH1F,EAAGuF,GACJS,KAAS,OAAe,CACvBjG,EAAG2F,EACH1F,EAAGyF,GACJO,KAAS,OAAe,CACvBjG,EAAGyF,EACHxF,EAAGuF,GACJS,KAAS,OAAe,CACvBjG,EAAGyF,EACHxF,EAAGyF,GACJO,GAEP,CAiDA,SAASwkD,GAAkBnsD,EAAK3D,EAAM9G,GAClC,MAAM,KAAE8R,EAAK,IAAEH,EAAI,MAAEC,EAAM,OAAEC,GAAY7R,GACnC,cAAE8gC,GAAmBh6B,EAC3B,KAAK,OAAcg6B,GAAgB,CAC/B,MAAMgS,GAAe,QAAchsC,EAAKgsC,cAClC/lB,GAAU,OAAUjmB,EAAK+5B,iBAC/Bp2B,EAAIwP,UAAY6mB,EAChB,MAAM+1B,EAAe/kD,EAAOib,EAAQjb,KAC9BglD,EAAcnlD,EAAMob,EAAQpb,IAC5BolD,EAAgBnlD,EAAQE,EAAOib,EAAQpR,MACvCq7C,EAAiBnlD,EAASF,EAAMob,EAAQnR,OAC1C5W,OAAOU,OAAOotC,GAAc1L,KAAM76B,GAAU,IAANA,IACtC9B,EAAIk3B,aACJ,QAAmBl3B,EAAK,CACpB0B,EAAG0qD,EACHzqD,EAAG0qD,EACHhrC,EAAGirC,EACH/qC,EAAGgrC,EACH79C,OAAQ25B,IAEZroC,EAAIoB,QAEJpB,EAAI02B,SAAS01B,EAAcC,EAAaC,EAAeC,EAE/D,CACJ,CAmBA,SAASC,GAAerwD,EAAOuS,EAAQ4F,EAAUktC,GAC7C,MAAM,IAAExhD,GAAS7D,EACjB,GAAImY,EACAtU,EAAIuT,IAAIpX,EAAM0Y,QAAS1Y,EAAM2Y,QAASpG,EAAQ,EAAG,EAAAkC,OAC9C,CACH,IAAIqK,EAAgB9e,EAAM8uD,iBAAiB,EAAGv8C,GAC9C1O,EAAIm3B,OAAOlc,EAAcvZ,EAAGuZ,EAActZ,GAC1C,IAAI,IAAInM,EAAI,EAAGA,EAAIgsD,EAAYhsD,IAC3BylB,EAAgB9e,EAAM8uD,iBAAiBz1D,EAAGkZ,GAC1C1O,EAAIo3B,OAAOnc,EAAcvZ,EAAGuZ,EAActZ,EAElD,CACJ,CA0BA,MAAM8qD,WAA0BrF,GAC5BtnD,UAAY,eACfA,gBAAkB,CACXqU,SAAS,EACTu4C,SAAS,EACTvvC,SAAU,YACVjJ,WAAY,CACRC,SAAS,EACTtE,UAAW,EACX6kB,WAAY,GACZE,iBAAkB,GAEtBvgB,KAAM,CACFC,UAAU,GAEd9C,WAAY,EACZjF,MAAO,CACH2pB,mBAAmB,EACnBtG,SAAU,KAAMu5B,WAAWC,SAE/B70C,YAAa,CACT8hB,mBAAe1iC,EACfyiC,gBAAiB,EACjBjiB,SAAS,EACTyX,KAAM,CACF3vB,KAAM,IAEV,QAAA2zB,CAAU/oB,GACN,OAAOA,CACX,EACAyb,QAAS,EACTyoC,mBAAmB,IAG3BjrD,qBAAuB,CACnB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEnBA,mBAAqB,CACjBoU,WAAY,CACRqyC,UAAW,SAGnB,WAAAnzD,CAAY+E,GACRgY,MAAMhY,GACL9E,KAAKwhB,aAAUlhB,EACfN,KAAKyhB,aAAUnhB,EACfN,KAAK63D,iBAAcv3D,EACnBN,KAAKu3D,aAAe,GACrBv3D,KAAKi4D,iBAAmB,EAC5B,CACA,aAAAp9B,GACI,MAAM5L,EAAUjvB,KAAK8pD,UAAW,OAAUmN,GAAsBj3D,KAAK8H,SAAW,GAC1EkmB,EAAIhuB,KAAK6d,MAAQ7d,KAAKqf,SAAW4P,EAAQpR,MACzCqQ,EAAIluB,KAAK8d,OAAS9d,KAAKsf,UAAY2P,EAAQnR,OACjD9d,KAAKwhB,QAAUpgB,KAAKoE,MAAMxF,KAAKgU,KAAOga,EAAI,EAAIiB,EAAQjb,MACtDhU,KAAKyhB,QAAUrgB,KAAKoE,MAAMxF,KAAK6T,IAAMqa,EAAI,EAAIe,EAAQpb,KACrD7T,KAAK63D,YAAcz2D,KAAKoE,MAAMpE,KAAKC,IAAI2sB,EAAGE,GAAK,EACnD,CACA,mBAAA8M,GACI,MAAM,IAAE35B,EAAI,IAAEmC,GAASxD,KAAKuS,WAAU,GACtCvS,KAAKqB,KAAM,OAAeA,KAAS+e,MAAM/e,GAAOA,EAAM,EACtDrB,KAAKwD,KAAM,OAAeA,KAAS4c,MAAM5c,GAAOA,EAAM,EACtDxD,KAAKo0D,wBACT,CACH,gBAAAQ,GACO,OAAOxzD,KAAKy1B,KAAK72B,KAAK63D,YAAcZ,GAAsBj3D,KAAK8H,SACnE,CACA,kBAAAw0B,CAAmBpjB,GACf66C,GAAgBxrC,UAAU+T,mBAAmB76B,KAAKzB,KAAMkZ,GACxDlZ,KAAKu3D,aAAev3D,KAAK6R,YAAYmK,IAAI,CAACrT,EAAOa,KAC7C,MAAMgK,GAAQ,OAASxT,KAAK8H,QAAQoZ,YAAYqb,SAAU,CACtD5zB,EACAa,GACDxJ,MACH,OAAOwT,GAAmB,IAAVA,EAAcA,EAAQ,KACvCxH,OAAO,CAACyC,EAAGtM,IAAInC,KAAKQ,MAAMkc,kBAAkBva,GACnD,CACA,GAAA05B,GACI,MAAM7yB,EAAOhJ,KAAK8H,QACdkB,EAAK8X,SAAW9X,EAAKkY,YAAYJ,QACjCs2C,GAAmBp3D,MAEnBA,KAAKg4D,eAAe,EAAG,EAAG,EAAG,EAErC,CACA,cAAAA,CAAesB,EAAcC,EAAeC,EAAaC,GACrDz5D,KAAKwhB,SAAWpgB,KAAKoE,OAAO8zD,EAAeC,GAAiB,GAC5Dv5D,KAAKyhB,SAAWrgB,KAAKoE,OAAOg0D,EAAcC,GAAkB,GAC5Dz5D,KAAK63D,aAAez2D,KAAKC,IAAIrB,KAAK63D,YAAc,EAAGz2D,KAAKoC,IAAI81D,EAAcC,EAAeC,EAAaC,GAC1G,CACA,aAAA93C,CAAcnY,GACV,MAAMkwD,EAAkB,EAAAn8C,GAAOvd,KAAKu3D,aAAat1D,QAAU,GACrDkc,EAAane,KAAK8H,QAAQqW,YAAc,EAC9C,OAAO,QAAgB3U,EAAQkwD,GAAkB,IAAA/lD,GAAUwK,GAC/D,CACA,6BAAA4D,CAA8BpZ,GAC1B,IAAI,OAAcA,GACd,OAAO2J,IAEX,MAAMqnD,EAAgB35D,KAAK63D,aAAe73D,KAAKwD,IAAMxD,KAAKqB,KAC1D,OAAIrB,KAAK8H,QAAQmB,SACLjJ,KAAKwD,IAAMmF,GAASgxD,GAExBhxD,EAAQ3I,KAAKqB,KAAOs4D,CAChC,CACA,6BAAAC,CAA8BxuC,GAC1B,IAAI,OAAcA,GACd,OAAO9Y,IAEX,MAAMunD,EAAiBzuC,GAAYprB,KAAK63D,aAAe73D,KAAKwD,IAAMxD,KAAKqB,MACvE,OAAOrB,KAAK8H,QAAQmB,QAAUjJ,KAAKwD,IAAMq2D,EAAiB75D,KAAKqB,IAAMw4D,CACzE,CACA,oBAAAlC,CAAqBnuD,GACjB,MAAM0X,EAAclhB,KAAKu3D,cAAgB,GACzC,GAAI/tD,GAAS,GAAKA,EAAQ0X,EAAYjf,OAAQ,CAC1C,MAAM63D,EAAa54C,EAAY1X,GAC/B,OA7HZ,SAAiCsL,EAAQtL,EAAOgK,GAC5C,OAAO,OAAcsB,EAAQ,CACzBtB,QACAhK,QACA7I,KAAM,cAEd,CAuHmBo5D,CAAwB/5D,KAAKiR,aAAczH,EAAOswD,EAC7D,CACJ,CACA,gBAAAlC,CAAiBpuD,EAAOwwD,EAAoBvC,EAAkB,GAC1D,MAAM74C,EAAQ5e,KAAK2hB,cAAcnY,GAAS,EAAAwV,EAAUy4C,EACpD,MAAO,CACHppD,EAAGjN,KAAKkd,IAAIM,GAASo7C,EAAqBh6D,KAAKwhB,QAC/ClT,EAAGlN,KAAKod,IAAII,GAASo7C,EAAqBh6D,KAAKyhB,QAC/C7C,QAER,CACA,wBAAAiJ,CAAyBre,EAAOb,GAC5B,OAAO3I,KAAK43D,iBAAiBpuD,EAAOxJ,KAAK+hB,8BAA8BpZ,GAC3E,CACA,eAAAsxD,CAAgBzwD,GACZ,OAAOxJ,KAAK6nB,yBAAyBre,GAAS,EAAGxJ,KAAK0/B,eAC1D,CACA,qBAAAw6B,CAAsB1wD,GAClB,MAAM,KAAEwK,EAAK,IAAEH,EAAI,MAAEC,EAAM,OAAEC,GAAY/T,KAAKi4D,iBAAiBzuD,GAC/D,MAAO,CACHwK,OACAH,MACAC,QACAC,SAER,CACH,cAAAovB,GACO,MAAM,gBAAE/mB,EAAkB4E,MAAM,SAAEC,IAAiBjhB,KAAK8H,QACxD,GAAIsU,EAAiB,CACjB,MAAMzP,EAAM3M,KAAK2M,IACjBA,EAAIy2B,OACJz2B,EAAIk3B,YACJs1B,GAAen5D,KAAMA,KAAK+hB,8BAA8B/hB,KAAKi0D,WAAYhzC,EAAUjhB,KAAKu3D,aAAat1D,QACrG0K,EAAIyqC,YACJzqC,EAAIwP,UAAYC,EAChBzP,EAAIoB,OACJpB,EAAI22B,SACR,CACJ,CACH,QAAAC,GACO,MAAM52B,EAAM3M,KAAK2M,IACX3D,EAAOhJ,KAAK8H,SACZ,WAAE+Y,EAAW,KAAEG,EAAK,OAAEqG,GAAYre,EAClCmlD,EAAanuD,KAAKu3D,aAAat1D,OACrC,IAAIE,EAAGqe,EAAQsJ,EAef,GAdI9gB,EAAKkY,YAAYJ,SA3N7B,SAAyBhY,EAAOqlD,GAC5B,MAAM,IAAExhD,EAAM7E,SAAS,YAAEoZ,IAAoBpY,EAC7C,IAAI,IAAI3G,EAAIgsD,EAAa,EAAGhsD,GAAK,EAAGA,IAAI,CACpC,MAAMD,EAAO4G,EAAMmvD,iBAAiB91D,GACpC,IAAKD,EAAK6uC,QACN,SAEJ,MAAM7P,EAAchgB,EAAY6Y,WAAWjxB,EAAM6uD,qBAAqBx1D,IACtE22D,GAAkBnsD,EAAKu0B,EAAah/B,GACpC,MAAM41D,GAAS,QAAO52B,EAAY3I,OAC5B,EAAElqB,EAAE,EAAEC,EAAE,UAAEyzB,GAAe7/B,GAC/B,OAAWyK,EAAK7D,EAAMyuD,aAAap1D,GAAIkM,EAAGC,EAAIwpD,EAAOt/B,WAAa,EAAGs/B,EAAQ,CACzEzzD,MAAO68B,EAAY78B,MACnB09B,UAAWA,EACXG,aAAc,UAEtB,CACJ,CA2MYi4B,CAAgBn6D,KAAMmuD,GAEtBntC,EAAKF,SACL9gB,KAAKkZ,MAAMlY,QAAQ,CAACuB,EAAMiH,KACtB,GAAc,IAAVA,GAAyB,IAAVA,GAAexJ,KAAKqB,IAAM,EAAG,CAC5Cmf,EAASxgB,KAAK+hB,8BAA8Bxf,EAAKoG,OACjD,MAAMkM,EAAU7U,KAAKiR,WAAWzH,GAC1B03B,EAAclgB,EAAK+Y,WAAWllB,GAC9BssB,EAAoB9Z,EAAO0S,WAAWllB,IArMhE,SAAwB/L,EAAOsxD,EAAc/+C,EAAQ8yC,EAAYluB,GAC7D,MAAMtzB,EAAM7D,EAAM6D,IACZsU,EAAWm5C,EAAan5C,UACxB,MAAE5c,EAAM,UAAEmY,GAAe49C,GAC1Bn5C,IAAaktC,IAAe9pD,IAAUmY,GAAanB,EAAS,IAGjE1O,EAAIy2B,OACJz2B,EAAI0P,YAAchY,EAClBsI,EAAI6P,UAAYA,EAChB7P,EAAIg3B,YAAY1D,EAAWqB,MAAQ,IACnC30B,EAAIi3B,eAAiB3D,EAAWuB,WAChC70B,EAAIk3B,YACJs1B,GAAerwD,EAAOuS,EAAQ4F,EAAUktC,GACxCxhD,EAAIyqC,YACJzqC,EAAIq3B,SACJr3B,EAAI22B,UACR,CAqLoB+2B,CAAer6D,KAAMkhC,EAAa1gB,EAAQ2tC,EAAYhtB,EAC1D,IAGJtgB,EAAWC,QAAS,CAEpB,IADAnU,EAAIy2B,OACAjhC,EAAIgsD,EAAa,EAAGhsD,GAAK,EAAGA,IAAI,CAChC,MAAM++B,EAAcrgB,EAAWkZ,WAAW/5B,KAAK23D,qBAAqBx1D,KAC9D,MAAEkC,EAAM,UAAEmY,GAAe0kB,EAC1B1kB,GAAcnY,IAGnBsI,EAAI6P,UAAYA,EAChB7P,EAAI0P,YAAchY,EAClBsI,EAAIg3B,YAAYzC,EAAYG,YAC5B10B,EAAIi3B,eAAiB1C,EAAYK,iBACjC/gB,EAASxgB,KAAK+hB,8BAA8B/Y,EAAKC,QAAUjJ,KAAKqB,IAAMrB,KAAKwD,KAC3EsmB,EAAW9pB,KAAK43D,iBAAiBz1D,EAAGqe,GACpC7T,EAAIk3B,YACJl3B,EAAIm3B,OAAO9jC,KAAKwhB,QAASxhB,KAAKyhB,SAC9B9U,EAAIo3B,OAAOja,EAASzb,EAAGyb,EAASxb,GAChC3B,EAAIq3B,SACR,CACAr3B,EAAI22B,SACR,CACJ,CACH,UAAAY,GAAc,CACd,UAAAE,GACO,MAAMz3B,EAAM3M,KAAK2M,IACX3D,EAAOhJ,KAAK8H,QACZ8tB,EAAW5sB,EAAKkQ,MACtB,IAAK0c,EAAS9U,QACV,OAEJ,MAAM3C,EAAane,KAAK2hB,cAAc,GACtC,IAAInB,EAAQ3C,EACZlR,EAAIy2B,OACJz2B,EAAIkwC,UAAU78C,KAAKwhB,QAASxhB,KAAKyhB,SACjC9U,EAAI2tD,OAAOn8C,GACXxR,EAAIo1B,UAAY,SAChBp1B,EAAIu1B,aAAe,SACnBliC,KAAKkZ,MAAMlY,QAAQ,CAACuB,EAAMiH,KACtB,GAAc,IAAVA,GAAexJ,KAAKqB,KAAO,IAAM2H,EAAKC,QACtC,OAEJ,MAAMi4B,EAActL,EAASmE,WAAW/5B,KAAKiR,WAAWzH,IAClDm1B,GAAW,QAAOuC,EAAY3I,MAEpC,GADA/X,EAASxgB,KAAK+hB,8BAA8B/hB,KAAKkZ,MAAM1P,GAAOb,OAC1Du4B,EAAY2B,kBAAmB,CAC/Bl2B,EAAI4rB,KAAOoG,EAASM,OACpBphB,EAAQlR,EAAIg6C,YAAYpkD,EAAKiR,OAAOqK,MACpClR,EAAIwP,UAAY+kB,EAAY8B,cAC5B,MAAM/T,GAAU,OAAUiS,EAAY6B,iBACtCp2B,EAAI02B,UAAUxlB,EAAQ,EAAIoR,EAAQjb,MAAOwM,EAASme,EAAS/1B,KAAO,EAAIqmB,EAAQpb,IAAKgK,EAAQoR,EAAQpR,MAAO8gB,EAAS/1B,KAAOqmB,EAAQnR,OACtI,EACA,OAAWnR,EAAKpK,EAAKiR,MAAO,GAAIgN,EAAQme,EAAU,CAC9Ct6B,MAAO68B,EAAY78B,MACnBk+B,YAAarB,EAAYsB,gBACzBC,YAAavB,EAAYwB,oBAGjC/1B,EAAI22B,SACR,CACH,SAAAgB,GAAa,EAGd,MAAMi2B,GAAY,CACdC,YAAa,CACTC,QAAQ,EACR7xD,KAAM,EACNytD,MAAO,KAEXqE,OAAQ,CACJD,QAAQ,EACR7xD,KAAM,IACNytD,MAAO,IAEXsE,OAAQ,CACJF,QAAQ,EACR7xD,KAAM,IACNytD,MAAO,IAEXuE,KAAM,CACFH,QAAQ,EACR7xD,KAAM,KACNytD,MAAO,IAEXwE,IAAK,CACDJ,QAAQ,EACR7xD,KAAM,MACNytD,MAAO,IAEXyE,KAAM,CACFL,QAAQ,EACR7xD,KAAM,OACNytD,MAAO,GAEX0E,MAAO,CACHN,QAAQ,EACR7xD,KAAM,OACNytD,MAAO,IAEX2E,QAAS,CACLP,QAAQ,EACR7xD,KAAM,OACNytD,MAAO,GAEX4E,KAAM,CACFR,QAAQ,EACR7xD,KAAM,SAGPsyD,GAAyBh0D,OAAOC,KAAKozD,IAC3C,SAASY,GAAOxiD,EAAG/E,GAChB,OAAO+E,EAAI/E,CACf,CACC,SAASzC,GAAMrI,EAAOsyD,GACnB,IAAI,OAAcA,GACd,OAAO,KAEX,MAAMC,EAAUvyD,EAAMwyD,UAChB,OAAEC,EAAO,MAAElkC,EAAM,WAAEmkC,GAAgB1yD,EAAM2yD,WAC/C,IAAI9yD,EAAQyyD,EAOZ,MANsB,oBAAXG,IACP5yD,EAAQ4yD,EAAO5yD,KAEd,OAAeA,KAChBA,EAA0B,kBAAX4yD,EAAsBF,EAAQlqD,MAAMxI,EAAO4yD,GAAUF,EAAQlqD,MAAMxI,IAExE,OAAVA,EACO,MAEP0uB,IACA1uB,EAAkB,SAAV0uB,KAAqB,OAASmkC,KAA8B,IAAfA,EAAuEH,EAAQzyC,QAAQjgB,EAAO0uB,GAAvEgkC,EAAQzyC,QAAQjgB,EAAO,UAAW6yD,KAE1G7yD,EACZ,CACC,SAAS+yD,GAA0BC,EAASt6D,EAAKmC,EAAKo4D,GACnD,MAAMryD,EAAO2xD,GAAMj5D,OACnB,IAAI,IAAIE,EAAI+4D,GAAMv3C,QAAQg4C,GAAUx5D,EAAIoH,EAAO,IAAKpH,EAAE,CAClD,MAAM05D,EAAWtB,GAAUW,GAAM/4D,IAC3BiC,EAASy3D,EAASxF,MAAQwF,EAASxF,MAAQzjD,OAAOkpD,iBACxD,GAAID,EAASpB,QAAUr5D,KAAKy1B,MAAMrzB,EAAMnC,IAAQ+C,EAASy3D,EAASjzD,QAAUgzD,EACxE,OAAOV,GAAM/4D,EAErB,CACA,OAAO+4D,GAAM3xD,EAAO,EACxB,CAiBC,SAASwyD,GAAQ7iD,EAAO8iD,EAAMC,GAC3B,GAAKA,GAEE,GAAIA,EAAWh6D,OAAQ,CAC1B,MAAM,GAAEsnB,EAAG,GAAEG,IAAQ,QAAQuyC,EAAYD,GAEzC9iD,EADkB+iD,EAAW1yC,IAAOyyC,EAAOC,EAAW1yC,GAAM0yC,EAAWvyC,KACpD,CACvB,OALIxQ,EAAM8iD,IAAQ,CAMtB,CAcC,SAASE,GAAoBpzD,EAAOlB,EAAQu0D,GACzC,MAAMjjD,EAAQ,GACP8C,EAAM,CAAC,EACRzS,EAAO3B,EAAO3F,OACpB,IAAIE,EAAGwG,EACP,IAAIxG,EAAI,EAAGA,EAAIoH,IAAQpH,EACnBwG,EAAQf,EAAOzF,GACf6Z,EAAIrT,GAASxG,EACb+W,EAAMhW,KAAK,CACPyF,QACA4tB,OAAO,IAGf,OAAgB,IAAThtB,GAAe4yD,EA1BzB,SAAuBrzD,EAAOoQ,EAAO8C,EAAKmgD,GACvC,MAAMd,EAAUvyD,EAAMwyD,SAChB3kC,GAAS0kC,EAAQzyC,QAAQ1P,EAAM,GAAGvQ,MAAOwzD,GACzC94C,EAAOnK,EAAMA,EAAMjX,OAAS,GAAG0G,MACrC,IAAI4tB,EAAO/sB,EACX,IAAI+sB,EAAQI,EAAOJ,GAASlT,EAAMkT,GAAS8kC,EAAQl4D,IAAIozB,EAAO,EAAG4lC,GAC7D3yD,EAAQwS,EAAIua,GACR/sB,GAAS,IACT0P,EAAM1P,GAAO+sB,OAAQ,GAG7B,OAAOrd,CACX,CAc8CkjD,CAActzD,EAAOoQ,EAAO8C,EAAKmgD,GAAzCjjD,CACtC,CACA,MAAMmjD,WAAkBzjC,GACpBnsB,UAAY,OACfA,gBAAkB,CAClByuC,OAAQ,OACDpyB,SAAU,CAAC,EACXkzC,KAAM,CACFT,QAAQ,EACRrG,MAAM,EACN79B,OAAO,EACPmkC,YAAY,EACZG,QAAS,cACTW,eAAgB,CAAC,GAErBpjD,MAAO,CACdwiB,OAAQ,OACGa,UAAU,EACVhG,MAAO,CACHC,SAAS,KAIxB,WAAAz2B,CAAY0I,GACLqU,MAAMrU,GACLzI,KAAKqY,OAAS,CACX9I,KAAM,GACNqC,OAAQ,GACRtJ,IAAK,IAERtI,KAAKu8D,MAAQ,MACbv8D,KAAKw8D,gBAAal8D,EACnBN,KAAKy8D,SAAW,CAAC,EACjBz8D,KAAK08D,aAAc,EACnB18D,KAAKy7D,gBAAan7D,CACtB,CACA,IAAAkoB,CAAK0nB,EAAWlnC,EAAO,CAAC,GACpB,MAAMgzD,EAAO9rB,EAAU8rB,OAAS9rB,EAAU8rB,KAAO,CAAC,GAC3CX,EAAUr7D,KAAKs7D,SAAW,IAAIxyC,EAAeonB,EAAUpnB,SAASpoB,MACvE26D,EAAQ7yC,KAAKxf,IACb,QAAQgzD,EAAKM,eAAgBjB,EAAQ5yC,WACrCzoB,KAAKy7D,WAAa,CACdF,OAAQS,EAAKT,OACblkC,MAAO2kC,EAAK3kC,MACZmkC,WAAYQ,EAAKR,YAErB1+C,MAAM0L,KAAK0nB,GACXlwC,KAAK08D,YAAc1zD,EAAK2zD,UAC5B,CACH,KAAAxrD,CAAM6D,EAAKxL,GACJ,YAAYlJ,IAAR0U,EACO,KAEJ7D,GAAMnR,KAAMgV,EACvB,CACA,YAAAkb,GACIpT,MAAMoT,eACNlwB,KAAKqY,OAAS,CACV9I,KAAM,GACNqC,OAAQ,GACRtJ,IAAK,GAEb,CACA,mBAAA0yB,GACI,MAAMlzB,EAAU9H,KAAK8H,QACfuzD,EAAUr7D,KAAKs7D,SACfpG,EAAOptD,EAAQk0D,KAAK9G,MAAQ,MAClC,IAAI,IAAE7zD,EAAI,IAAEmC,EAAI,WAAEyP,EAAW,WAAEC,GAAgBlT,KAAKmT,gBAC3D,SAASypD,EAAa1hB,GACNjoC,GAAemN,MAAM86B,EAAO75C,OAC7BA,EAAMD,KAAKC,IAAIA,EAAK65C,EAAO75C,MAE1B6R,GAAekN,MAAM86B,EAAO13C,OAC7BA,EAAMpC,KAAKoC,IAAIA,EAAK03C,EAAO13C,KAEnC,CACKyP,GAAeC,IAChB0pD,EAAa58D,KAAK68D,mBACK,UAAnB/0D,EAAQozC,QAA+C,WAAzBpzC,EAAQoR,MAAMwiB,QAC5CkhC,EAAa58D,KAAKuS,WAAU,KAGpClR,GAAM,OAAeA,KAAS+e,MAAM/e,GAAOA,GAAOg6D,EAAQzyC,QAAQhnB,KAAKC,MAAOqzD,GAC9E1xD,GAAM,OAAeA,KAAS4c,MAAM5c,GAAOA,GAAO63D,EAAQxyC,MAAMjnB,KAAKC,MAAOqzD,GAAQ,EACpFl1D,KAAKqB,IAAMD,KAAKC,IAAIA,EAAKmC,EAAM,GAC/BxD,KAAKwD,IAAMpC,KAAKoC,IAAInC,EAAM,EAAGmC,EACjC,CACH,eAAAq5D,GACO,MAAMvlD,EAAMtX,KAAK88D,qBACjB,IAAIz7D,EAAMuR,OAAOC,kBACbrP,EAAMoP,OAAOE,kBAKjB,OAJIwE,EAAIrV,SACJZ,EAAMiW,EAAI,GACV9T,EAAM8T,EAAIA,EAAIrV,OAAS,IAEpB,CACHZ,MACAmC,MAER,CACH,UAAA23B,GACO,MAAMrzB,EAAU9H,KAAK8H,QACfi1D,EAAWj1D,EAAQk0D,KACnBpmC,EAAW9tB,EAAQoR,MACnB+iD,EAAiC,WAApBrmC,EAAS8F,OAAsB17B,KAAK88D,qBAAuB98D,KAAKg9D,YAC5D,UAAnBl1D,EAAQozC,QAAsB+gB,EAAWh6D,SACzCjC,KAAKqB,IAAMrB,KAAKy5B,UAAYwiC,EAAW,GACvCj8D,KAAKwD,IAAMxD,KAAKw5B,UAAYyiC,EAAWA,EAAWh6D,OAAS,IAE/D,MAAMZ,EAAMrB,KAAKqB,IACXmC,EAAMxD,KAAKwD,IACX0V,GAAQ,QAAe+iD,EAAY56D,EAAKmC,GAO9C,OANAxD,KAAKu8D,MAAQQ,EAAS7H,OAASt/B,EAASD,SAAW+lC,GAA0BqB,EAASpB,QAAS37D,KAAKqB,IAAKrB,KAAKwD,IAAKxD,KAAKi9D,kBAAkB57D,IAnKjJ,SAAoCyH,EAAO2zB,EAAUk/B,EAASt6D,EAAKmC,GAChE,IAAI,IAAIrB,EAAI+4D,GAAMj5D,OAAS,EAAGE,GAAK+4D,GAAMv3C,QAAQg4C,GAAUx5D,IAAI,CAC3D,MAAM+yD,EAAOgG,GAAM/4D,GACnB,GAAIo4D,GAAUrF,GAAMuF,QAAU3xD,EAAMwyD,SAAS3yC,KAAKnlB,EAAKnC,EAAK6zD,IAASz4B,EAAW,EAC5E,OAAOy4B,CAEf,CACA,OAAOgG,GAAMS,EAAUT,GAAMv3C,QAAQg4C,GAAW,EACpD,CA2J0JuB,CAA2Bl9D,KAAMkZ,EAAMjX,OAAQ86D,EAASpB,QAAS37D,KAAKqB,IAAKrB,KAAKwD,MAClOxD,KAAKw8D,WAAc5mC,EAASW,MAAMC,SAA0B,SAAfx2B,KAAKu8D,MA3JzD,SAA4BrH,GACzB,IAAI,IAAI/yD,EAAI+4D,GAAMv3C,QAAQuxC,GAAQ,EAAG3rD,EAAO2xD,GAAMj5D,OAAQE,EAAIoH,IAAQpH,EAClE,GAAIo4D,GAAUW,GAAM/4D,IAAIs4D,OACpB,OAAOS,GAAM/4D,EAGzB,CAqJyFg7D,CAAmBn9D,KAAKu8D,YAApCj8D,EACrEN,KAAKo9D,YAAYnB,GACbn0D,EAAQmB,SACRiQ,EAAMjQ,UAEHizD,GAAoBl8D,KAAMkZ,EAAOlZ,KAAKw8D,WACjD,CACA,aAAA7gC,GACQ37B,KAAK8H,QAAQu1D,qBACbr9D,KAAKo9D,YAAYp9D,KAAKkZ,MAAM8C,IAAKzZ,IAAQA,EAAKoG,OAEtD,CACH,WAAAy0D,CAAYnB,EAAa,IAClB,IAEItlC,EAAOtT,EAFP/hB,EAAQ,EACR4H,EAAM,EAENlJ,KAAK8H,QAAQ0Y,QAAUy7C,EAAWh6D,SAClC00B,EAAQ32B,KAAKs9D,mBAAmBrB,EAAW,IAEvC36D,EADsB,IAAtB26D,EAAWh6D,OACH,EAAI00B,GAEH32B,KAAKs9D,mBAAmBrB,EAAW,IAAMtlC,GAAS,EAE/DtT,EAAOrjB,KAAKs9D,mBAAmBrB,EAAWA,EAAWh6D,OAAS,IAE1DiH,EADsB,IAAtB+yD,EAAWh6D,OACLohB,GAECA,EAAOrjB,KAAKs9D,mBAAmBrB,EAAWA,EAAWh6D,OAAS,KAAO,GAGpF,MAAM++B,EAAQi7B,EAAWh6D,OAAS,EAAI,GAAM,IAC5CX,GAAQ,OAAYA,EAAO,EAAG0/B,GAC9B93B,GAAM,OAAYA,EAAK,EAAG83B,GAC1BhhC,KAAKy8D,SAAW,CACZn7D,QACA4H,MACA9E,OAAQ,GAAK9C,EAAQ,EAAI4H,GAEjC,CACH,SAAA8zD,GACO,MAAM3B,EAAUr7D,KAAKs7D,SACfj6D,EAAMrB,KAAKqB,IACXmC,EAAMxD,KAAKwD,IACXsE,EAAU9H,KAAK8H,QACfi1D,EAAWj1D,EAAQk0D,KACnBuB,EAAQR,EAAS7H,MAAQwG,GAA0BqB,EAASpB,QAASt6D,EAAKmC,EAAKxD,KAAKi9D,kBAAkB57D,IACtGszD,GAAW,IAAAlmD,GAAe3G,EAAQoR,MAAMy7C,SAAU,GAClD6I,EAAoB,SAAVD,GAAmBR,EAASvB,WACtCiC,GAAa,OAASD,KAAwB,IAAZA,EAClCtkD,EAAQ,CAAC,EACf,IACI8iD,EAAM5qD,EADNulB,EAAQt1B,EAMZ,GAJIo8D,IACA9mC,GAAS0kC,EAAQzyC,QAAQ+N,EAAO,UAAW6mC,IAE/C7mC,GAAS0kC,EAAQzyC,QAAQ+N,EAAO8mC,EAAa,MAAQF,GACjDlC,EAAQ1yC,KAAKnlB,EAAKnC,EAAKk8D,GAAS,IAAS5I,EACzC,MAAM,IAAIxsC,MAAM9mB,EAAM,QAAUmC,EAAM,uCAAyCmxD,EAAW,IAAM4I,GAEpG,MAAMtB,EAAsC,SAAzBn0D,EAAQoR,MAAMwiB,QAAqB17B,KAAK09D,oBAC3D,IAAI1B,EAAOrlC,EAAOvlB,EAAQ,EAAG4qD,EAAOx4D,EAAKw4D,GAAQX,EAAQl4D,IAAI64D,EAAMrH,EAAU4I,GAAQnsD,IACjF2qD,GAAQ7iD,EAAO8iD,EAAMC,GAKzB,OAHID,IAASx4D,GAA0B,UAAnBsE,EAAQozC,QAAgC,IAAV9pC,GAC9C2qD,GAAQ7iD,EAAO8iD,EAAMC,GAElB/0D,OAAOC,KAAK+R,GAAOR,KAAKyiD,IAAQn/C,IAAK3N,IAAKA,EACrD,CACH,gBAAAoF,CAAiB9K,GACV,MAAM0yD,EAAUr7D,KAAKs7D,SACfyB,EAAW/8D,KAAK8H,QAAQk0D,KAC9B,OAAIe,EAASY,cACFtC,EAAQ3yC,OAAO/f,EAAOo0D,EAASY,eAEnCtC,EAAQ3yC,OAAO/f,EAAOo0D,EAAST,eAAesB,SACzD,CACH,MAAAl1C,CAAO/f,EAAO+f,GACP,MACMD,EADUzoB,KAAK8H,QACGk0D,KAAKM,eACvBpH,EAAOl1D,KAAKu8D,MACZsB,EAAMn1C,GAAUD,EAAQysC,GAC9B,OAAOl1D,KAAKs7D,SAAS5yC,OAAO/f,EAAOk1D,EACvC,CACH,mBAAAC,CAAoB9B,EAAMxyD,EAAO0P,EAAOwP,GACjC,MAAM5gB,EAAU9H,KAAK8H,QACfi2D,EAAYj2D,EAAQoR,MAAMqjB,SAChC,GAAIwhC,EACA,OAAO,OAASA,EAAW,CACvB/B,EACAxyD,EACA0P,GACDlZ,MAEP,MAAMyoB,EAAU3gB,EAAQk0D,KAAKM,eACvBpH,EAAOl1D,KAAKu8D,MACZJ,EAAYn8D,KAAKw8D,WACjBwB,EAAc9I,GAAQzsC,EAAQysC,GAC9B+I,EAAc9B,GAAa1zC,EAAQ0zC,GACnC55D,EAAO2W,EAAM1P,GACb+sB,EAAQ4lC,GAAa8B,GAAe17D,GAAQA,EAAKg0B,MACvD,OAAOv2B,KAAKs7D,SAAS5yC,OAAOszC,EAAMtzC,IAAW6N,EAAQ0nC,EAAcD,GACvE,CACH,kBAAA1hC,CAAmBpjB,GACZ,IAAI/W,EAAGoH,EAAMhH,EACb,IAAIJ,EAAI,EAAGoH,EAAO2P,EAAMjX,OAAQE,EAAIoH,IAAQpH,EACxCI,EAAO2W,EAAM/W,GACbI,EAAKiR,MAAQxT,KAAK89D,oBAAoBv7D,EAAKoG,MAAOxG,EAAG+W,EAE7D,CACH,kBAAAokD,CAAmB30D,GACZ,OAAiB,OAAVA,EAAiB2J,KAAO3J,EAAQ3I,KAAKqB,MAAQrB,KAAKwD,IAAMxD,KAAKqB,IACxE,CACH,gBAAA4X,CAAiBtQ,GACV,MAAMu1D,EAAUl+D,KAAKy8D,SACfxwC,EAAMjsB,KAAKs9D,mBAAmB30D,GACpC,OAAO3I,KAAK8kB,oBAAoBo5C,EAAQ58D,MAAQ2qB,GAAOiyC,EAAQ95D,OACnE,CACH,gBAAA4gB,CAAiBua,GACV,MAAM2+B,EAAUl+D,KAAKy8D,SACfxwC,EAAMjsB,KAAKy/B,mBAAmBF,GAAS2+B,EAAQ95D,OAAS85D,EAAQh1D,IACtE,OAAOlJ,KAAKqB,IAAM4qB,GAAOjsB,KAAKwD,IAAMxD,KAAKqB,IAC7C,CACH,aAAA88D,CAAc3qD,GACP,MAAM4qD,EAAYp+D,KAAK8H,QAAQoR,MACzBmlD,EAAiBr+D,KAAK2M,IAAIg6C,YAAYnzC,GAAOqK,MAC7Ce,GAAQ,IAAAjL,GAAU3T,KAAK2iB,eAAiBy7C,EAAUzhC,YAAcyhC,EAAU1hC,aAC1E4hC,EAAcl9D,KAAKkd,IAAIM,GACvB2/C,EAAcn9D,KAAKod,IAAII,GACvB4/C,EAAex+D,KAAKg/B,wBAAwB,GAAGp2B,KACrD,MAAO,CACHolB,EAAGqwC,EAAiBC,EAAcE,EAAeD,EACjDrwC,EAAGmwC,EAAiBE,EAAcC,EAAeF,EAEzD,CACH,iBAAArB,CAAkBwB,GACX,MAAM1B,EAAW/8D,KAAK8H,QAAQk0D,KACxBM,EAAiBS,EAAST,eAC1B5zC,EAAS4zC,EAAeS,EAAS7H,OAASoH,EAAe9B,YACzDkE,EAAe1+D,KAAK89D,oBAAoBW,EAAa,EAAGvC,GAAoBl8D,KAAM,CACpFy+D,GACDz+D,KAAKw8D,YAAa9zC,GACf9f,EAAO5I,KAAKm+D,cAAcO,GAC1B9C,EAAWx6D,KAAKoE,MAAMxF,KAAK2iB,eAAiB3iB,KAAK6d,MAAQjV,EAAKolB,EAAIhuB,KAAK8d,OAASlV,EAAKslB,GAAK,EAChG,OAAO0tC,EAAW,EAAIA,EAAW,CACrC,CACH,iBAAA8B,GACO,IACIv7D,EAAGoH,EADH0yD,EAAaj8D,KAAKqY,OAAO9I,MAAQ,GAErC,GAAI0sD,EAAWh6D,OACX,OAAOg6D,EAEX,MAAM/hC,EAAQl6B,KAAK6K,0BACnB,GAAI7K,KAAK08D,aAAexiC,EAAMj4B,OAC1B,OAAOjC,KAAKqY,OAAO9I,KAAO2qB,EAAM,GAAGnvB,WAAWsI,mBAAmBrT,MAErE,IAAImC,EAAI,EAAGoH,EAAO2wB,EAAMj4B,OAAQE,EAAIoH,IAAQpH,EACxC85D,EAAaA,EAAWzjD,OAAO0hB,EAAM/3B,GAAG4I,WAAWsI,mBAAmBrT,OAE1E,OAAOA,KAAKqY,OAAO9I,KAAOvP,KAAK2+D,UAAU1C,EAC7C,CACH,kBAAAa,GACO,MAAMb,EAAaj8D,KAAKqY,OAAOzG,QAAU,GACzC,IAAIzP,EAAGoH,EACP,GAAI0yD,EAAWh6D,OACX,OAAOg6D,EAEX,MAAMrqD,EAAS5R,KAAK6R,YACpB,IAAI1P,EAAI,EAAGoH,EAAOqI,EAAO3P,OAAQE,EAAIoH,IAAQpH,EACzC85D,EAAW/4D,KAAKiO,GAAMnR,KAAM4R,EAAOzP,KAEvC,OAAOnC,KAAKqY,OAAOzG,OAAS5R,KAAK08D,YAAcT,EAAaj8D,KAAK2+D,UAAU1C,EAC/E,CACH,SAAA0C,CAAU/2D,GACH,OAAO,IAAA6Q,GAAa7Q,EAAO8Q,KAAKyiD,IACpC,EAGJ,SAAS5gB,GAAYqkB,EAAOl7C,EAAKza,GAC7B,IAEI41D,EAAYC,EAAYC,EAAYC,EAFpCz1C,EAAK,EACLG,EAAKk1C,EAAM38D,OAAS,EAEpBgH,GACIya,GAAOk7C,EAAMr1C,GAAI0C,KAAOvI,GAAOk7C,EAAMl1C,GAAIuC,OACtC1C,KAAKG,OAAQ,OAAak1C,EAAO,MAAOl7C,MAE5CuI,IAAK4yC,EAAa7C,KAAM+C,GAAgBH,EAAMr1C,MAC9C0C,IAAK6yC,EAAa9C,KAAMgD,GAAgBJ,EAAMl1C,MAE7ChG,GAAOk7C,EAAMr1C,GAAIyyC,MAAQt4C,GAAOk7C,EAAMl1C,GAAIsyC,QACvCzyC,KAAKG,OAAQ,OAAak1C,EAAO,OAAQl7C,MAE7Cs4C,KAAM6C,EAAa5yC,IAAK8yC,GAAgBH,EAAMr1C,MAC9CyyC,KAAM8C,EAAa7yC,IAAK+yC,GAAgBJ,EAAMl1C,KAErD,MAAMu1C,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAer7C,EAAMm7C,GAAcI,EAAOF,CACvF,CA0FA,IAAIhzD,GAAsB7E,OAAO0O,OAAO,CACxCqM,UAAW,KACXi9C,cApgDA,cAA4BtmC,GACxBnsB,UAAY,WACfA,gBAAkB,CACXyM,MAAO,CACHqjB,SAAUo3B,KAGlB,WAAA5zD,CAAY+E,GACRgY,MAAMhY,GACL9E,KAAKg0D,iBAAc1zD,EACpBN,KAAKk0D,YAAc,EACnBl0D,KAAKm/D,aAAe,EACxB,CACA,IAAA32C,CAAKwhB,GACD,MAAMo1B,EAAQp/D,KAAKm/D,aACnB,GAAIC,EAAMn9D,OAAQ,CACd,MAAM2P,EAAS5R,KAAK6R,YACpB,IAAK,MAAM,MAAErI,EAAM,MAAEgK,KAAY4rD,EACzBxtD,EAAOpI,KAAWgK,GAClB5B,EAAO6F,OAAOjO,EAAO,GAG7BxJ,KAAKm/D,aAAe,EACxB,CACAriD,MAAM0L,KAAKwhB,EACf,CACA,KAAA74B,CAAM6D,EAAKxL,GACP,IAAI,OAAcwL,GACd,OAAO,KAEX,MAAMpD,EAAS5R,KAAK6R,YAEpB,MAxCW,EAACrI,EAAOhG,IAAgB,OAAVgG,EAAiB,MAAO,OAAYpI,KAAKi2B,MAAM7tB,GAAQ,EAAGhG,GAwC5Ew0B,CADPxuB,EAAQ2qD,SAAS3qD,IAAUoI,EAAOpI,KAAWwL,EAAMxL,EAAQ+pD,GAAe3hD,EAAQoD,GAAK,IAAAvG,GAAejF,EAAOwL,GAAMhV,KAAKm/D,cAC/FvtD,EAAO3P,OAAS,EAC7C,CACA,mBAAA+4B,GACI,MAAM,WAAE/nB,EAAW,WAAEC,GAAgBlT,KAAKmT,gBAC1C,IAAI,IAAE9R,EAAI,IAAEmC,GAASxD,KAAKuS,WAAU,GACR,UAAxBvS,KAAK8H,QAAQozC,SACRjoC,IACD5R,EAAM,GAEL6R,IACD1P,EAAMxD,KAAK6R,YAAY5P,OAAS,IAGxCjC,KAAKqB,IAAMA,EACXrB,KAAKwD,IAAMA,CACf,CACA,UAAA23B,GACI,MAAM95B,EAAMrB,KAAKqB,IACXmC,EAAMxD,KAAKwD,IACXgd,EAASxgB,KAAK8H,QAAQ0Y,OACtBtH,EAAQ,GACd,IAAItH,EAAS5R,KAAK6R,YAClBD,EAAiB,IAARvQ,GAAamC,IAAQoO,EAAO3P,OAAS,EAAI2P,EAASA,EAAO0X,MAAMjoB,EAAKmC,EAAM,GACnFxD,KAAKk0D,YAAc9yD,KAAKoC,IAAIoO,EAAO3P,QAAUue,EAAS,EAAI,GAAI,GAC9DxgB,KAAKg0D,YAAch0D,KAAKqB,KAAOmf,EAAS,GAAM,GAC9C,IAAI,IAAI7X,EAAQtH,EAAKsH,GAASnF,EAAKmF,IAC/BuQ,EAAMhW,KAAK,CACPyF,UAGR,OAAOuQ,CACX,CACA,gBAAAzF,CAAiB9K,GACb,OAAOgrD,GAAkBlyD,KAAKzB,KAAM2I,EACxC,CACH,SAAA3B,GACO8V,MAAM9V,YACDhH,KAAK2iB,iBACN3iB,KAAKmpB,gBAAkBnpB,KAAKmpB,eAEpC,CACA,gBAAAlQ,CAAiBtQ,GAIb,MAHqB,kBAAVA,IACPA,EAAQ3I,KAAKmR,MAAMxI,IAEN,OAAVA,EAAiB2J,IAAMtS,KAAK8kB,oBAAoBnc,EAAQ3I,KAAKg0D,aAAeh0D,KAAKk0D,YAC5F,CACA,eAAA/6C,CAAgB3P,GACZ,MAAM0P,EAAQlZ,KAAKkZ,MACnB,OAAI1P,EAAQ,GAAKA,EAAQ0P,EAAMjX,OAAS,EAC7B,KAEJjC,KAAKiZ,iBAAiBC,EAAM1P,GAAOb,MAC9C,CACA,gBAAAqc,CAAiBua,GACb,OAAOn+B,KAAKi2B,MAAMr3B,KAAKg0D,YAAch0D,KAAKy/B,mBAAmBF,GAASv/B,KAAKk0D,YAC/E,CACA,YAAAxxC,GACI,OAAO1iB,KAAK+T,MAChB,GA06CJ8hD,YAAaA,GACbiB,iBAAkBA,GAClBsC,kBAAmBA,GACnBiD,UAAWA,GACXgD,gBAhGA,cAA8BhD,GAC1B5vD,UAAY,aACfA,gBAAkB4vD,GAAU32B,SAC5B,WAAA3lC,CAAY0I,GACLqU,MAAMrU,GACLzI,KAAKs/D,OAAS,GACdt/D,KAAKu/D,aAAUj/D,EACfN,KAAKw/D,iBAAcl/D,CACxB,CACH,WAAA88D,GACO,MAAMnB,EAAaj8D,KAAKy/D,yBAClBb,EAAQ5+D,KAAKs/D,OAASt/D,KAAK0/D,iBAAiBzD,GAClDj8D,KAAKu/D,QAAUhlB,GAAYqkB,EAAO5+D,KAAKqB,KACvCrB,KAAKw/D,YAAcjlB,GAAYqkB,EAAO5+D,KAAKwD,KAAOxD,KAAKu/D,QACvDziD,MAAMsgD,YAAYnB,EACtB,CACH,gBAAAyD,CAAiBzD,GACV,MAAM,IAAE56D,EAAI,IAAEmC,GAASxD,KACjBgC,EAAQ,GACR48D,EAAQ,GACd,IAAIz8D,EAAGoH,EAAMgI,EAAMsH,EAAMyM,EACzB,IAAInjB,EAAI,EAAGoH,EAAO0yD,EAAWh6D,OAAQE,EAAIoH,IAAQpH,EAC7C0W,EAAOojD,EAAW95D,GACd0W,GAAQxX,GAAOwX,GAAQrV,GACvBxB,EAAMkB,KAAK2V,GAGnB,GAAI7W,EAAMC,OAAS,EACf,MAAO,CACH,CACI+5D,KAAM36D,EACN4qB,IAAK,GAET,CACI+vC,KAAMx4D,EACNyoB,IAAK,IAIjB,IAAI9pB,EAAI,EAAGoH,EAAOvH,EAAMC,OAAQE,EAAIoH,IAAQpH,EACxCmjB,EAAOtjB,EAAMG,EAAI,GACjBoP,EAAOvP,EAAMG,EAAI,GACjB0W,EAAO7W,EAAMG,GACTf,KAAKi2B,OAAO/R,EAAO/T,GAAQ,KAAOsH,GAClC+lD,EAAM17D,KAAK,CACP84D,KAAMnjD,EACNoT,IAAK9pB,GAAKoH,EAAO,KAI7B,OAAOq1D,CACX,CACH,SAAA5B,GACO,MAAM37D,EAAMrB,KAAKqB,IACXmC,EAAMxD,KAAKwD,IACjB,IAAIy4D,EAAan/C,MAAM4gD,oBAOvB,OANKzB,EAAWtvC,SAAStrB,IAAS46D,EAAWh6D,QACzCg6D,EAAWxkD,OAAO,EAAG,EAAGpW,GAEvB46D,EAAWtvC,SAASnpB,IAA8B,IAAtBy4D,EAAWh6D,QACxCg6D,EAAW/4D,KAAKM,GAEby4D,EAAWvjD,KAAK,CAACC,EAAG/E,IAAI+E,EAAI/E,EACvC,CACH,sBAAA6rD,GACO,IAAIxD,EAAaj8D,KAAKqY,OAAO/P,KAAO,GACpC,GAAI2zD,EAAWh6D,OACX,OAAOg6D,EAEX,MAAM1sD,EAAOvP,KAAK09D,oBACZlqD,EAAQxT,KAAK88D,qBAOnB,OALIb,EADA1sD,EAAKtN,QAAUuR,EAAMvR,OACRjC,KAAK2+D,UAAUpvD,EAAKiJ,OAAOhF,IAE3BjE,EAAKtN,OAASsN,EAAOiE,EAEtCyoD,EAAaj8D,KAAKqY,OAAO/P,IAAM2zD,EACxBA,CACX,CACH,kBAAAqB,CAAmB30D,GACZ,OAAQ4xC,GAAYv6C,KAAKs/D,OAAQ32D,GAAS3I,KAAKu/D,SAAWv/D,KAAKw/D,WACnE,CACH,gBAAAx6C,CAAiBua,GACV,MAAM2+B,EAAUl+D,KAAKy8D,SACfj9B,EAAUx/B,KAAKy/B,mBAAmBF,GAAS2+B,EAAQ95D,OAAS85D,EAAQh1D,IAC1E,OAAOqxC,GAAYv6C,KAAKs/D,OAAQ9/B,EAAUx/B,KAAKw/D,YAAcx/D,KAAKu/D,SAAS,EAC/E,KAaJ,MAAMI,GAAgB,CAClB39C,EACA3N,GACAuH,GACA7P,G","sources":["webpack://loan-calculator/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","iAxisKey","vAxisKey","adata","Array","convertObjectDataToArray","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","DoughnutController","animateRotate","animateScale","numbers","cutout","rotation","circumference","radius","spacing","_scriptable","name","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","getDataVisibility","onClick","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","width","height","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","isNaN","locale","borderAlign","hoverBorderWidth","offset","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","display","beginAtZero","grid","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","obj","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","indexOf","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","BubbleController","points","point","iPixel","vPixel","skip","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","result","distanceToDefinedLo","slice","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lineHeight","titleAlign","align","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaults","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","rect","clipSelf","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","rad","LinearScaleBase","_startValue","_endValue","_valueRange","isFinite","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","tickValue","generateTicks$1","LinearScale","formatters","numeric","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}