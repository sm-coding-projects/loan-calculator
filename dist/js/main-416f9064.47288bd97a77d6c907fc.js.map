{"version":3,"file":"js/main-416f9064.47288bd97a77d6c907fc.js","mappings":"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","sources":["webpack://loan-calculator/./src/js/utils/keyboard-navigation.js","webpack://loan-calculator/./src/js/services/storage.service.js","webpack://loan-calculator/./src/js/utils/loading-manager.js","webpack://loan-calculator/./src/js/utils/formatters.js","webpack://loan-calculator/./src/js/utils/translations.js","webpack://loan-calculator/./src/js/utils/tooltips.js","webpack://loan-calculator/./src/js/utils/animation-manager.js","webpack://loan-calculator/./src/js/utils/accessibility.js","webpack://loan-calculator/./src/js/services/calculation-manager.service.js","webpack://loan-calculator/./src/js/services/language.service.js","webpack://loan-calculator/./src/js/utils/validators.js"],"sourcesContent":["/**\n * Keyboard Navigation Utility\n * Provides comprehensive keyboard navigation testing and enhancement\n * Implements requirements 5.2, 5.4\n */\n\nimport { announceToScreenReader } from './accessibility.js';\n\nclass KeyboardNavigationManager {\n  constructor() {\n    this.focusableElements = [];\n    this.currentFocusIndex = -1;\n    this.keyboardShortcuts = new Map();\n    this.focusTraps = new Map();\n    this.isTestMode = false;\n    this.testResults = [];\n\n    this.init();\n  }\n\n  /**\n   * Initialize keyboard navigation manager\n   */\n  init() {\n    this.setupGlobalKeyboardHandlers();\n    this.setupFocusManagement();\n    this.registerDefaultShortcuts();\n    this.enhanceFocusIndicators();\n  }\n\n  /**\n   * Setup global keyboard event handlers\n   */\n  setupGlobalKeyboardHandlers() {\n    document.addEventListener('keydown', (e) => {\n      this.handleGlobalKeydown(e);\n    });\n\n    // Track focus changes for testing\n    document.addEventListener('focusin', (e) => {\n      this.onFocusChange(e.target);\n    });\n\n    // Handle escape key globally\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.handleEscapeKey(e);\n      }\n    });\n  }\n\n  /**\n   * Handle global keydown events\n   * @param {KeyboardEvent} e - Keyboard event\n   */\n  handleGlobalKeydown(e) {\n    // Handle keyboard shortcuts\n    const shortcutKey = this.getShortcutKey(e);\n    if (this.keyboardShortcuts.has(shortcutKey)) {\n      const shortcut = this.keyboardShortcuts.get(shortcutKey);\n      if (shortcut.handler) {\n        e.preventDefault();\n        shortcut.handler(e);\n        announceToScreenReader(`Activated ${shortcut.description}`);\n      }\n    }\n\n    // Handle tab navigation enhancements\n    if (e.key === 'Tab') {\n      this.handleTabNavigation(e);\n    }\n\n    // Handle arrow key navigation in specific contexts\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n      this.handleArrowNavigation(e);\n    }\n  }\n\n  /**\n   * Handle tab navigation with enhancements\n   * @param {KeyboardEvent} e - Keyboard event\n   */\n  handleTabNavigation(e) {\n    const { activeElement } = document;\n\n    // Check if we're in a focus trap\n    for (const [container, trap] of this.focusTraps) {\n      if (container.contains(activeElement)) {\n        this.handleFocusTrapNavigation(e, container, trap);\n        return;\n      }\n    }\n\n    // Skip hidden or disabled elements\n    const focusableElements = this.getFocusableElements();\n    const currentIndex = focusableElements.indexOf(activeElement);\n\n    if (currentIndex !== -1) {\n      let nextIndex = e.shiftKey ? currentIndex - 1 : currentIndex + 1;\n\n      // Find next valid focusable element\n      while (nextIndex >= 0 && nextIndex < focusableElements.length) {\n        const nextElement = focusableElements[nextIndex];\n        if (this.isElementFocusable(nextElement)) {\n          break;\n        }\n        nextIndex = e.shiftKey ? nextIndex - 1 : nextIndex + 1;\n      }\n    }\n  }\n\n  /**\n   * Handle arrow key navigation in specific contexts\n   * @param {KeyboardEvent} e - Keyboard event\n   */\n  handleArrowNavigation(e) {\n    const { activeElement } = document;\n\n    // Handle table navigation\n    if (activeElement.closest('table')) {\n      this.handleTableArrowNavigation(e, activeElement);\n    }\n\n    // Handle form group navigation\n    if (activeElement.closest('.form-group')) {\n      this.handleFormGroupArrowNavigation(e, activeElement);\n    }\n\n    // Handle slider navigation\n    if (activeElement.type === 'range') {\n      // Let default behavior handle slider navigation\n\n    }\n  }\n\n  /**\n   * Handle table arrow key navigation\n   * @param {KeyboardEvent} e - Keyboard event\n   * @param {HTMLElement} activeElement - Currently focused element\n   */\n  handleTableArrowNavigation(e, activeElement) {\n    const table = activeElement.closest('table');\n    if (!table) return;\n\n    const cells = Array.from(table.querySelectorAll('th, td'));\n    const currentIndex = cells.indexOf(activeElement);\n    if (currentIndex === -1) return;\n\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const currentRow = activeElement.closest('tr');\n    const currentRowIndex = rows.indexOf(currentRow);\n    const cellsInRow = Array.from(currentRow.querySelectorAll('th, td'));\n    const cellIndexInRow = cellsInRow.indexOf(activeElement);\n\n    let targetElement = null;\n\n    switch (e.key) {\n      case 'ArrowUp':\n        if (currentRowIndex > 0) {\n          const targetRow = rows[currentRowIndex - 1];\n          const targetCells = Array.from(targetRow.querySelectorAll('th, td'));\n          targetElement = targetCells[Math.min(cellIndexInRow, targetCells.length - 1)];\n        }\n        break;\n\n      case 'ArrowDown':\n        if (currentRowIndex < rows.length - 1) {\n          const targetRow = rows[currentRowIndex + 1];\n          const targetCells = Array.from(targetRow.querySelectorAll('th, td'));\n          targetElement = targetCells[Math.min(cellIndexInRow, targetCells.length - 1)];\n        }\n        break;\n\n      case 'ArrowLeft':\n        if (cellIndexInRow > 0) {\n          targetElement = cellsInRow[cellIndexInRow - 1];\n        }\n        break;\n\n      case 'ArrowRight':\n        if (cellIndexInRow < cellsInRow.length - 1) {\n          targetElement = cellsInRow[cellIndexInRow + 1];\n        }\n        break;\n    }\n\n    if (targetElement) {\n      e.preventDefault();\n      targetElement.focus();\n      announceToScreenReader(`Moved to ${targetElement.textContent || 'cell'}`);\n    }\n  }\n\n  /**\n   * Handle form group arrow navigation\n   * @param {KeyboardEvent} e - Keyboard event\n   * @param {HTMLElement} activeElement - Currently focused element\n   */\n  handleFormGroupArrowNavigation(e, activeElement) {\n    const formGroup = activeElement.closest('.form-group');\n    if (!formGroup) return;\n\n    // Handle slider and input synchronization\n    if (activeElement.type === 'range' || activeElement.classList.contains('form-slider')) {\n      const input = formGroup.querySelector('input:not([type=\"range\"])');\n      if (input && (e.key === 'ArrowUp' || e.key === 'ArrowDown')) {\n        // Allow default slider behavior, but sync with input\n        setTimeout(() => {\n          input.value = activeElement.value;\n          input.dispatchEvent(new Event('input', { bubbles: true }));\n        }, 0);\n      }\n    }\n  }\n\n  /**\n   * Handle escape key functionality\n   * @param {KeyboardEvent} e - Keyboard event\n   */\n  handleEscapeKey(e) {\n    // Close any open modals or dropdowns\n    const openModals = document.querySelectorAll('[role=\"dialog\"][aria-hidden=\"false\"]');\n    const openDropdowns = document.querySelectorAll('[aria-expanded=\"true\"]');\n\n    if (openModals.length > 0) {\n      const modal = openModals[openModals.length - 1]; // Close topmost modal\n      const closeButton = modal.querySelector('[data-dismiss=\"modal\"], .modal-close');\n      if (closeButton) {\n        closeButton.click();\n      }\n      e.preventDefault();\n      return;\n    }\n\n    if (openDropdowns.length > 0) {\n      openDropdowns.forEach((dropdown) => {\n        dropdown.setAttribute('aria-expanded', 'false');\n      });\n      e.preventDefault();\n      return;\n    }\n\n    // Clear any active states\n    const activeElements = document.querySelectorAll('.active, .selected');\n    if (activeElements.length > 0) {\n      activeElements.forEach((el) => {\n        el.classList.remove('active', 'selected');\n      });\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * Setup focus management\n   */\n  setupFocusManagement() {\n    // Add skip to content link\n    this.addSkipToContentLink();\n\n    // Enhance focus indicators\n    this.enhanceFocusIndicators();\n\n    // Setup focus restoration\n    this.setupFocusRestoration();\n  }\n\n  /**\n   * Add skip to content link\n   */\n  addSkipToContentLink() {\n    const existingSkipLink = document.querySelector('.skip-to-content');\n    if (existingSkipLink) return;\n\n    const skipLink = document.createElement('a');\n    skipLink.href = '#main-content';\n    skipLink.className = 'skip-to-content';\n    skipLink.textContent = 'Skip to main content';\n    skipLink.setAttribute('aria-label', 'Skip to main content');\n\n    skipLink.addEventListener('click', (e) => {\n      e.preventDefault();\n      const mainContent = document.querySelector('#main-content, main, [role=\"main\"]');\n      if (mainContent) {\n        mainContent.focus();\n        mainContent.scrollIntoView();\n        announceToScreenReader('Skipped to main content');\n      }\n    });\n\n    document.body.insertBefore(skipLink, document.body.firstChild);\n  }\n\n  /**\n   * Enhance focus indicators\n   */\n  enhanceFocusIndicators() {\n    // Add focus-visible polyfill behavior\n    document.addEventListener('keydown', () => {\n      document.body.classList.add('keyboard-navigation');\n    });\n\n    document.addEventListener('mousedown', () => {\n      document.body.classList.remove('keyboard-navigation');\n    });\n\n    // Add enhanced focus styles\n    const style = document.createElement('style');\n    style.textContent = `\n      /* Enhanced keyboard navigation focus indicators */\n      .keyboard-navigation *:focus {\n        outline: 2px solid var(--primary-600, #2563eb) !important;\n        outline-offset: 2px !important;\n        box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.25) !important;\n        border-radius: 4px;\n      }\n      \n      /* Special focus for interactive elements */\n      .keyboard-navigation button:focus,\n      .keyboard-navigation .form-button:focus,\n      .keyboard-navigation input:focus,\n      .keyboard-navigation select:focus,\n      .keyboard-navigation textarea:focus {\n        outline: 2px solid var(--primary-600, #2563eb) !important;\n        outline-offset: 2px !important;\n        box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.25) !important;\n      }\n      \n      /* Focus for table elements */\n      .keyboard-navigation th:focus,\n      .keyboard-navigation td:focus {\n        outline: 2px solid var(--primary-600, #2563eb) !important;\n        outline-offset: -2px !important;\n        background-color: rgba(37, 99, 235, 0.1) !important;\n      }\n      \n      /* Focus for custom elements */\n      .keyboard-navigation .sortable:focus,\n      .keyboard-navigation .pagination-item:focus,\n      .keyboard-navigation .term-preset:focus {\n        outline: 2px solid var(--primary-600, #2563eb) !important;\n        outline-offset: 2px !important;\n        box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.25) !important;\n      }\n      \n      /* Focus for sliders */\n      .keyboard-navigation .form-slider:focus {\n        outline: 2px solid var(--primary-600, #2563eb) !important;\n        outline-offset: 2px !important;\n      }\n      \n      /* Focus for info icons */\n      .keyboard-navigation .info-icon:focus {\n        outline: 2px solid var(--primary-600, #2563eb) !important;\n        outline-offset: 2px !important;\n        border-radius: 50% !important;\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Setup focus restoration\n   */\n  setupFocusRestoration() {\n    // Store focus before page changes\n    window.addEventListener('beforeunload', () => {\n      const { activeElement } = document;\n      if (activeElement && activeElement.id) {\n        sessionStorage.setItem('lastFocusedElement', activeElement.id);\n      }\n    });\n\n    // Restore focus on page load\n    window.addEventListener('load', () => {\n      const lastFocusedId = sessionStorage.getItem('lastFocusedElement');\n      if (lastFocusedId) {\n        const element = document.getElementById(lastFocusedId);\n        if (element && this.isElementFocusable(element)) {\n          setTimeout(() => {\n            element.focus();\n          }, 100);\n        }\n        sessionStorage.removeItem('lastFocusedElement');\n      }\n    });\n  }\n\n  /**\n   * Register default keyboard shortcuts\n   */\n  registerDefaultShortcuts() {\n    // Calculator shortcuts\n    this.registerShortcut('ctrl+enter', {\n      description: 'Calculate loan',\n      handler: () => {\n        const calculateButton = document.querySelector('#calculate-button');\n        if (calculateButton && !calculateButton.disabled) {\n          calculateButton.click();\n        }\n      },\n    });\n\n    this.registerShortcut('ctrl+r', {\n      description: 'Reset form',\n      handler: (e) => {\n        e.preventDefault();\n        const resetButton = document.querySelector('#reset-button');\n        if (resetButton) {\n          resetButton.click();\n        }\n      },\n    });\n\n    // Navigation shortcuts\n    this.registerShortcut('alt+1', {\n      description: 'Go to calculator form',\n      handler: () => {\n        const form = document.querySelector('#calculator-form-container');\n        if (form) {\n          const firstInput = form.querySelector('input, select, button');\n          if (firstInput) {\n            firstInput.focus();\n          }\n        }\n      },\n    });\n\n    this.registerShortcut('alt+2', {\n      description: 'Go to results',\n      handler: () => {\n        const results = document.querySelector('#results-display-container');\n        if (results) {\n          results.focus();\n        }\n      },\n    });\n\n    this.registerShortcut('alt+3', {\n      description: 'Go to amortization table',\n      handler: () => {\n        const table = document.querySelector('#amortization-table-container table');\n        if (table) {\n          const firstCell = table.querySelector('th, td');\n          if (firstCell) {\n            firstCell.focus();\n          }\n        }\n      },\n    });\n\n    // Help shortcut\n    this.registerShortcut('f1', {\n      description: 'Show keyboard shortcuts help',\n      handler: (e) => {\n        e.preventDefault();\n        this.showKeyboardShortcutsHelp();\n      },\n    });\n  }\n\n  /**\n   * Register a keyboard shortcut\n   * @param {string} keys - Key combination (e.g., 'ctrl+enter')\n   * @param {Object} shortcut - Shortcut configuration\n   */\n  registerShortcut(keys, shortcut) {\n    this.keyboardShortcuts.set(keys, shortcut);\n  }\n\n  /**\n   * Get shortcut key from keyboard event\n   * @param {KeyboardEvent} e - Keyboard event\n   * @returns {string} Shortcut key string\n   */\n  getShortcutKey(e) {\n    const parts = [];\n\n    if (e.ctrlKey) parts.push('ctrl');\n    if (e.altKey) parts.push('alt');\n    if (e.shiftKey) parts.push('shift');\n    if (e.metaKey) parts.push('meta');\n\n    parts.push(e.key.toLowerCase());\n\n    return parts.join('+');\n  }\n\n  /**\n   * Show keyboard shortcuts help\n   */\n  showKeyboardShortcutsHelp() {\n    const helpContent = Array.from(this.keyboardShortcuts.entries())\n      .map(([keys, shortcut]) => `${keys.toUpperCase()}: ${shortcut.description}`)\n      .join('\\n');\n\n    const helpText = `Keyboard Shortcuts:\\n\\n${helpContent}\\n\\nPress Escape to close this help.`;\n\n    // Create help modal\n    const modal = document.createElement('div');\n    modal.className = 'keyboard-help-modal';\n    modal.setAttribute('role', 'dialog');\n    modal.setAttribute('aria-labelledby', 'keyboard-help-title');\n    modal.setAttribute('aria-modal', 'true');\n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(0, 0, 0, 0.5);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000;\n    `;\n\n    const content = document.createElement('div');\n    content.style.cssText = `\n      background: white;\n      padding: 2rem;\n      border-radius: 8px;\n      max-width: 500px;\n      max-height: 80vh;\n      overflow-y: auto;\n      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n    `;\n\n    content.innerHTML = `\n      <h2 id=\"keyboard-help-title\">Keyboard Shortcuts</h2>\n      <pre style=\"white-space: pre-wrap; font-family: monospace; line-height: 1.5;\">${helpContent}</pre>\n      <button class=\"close-help\" style=\"margin-top: 1rem; padding: 0.5rem 1rem; background: #2563eb; color: white; border: none; border-radius: 4px; cursor: pointer;\">Close (Escape)</button>\n    `;\n\n    modal.appendChild(content);\n    document.body.appendChild(modal);\n\n    // Focus the close button\n    const closeButton = content.querySelector('.close-help');\n    closeButton.focus();\n\n    // Handle close\n    const closeModal = () => {\n      document.body.removeChild(modal);\n      announceToScreenReader('Keyboard shortcuts help closed');\n    };\n\n    closeButton.addEventListener('click', closeModal);\n    modal.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        e.preventDefault();\n        closeModal();\n      }\n    });\n\n    // Trap focus in modal\n    this.trapFocus(modal);\n\n    announceToScreenReader('Keyboard shortcuts help opened');\n  }\n\n  /**\n   * Handle focus trap navigation\n   * @param {KeyboardEvent} e - Keyboard event\n   * @param {HTMLElement} container - Container element\n   * @param {Object} trap - Trap configuration\n   */\n  handleFocusTrapNavigation(e, container, trap) {\n    if (e.key !== 'Tab') return;\n\n    const focusableElements = container.querySelectorAll(\n      'a[href], button, textarea, input, select, [tabindex]:not([tabindex=\"-1\"])',\n    );\n\n    if (focusableElements.length === 0) return;\n\n    const firstElement = focusableElements[0];\n    const lastElement = focusableElements[focusableElements.length - 1];\n\n    if (e.shiftKey) {\n      if (document.activeElement === firstElement) {\n        e.preventDefault();\n        lastElement.focus();\n      }\n    } else if (document.activeElement === lastElement) {\n      e.preventDefault();\n      firstElement.focus();\n    }\n  }\n\n  /**\n   * Trap focus within a container\n   * @param {HTMLElement} container - Container to trap focus in\n   */\n  trapFocus(container) {\n    const focusableElements = container.querySelectorAll(\n      'a[href], button, textarea, input, select, [tabindex]:not([tabindex=\"-1\"])',\n    );\n\n    if (focusableElements.length === 0) return;\n\n    const firstElement = focusableElements[0];\n    const lastElement = focusableElements[focusableElements.length - 1];\n\n    const trapHandler = (e) => {\n      if (e.key === 'Tab') {\n        if (e.shiftKey) {\n          if (document.activeElement === firstElement) {\n            e.preventDefault();\n            lastElement.focus();\n          }\n        } else if (document.activeElement === lastElement) {\n          e.preventDefault();\n          firstElement.focus();\n        }\n      }\n    };\n\n    container.addEventListener('keydown', trapHandler);\n    this.focusTraps.set(container, { handler: trapHandler, focusableElements });\n  }\n\n  /**\n   * Remove focus trap\n   * @param {HTMLElement} container - Container to remove trap from\n   */\n  removeFocusTrap(container) {\n    const trap = this.focusTraps.get(container);\n    if (trap) {\n      container.removeEventListener('keydown', trap.handler);\n      this.focusTraps.delete(container);\n    }\n  }\n\n  /**\n   * Get all focusable elements in the document\n   * @returns {Array<HTMLElement>} Array of focusable elements\n   */\n  getFocusableElements() {\n    const selector = [\n      'a[href]',\n      'button:not([disabled])',\n      'textarea:not([disabled])',\n      'input:not([disabled]):not([type=\"hidden\"])',\n      'select:not([disabled])',\n      '[tabindex]:not([tabindex=\"-1\"])',\n      '[role=\"button\"]:not([disabled])',\n      '[role=\"link\"]:not([disabled])',\n      '[role=\"menuitem\"]:not([disabled])',\n      '[role=\"tab\"]:not([disabled])',\n    ].join(', ');\n\n    return Array.from(document.querySelectorAll(selector))\n      .filter((el) => this.isElementFocusable(el));\n  }\n\n  /**\n   * Check if an element is focusable\n   * @param {HTMLElement} element - Element to check\n   * @returns {boolean} True if element is focusable\n   */\n  isElementFocusable(element) {\n    if (!element || element.disabled) return false;\n\n    // Check if element is in the document\n    if (!document.contains(element)) return false;\n\n    // Check if element is visible\n    const style = window.getComputedStyle(element);\n    if (style.display === 'none' || style.visibility === 'hidden') return false;\n\n    // Check if element has zero dimensions (but allow elements with overflow hidden)\n    const rect = element.getBoundingClientRect();\n    if (rect.width === 0 && rect.height === 0 && style.overflow !== 'hidden') return false;\n\n    // Check if element is hidden by parent\n    let parent = element.parentElement;\n    while (parent && parent !== document.body) {\n      const parentStyle = window.getComputedStyle(parent);\n      if (parentStyle.display === 'none' || parentStyle.visibility === 'hidden') return false;\n      parent = parent.parentElement;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle focus change for testing\n   * @param {HTMLElement} element - Newly focused element\n   */\n  onFocusChange(element) {\n    if (this.isTestMode) {\n      this.testResults.push({\n        timestamp: Date.now(),\n        element,\n        tagName: element.tagName,\n        id: element.id,\n        className: element.className,\n        textContent: element.textContent?.substring(0, 50),\n        tabIndex: element.tabIndex,\n        role: element.getAttribute('role'),\n        ariaLabel: element.getAttribute('aria-label'),\n      });\n    }\n  }\n\n  /**\n   * Start keyboard navigation testing\n   */\n  startTesting() {\n    this.isTestMode = true;\n    this.testResults = [];\n    announceToScreenReader('Keyboard navigation testing started. Use Tab to navigate through all elements.');\n\n    console.log('🎯 Keyboard Navigation Testing Started');\n    console.log('Use Tab/Shift+Tab to navigate through all focusable elements');\n    console.log('Press Ctrl+Shift+T to stop testing and view results');\n\n    // Add test stop shortcut\n    this.registerShortcut('ctrl+shift+t', {\n      description: 'Stop keyboard navigation testing',\n      handler: () => this.stopTesting(),\n    });\n  }\n\n  /**\n   * Stop keyboard navigation testing and show results\n   */\n  stopTesting() {\n    this.isTestMode = false;\n\n    console.log('🎯 Keyboard Navigation Test Results:');\n    console.log(`Total focus events: ${this.testResults.length}`);\n\n    // Analyze tab order\n    const tabOrder = this.testResults.map((result, index) => ({\n      order: index + 1,\n      element: `${result.tagName}${result.id ? `#${result.id}` : ''}${result.className ? `.${result.className.split(' ')[0]}` : ''}`,\n      text: result.textContent,\n      tabIndex: result.tabIndex,\n      role: result.role,\n      ariaLabel: result.ariaLabel,\n    }));\n\n    console.table(tabOrder);\n\n    // Check for issues\n    const issues = this.analyzeTabOrder(this.testResults);\n    if (issues.length > 0) {\n      console.warn('🚨 Keyboard Navigation Issues Found:');\n      issues.forEach((issue) => console.warn(`- ${issue}`));\n    } else {\n      console.log('✅ No keyboard navigation issues detected');\n    }\n\n    announceToScreenReader(`Keyboard navigation testing completed. ${issues.length} issues found.`);\n\n    // Remove test shortcut\n    this.keyboardShortcuts.delete('ctrl+shift+t');\n\n    return {\n      tabOrder,\n      issues,\n      totalElements: this.testResults.length,\n    };\n  }\n\n  /**\n   * Analyze tab order for issues\n   * @param {Array} testResults - Test results array\n   * @returns {Array<string>} Array of issues found\n   */\n  analyzeTabOrder(testResults) {\n    const issues = [];\n\n    // Check for elements without proper labels\n    testResults.forEach((result, index) => {\n      if (['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA'].includes(result.tagName)) {\n        if (!result.ariaLabel && !result.textContent && !result.id) {\n          issues.push(`Element ${index + 1} (${result.tagName}) lacks proper labeling`);\n        }\n      }\n    });\n\n    // Check for skip links\n    const hasSkipLink = testResults.some((result) => result.className?.includes('skip-to-content')\n      || result.textContent?.toLowerCase().includes('skip'));\n\n    if (!hasSkipLink) {\n      issues.push('No skip to content link found');\n    }\n\n    // Check for logical tab order\n    const formElements = testResults.filter((result) => ['INPUT', 'SELECT', 'TEXTAREA', 'BUTTON'].includes(result.tagName));\n\n    if (formElements.length > 0) {\n      // Check if form elements are grouped logically\n      let lastFormIndex = -1;\n      let formGroupBreaks = 0;\n\n      testResults.forEach((result, index) => {\n        if (['INPUT', 'SELECT', 'TEXTAREA'].includes(result.tagName)) {\n          if (lastFormIndex !== -1 && index - lastFormIndex > 3) {\n            formGroupBreaks++;\n          }\n          lastFormIndex = index;\n        }\n      });\n\n      if (formGroupBreaks > 2) {\n        issues.push('Form elements may not be grouped logically in tab order');\n      }\n    }\n\n    return issues;\n  }\n\n  /**\n   * Test all keyboard functionality\n   * @returns {Promise<Object>} Test results\n   */\n  async testAllKeyboardFunctionality() {\n    console.log('🧪 Starting comprehensive keyboard functionality test...');\n\n    const testResults = {\n      focusableElements: [],\n      shortcuts: [],\n      navigation: [],\n      issues: [],\n    };\n\n    // Test 1: Find all focusable elements\n    const focusableElements = this.getFocusableElements();\n    testResults.focusableElements = focusableElements.map((el) => ({\n      tagName: el.tagName,\n      id: el.id,\n      className: el.className,\n      tabIndex: el.tabIndex,\n      role: el.getAttribute('role'),\n      ariaLabel: el.getAttribute('aria-label'),\n      isVisible: this.isElementFocusable(el),\n    }));\n\n    console.log(`Found ${focusableElements.length} focusable elements`);\n\n    // Test 2: Test keyboard shortcuts\n    for (const [keys, shortcut] of this.keyboardShortcuts) {\n      testResults.shortcuts.push({\n        keys,\n        description: shortcut.description,\n        hasHandler: typeof shortcut.handler === 'function',\n      });\n    }\n\n    console.log(`Found ${testResults.shortcuts.length} keyboard shortcuts`);\n\n    // Test 3: Test navigation patterns\n    const tables = document.querySelectorAll('table');\n    const forms = document.querySelectorAll('form');\n\n    testResults.navigation.push({\n      type: 'tables',\n      count: tables.length,\n      hasArrowNavigation: tables.length > 0,\n    });\n\n    testResults.navigation.push({\n      type: 'forms',\n      count: forms.length,\n      hasTabNavigation: forms.length > 0,\n    });\n\n    // Test 4: Check for common issues\n\n    // Check focus indicators\n    const elementsWithoutFocusStyles = focusableElements.filter((el) => {\n      const styles = window.getComputedStyle(el, ':focus');\n      return styles.outline === 'none' && !styles.boxShadow;\n    });\n\n    if (elementsWithoutFocusStyles.length > 0) {\n      testResults.issues.push(`${elementsWithoutFocusStyles.length} elements may lack proper focus indicators`);\n    }\n\n    // Check for skip links\n    const skipLinks = document.querySelectorAll('.skip-to-content, [href=\"#main-content\"]');\n    if (skipLinks.length === 0) {\n      testResults.issues.push('No skip to content links found');\n    }\n\n    // Check for proper headings structure\n    const headings = Array.from(document.querySelectorAll('h1, h2, h3, h4, h5, h6'));\n    if (headings.length === 0) {\n      testResults.issues.push('No heading structure found');\n    }\n\n    console.log('🧪 Keyboard functionality test completed');\n    console.table(testResults.focusableElements);\n\n    if (testResults.issues.length > 0) {\n      console.warn('🚨 Issues found:');\n      testResults.issues.forEach((issue) => console.warn(`- ${issue}`));\n    } else {\n      console.log('✅ No major keyboard navigation issues detected');\n    }\n\n    return testResults;\n  }\n}\n\n// Create global instance\nconst keyboardNavigationManager = new KeyboardNavigationManager();\n\n// Export for use in other modules\nexport default keyboardNavigationManager;\n\n// Export individual functions for direct use\nexport {\n  KeyboardNavigationManager,\n};\n","/**\n * Storage Service\n * Manages saving and retrieving loan calculations\n * Implements requirements 3.1, 3.2, 3.6\n */\n\nimport Loan from '../models/loan.model';\nimport { AmortizationSchedule } from '../models/amortization.model';\n\nclass StorageService {\n  /**\n   * Create a new storage service\n   * @param {Object} options - Configuration options\n   * @param {string} [options.storageKey] - Key used for localStorage\n   * @param {string} [options.version] - Data version for compatibility\n   */\n  constructor(options = {}) {\n    this.storageKey = options.storageKey || 'loan-calculator-data';\n    this.version = options.version || '1.0';\n\n    // Initialize storage if needed\n    this._initializeStorage();\n  }\n\n  /**\n   * Initialize the storage with default structure if it doesn't exist\n   * @private\n   */\n  _initializeStorage() {\n    try {\n      // Check if storage exists\n      const data = localStorage.getItem(this.storageKey);\n\n      // If not, create default structure\n      if (!data) {\n        const defaultData = {\n          version: this.version,\n          lastUpdated: new Date().toISOString(),\n          calculations: [],\n        };\n\n        localStorage.setItem(this.storageKey, JSON.stringify(defaultData));\n      } else {\n        // If it exists but has an old version, migrate it\n        const parsedData = JSON.parse(data);\n        if (parsedData.version !== this.version) {\n          this._migrateData(parsedData);\n        }\n      }\n    } catch (error) {\n      console.error('Error initializing storage:', error);\n    }\n  }\n\n  /**\n   * Migrate data from an older version to the current version\n   * @param {Object} oldData - Data in the old format\n   * @private\n   */\n  _migrateData(oldData) {\n    // This is where version-specific migrations would happen\n    // For now, we'll just update the version and save it back\n\n    const migratedData = {\n      ...oldData,\n      version: this.version,\n      lastUpdated: new Date().toISOString(),\n    };\n\n    // Ensure calculations array exists\n    if (!migratedData.calculations) {\n      migratedData.calculations = [];\n    }\n\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(migratedData));\n      console.log(`Storage data migrated to version ${this.version}`);\n    } catch (error) {\n      console.error('Error migrating storage data:', error);\n    }\n  }\n\n  /**\n   * Get all stored data\n   * @returns {Object} The full storage data object\n   * @private\n   */\n  _getData() {\n    try {\n      const data = localStorage.getItem(this.storageKey);\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      console.error('Error reading from storage:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Save data to storage\n   * @param {Object} data - Data to save\n   * @returns {boolean} Success status\n   * @private\n   */\n  _saveData(data) {\n    try {\n      // Update the last updated timestamp\n      data.lastUpdated = new Date().toISOString();\n\n      // Save to localStorage\n      localStorage.setItem(this.storageKey, JSON.stringify(data));\n      return true;\n    } catch (error) {\n      // Handle storage errors (e.g., quota exceeded)\n      console.error('Error saving to storage:', error);\n\n      // If it's a quota error, try to free up space\n      if (error.name === 'QuotaExceededError'\n          || error.name === 'NS_ERROR_DOM_QUOTA_REACHED'\n          || error.code === 22) {\n        this._handleStorageLimit();\n      }\n\n      return false;\n    }\n  }\n\n  /**\n   * Handle storage limit errors by removing oldest calculations\n   * @private\n   */\n  _handleStorageLimit() {\n    try {\n      const data = this._getData();\n\n      if (data && data.calculations && data.calculations.length > 0) {\n        // Sort calculations by date (oldest first)\n        data.calculations.sort((a, b) => new Date(a.updatedAt) - new Date(b.updatedAt));\n\n        // Remove the oldest calculation\n        data.calculations.shift();\n\n        // Try to save again\n        this._saveData(data);\n\n        console.warn('Storage limit reached. Removed oldest calculation to free space.');\n      }\n    } catch (error) {\n      console.error('Error handling storage limit:', error);\n    }\n  }\n\n  /**\n   * Save a loan calculation to storage\n   * @param {Loan} loan - Loan object to save\n   * @param {AmortizationSchedule} [amortizationSchedule] - Optional amortization schedule\n   * @returns {string} ID of the saved calculation or empty string if failed\n   */\n  saveCalculation(loan, amortizationSchedule = null) {\n    try {\n      if (!loan) {\n        throw new Error('No loan data provided');\n      }\n\n      // Get current data\n      const data = this._getData();\n      if (!data) {\n        throw new Error('Could not access storage');\n      }\n\n      // Prepare calculation object\n      const calculationData = {\n        loan: loan.toJSON(),\n        amortizationSchedule: amortizationSchedule ? amortizationSchedule.toJSON() : null,\n        savedAt: new Date().toISOString(),\n      };\n\n      // Check if this is an update or a new calculation\n      const existingIndex = data.calculations.findIndex((calc) => calc.loan.id === loan.id);\n\n      if (existingIndex >= 0) {\n        // Update existing calculation\n        data.calculations[existingIndex] = calculationData;\n      } else {\n        // Add new calculation\n        data.calculations.push(calculationData);\n      }\n\n      // Save back to storage\n      if (this._saveData(data)) {\n        return loan.id;\n      }\n      throw new Error('Failed to save calculation');\n    } catch (error) {\n      console.error('Error saving calculation:', error);\n      return '';\n    }\n  }\n\n  /**\n   * Get all saved calculations\n   * @returns {Array} Array of loan objects\n   */\n  getCalculations() {\n    try {\n      const data = this._getData();\n\n      if (!data || !data.calculations) {\n        return [];\n      }\n\n      // Convert stored JSON back to Loan objects\n      return data.calculations.map((calc) => {\n        const loan = Loan.fromJSON(calc.loan);\n        return {\n          loan,\n          savedAt: new Date(calc.savedAt),\n        };\n      });\n    } catch (error) {\n      console.error('Error retrieving calculations:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Get a specific calculation by ID\n   * @param {string} id - ID of the calculation to retrieve\n   * @returns {Object|null} Object with loan and amortizationSchedule properties, or null if not found\n   */\n  getCalculationById(id) {\n    try {\n      if (!id) {\n        throw new Error('No ID provided');\n      }\n\n      const data = this._getData();\n\n      if (!data || !data.calculations) {\n        return null;\n      }\n\n      // Find the calculation with the matching ID\n      const calculationData = data.calculations.find((calc) => calc.loan.id === id);\n\n      if (!calculationData) {\n        return null;\n      }\n\n      // Convert stored JSON back to objects\n      const loan = Loan.fromJSON(calculationData.loan);\n      let amortizationSchedule = null;\n\n      if (calculationData.amortizationSchedule) {\n        amortizationSchedule = AmortizationSchedule.fromJSON(\n          calculationData.amortizationSchedule,\n          loan,\n        );\n      }\n\n      return {\n        loan,\n        amortizationSchedule,\n        savedAt: new Date(calculationData.savedAt),\n      };\n    } catch (error) {\n      console.error('Error retrieving calculation by ID:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Update an existing calculation\n   * @param {string} id - ID of the calculation to update\n   * @param {Loan} updatedLoan - Updated loan object\n   * @param {AmortizationSchedule} [updatedSchedule] - Updated amortization schedule\n   * @returns {boolean} Success status\n   */\n  updateCalculation(id, updatedLoan, updatedSchedule = null) {\n    try {\n      if (!id || !updatedLoan) {\n        throw new Error('ID and updated loan data are required');\n      }\n\n      // Ensure the ID matches\n      if (updatedLoan.id !== id) {\n        updatedLoan.id = id;\n      }\n\n      // Use the save method to update\n      const result = this.saveCalculation(updatedLoan, updatedSchedule);\n      return result === id;\n    } catch (error) {\n      console.error('Error updating calculation:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Delete a calculation by ID\n   * @param {string} id - ID of the calculation to delete\n   * @returns {boolean} Success status\n   */\n  deleteCalculation(id) {\n    try {\n      if (!id) {\n        throw new Error('No ID provided');\n      }\n\n      const data = this._getData();\n\n      if (!data || !data.calculations) {\n        return false;\n      }\n\n      // Find the index of the calculation with the matching ID\n      const index = data.calculations.findIndex((calc) => calc.loan.id === id);\n\n      if (index === -1) {\n        return false;\n      }\n\n      // Remove the calculation\n      data.calculations.splice(index, 1);\n\n      // Save back to storage\n      return this._saveData(data);\n    } catch (error) {\n      console.error('Error deleting calculation:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Clear all saved calculations\n   * @returns {boolean} Success status\n   */\n  clearAllCalculations() {\n    try {\n      const data = this._getData();\n\n      if (!data) {\n        return false;\n      }\n\n      // Clear the calculations array\n      data.calculations = [];\n\n      // Save back to storage\n      return this._saveData(data);\n    } catch (error) {\n      console.error('Error clearing calculations:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if local storage is available\n   * @returns {boolean} Whether storage is available\n   */\n  isStorageAvailable() {\n    try {\n      const testKey = '__storage_test__';\n      localStorage.setItem(testKey, testKey);\n      const result = localStorage.getItem(testKey) === testKey;\n      localStorage.removeItem(testKey);\n      return result;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Get storage usage statistics\n   * @returns {Object} Storage statistics including used space, available space, and item count\n   */\n  getStorageStats() {\n    try {\n      // Get all data\n      const allData = this._getData();\n      const serializedData = JSON.stringify(allData);\n\n      // Calculate size in bytes\n      const usedBytes = new Blob([serializedData]).size;\n\n      // Estimate total available space (5MB is typical for most browsers)\n      const totalBytes = 5 * 1024 * 1024;\n\n      return {\n        usedBytes,\n        usedKB: Math.round(usedBytes / 1024),\n        totalBytes,\n        totalKB: Math.round(totalBytes / 1024),\n        percentUsed: Math.round((usedBytes / totalBytes) * 100),\n        itemCount: allData && allData.calculations ? allData.calculations.length : 0,\n        isNearingLimit: usedBytes > (totalBytes * 0.8), // Warning at 80% usage\n      };\n    } catch (error) {\n      console.error('Error calculating storage stats:', error);\n      return {\n        usedBytes: 0,\n        usedKB: 0,\n        totalBytes: 0,\n        totalKB: 0,\n        percentUsed: 0,\n        itemCount: 0,\n        isNearingLimit: false,\n      };\n    }\n  }\n}\n\nexport default StorageService;\n","/**\n * Loading Manager Utility\n * Manages various loading states and animations\n * Implements requirements 3.2, 3.4, 5.1, 5.5\n */\n\nimport { announceLoadingState, enhanceLoadingAccessibility, removeLoadingAccessibility } from './accessibility.js';\n\nclass LoadingManager {\n  constructor() {\n    this.activeLoadings = new Map();\n    this.loadingOverlay = null;\n  }\n\n  /**\n   * Show skeleton loader for a specific container\n   * @param {HTMLElement|string} container - Container element or selector\n   * @param {string} type - Type of skeleton ('results', 'table', 'chart', 'form')\n   * @param {Object} options - Additional options\n   */\n  showSkeleton(container, type = 'results', options = {}) {\n    const element = typeof container === 'string' ? document.querySelector(container) : container;\n    if (!element) return null;\n\n    const skeletonId = `skeleton-${Date.now()}`;\n    const skeletonHtml = this.generateSkeletonHtml(type, options);\n\n    // Store original content\n    this.activeLoadings.set(skeletonId, {\n      element,\n      originalContent: element.innerHTML,\n      type: 'skeleton',\n    });\n\n    // Show skeleton\n    element.innerHTML = skeletonHtml;\n    element.classList.add('skeleton-loading');\n\n    return skeletonId;\n  }\n\n  /**\n   * Hide skeleton loader\n   * @param {string} skeletonId - Skeleton ID returned from showSkeleton\n   * @param {boolean} restoreContent - Whether to restore original content\n   */\n  hideSkeleton(skeletonId, restoreContent = false) {\n    const loading = this.activeLoadings.get(skeletonId);\n    if (!loading) return;\n\n    if (restoreContent) {\n      loading.element.innerHTML = loading.originalContent;\n    }\n\n    loading.element.classList.remove('skeleton-loading');\n    this.activeLoadings.delete(skeletonId);\n  }\n\n  /**\n   * Show progress overlay with steps\n   * @param {Array} steps - Array of step objects {id, label, status}\n   * @param {Object} options - Additional options\n   */\n  showProgressOverlay(steps = [], options = {}) {\n    const {\n      title = 'Processing...',\n      message = 'Please wait while we process your request.',\n      cancellable = false,\n      onCancel = null,\n    } = options;\n\n    // Remove existing overlay\n    this.hideProgressOverlay();\n\n    // Announce loading start to screen readers\n    announceLoadingState('started', `${title}. ${message}`);\n\n    // Create overlay\n    this.loadingOverlay = document.createElement('div');\n    this.loadingOverlay.className = 'calculation-loading-overlay';\n    this.loadingOverlay.setAttribute('role', 'dialog');\n    this.loadingOverlay.setAttribute('aria-modal', 'true');\n    this.loadingOverlay.setAttribute('aria-labelledby', 'loading-title');\n    this.loadingOverlay.setAttribute('aria-describedby', 'loading-message');\n\n    this.loadingOverlay.innerHTML = `\n      <div class=\"loading-content\">\n        <div class=\"loading-header\">\n          <h3 id=\"loading-title\">${title}</h3>\n          <p id=\"loading-message\" class=\"loading-message\">${message}</p>\n        </div>\n        \n        ${steps.length > 0 ? this.generateProgressSteps(steps) : ''}\n        \n        <div class=\"loading-spinner-container\" aria-hidden=\"true\">\n          <div class=\"loading-spinner-dots\">\n            <div class=\"loading-dot\"></div>\n            <div class=\"loading-dot\"></div>\n            <div class=\"loading-dot\"></div>\n          </div>\n        </div>\n        \n        <div class=\"loading-progress\">\n          <div class=\"progress-bar-enhanced\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-label=\"Calculation progress\">\n            <div class=\"progress-fill-enhanced pulsing\" style=\"width: 0%\"></div>\n          </div>\n          <div class=\"progress-text\" aria-live=\"polite\" aria-atomic=\"true\">Initializing...</div>\n        </div>\n        \n        ${cancellable ? `\n          <div class=\"loading-actions\">\n            <button class=\"btn-cancel\" id=\"cancel-loading\" aria-label=\"Cancel calculation\">Cancel</button>\n          </div>\n        ` : ''}\n      </div>\n    `;\n\n    // Add to document\n    document.body.appendChild(this.loadingOverlay);\n\n    // Set focus to the overlay for screen reader users\n    this.loadingOverlay.setAttribute('tabindex', '-1');\n    this.loadingOverlay.focus();\n\n    // Handle cancel button\n    if (cancellable && onCancel) {\n      const cancelBtn = this.loadingOverlay.querySelector('#cancel-loading');\n      if (cancelBtn) {\n        cancelBtn.addEventListener('click', () => {\n          announceLoadingState('error', 'Calculation cancelled by user.');\n          onCancel();\n          this.hideProgressOverlay();\n        });\n      }\n    }\n\n    // Animate in\n    requestAnimationFrame(() => {\n      this.loadingOverlay.style.opacity = '1';\n    });\n  }\n\n  /**\n   * Update progress overlay\n   * @param {number} progress - Progress percentage (0-100)\n   * @param {string} message - Progress message\n   * @param {string} currentStep - Current step ID\n   */\n  updateProgress(progress, message = '', currentStep = null) {\n    if (!this.loadingOverlay) return;\n\n    const progressBar = this.loadingOverlay.querySelector('[role=\"progressbar\"]');\n    const progressFill = this.loadingOverlay.querySelector('.progress-fill-enhanced');\n    const progressText = this.loadingOverlay.querySelector('.progress-text');\n\n    const clampedProgress = Math.min(100, Math.max(0, progress));\n\n    if (progressBar) {\n      progressBar.setAttribute('aria-valuenow', clampedProgress);\n      progressBar.setAttribute('aria-valuetext', `${Math.round(clampedProgress)}% complete`);\n    }\n\n    if (progressFill) {\n      progressFill.style.width = `${clampedProgress}%`;\n    }\n\n    if (progressText && message) {\n      progressText.textContent = message;\n\n      // Announce significant progress milestones\n      if (progress === 100) {\n        announceLoadingState('completed', message);\n      } else if (progress > 0 && progress % 25 === 0) {\n        announceLoadingState('progress', message, progress);\n      }\n    }\n\n    // Update step status\n    if (currentStep) {\n      this.updateStepStatus(currentStep, 'active');\n    }\n  }\n\n  /**\n   * Update step status in progress overlay\n   * @param {string} stepId - Step ID\n   * @param {string} status - Status ('pending', 'active', 'completed', 'error')\n   */\n  updateStepStatus(stepId, status) {\n    if (!this.loadingOverlay) return;\n\n    const step = this.loadingOverlay.querySelector(`[data-step-id=\"${stepId}\"]`);\n    if (!step) return;\n\n    // Remove all status classes\n    step.classList.remove('pending', 'active', 'completed', 'error');\n    step.classList.add(status);\n\n    // Update step number/icon\n    const circle = step.querySelector('.progress-step-circle');\n    if (circle) {\n      switch (status) {\n        case 'completed':\n          circle.innerHTML = '✓';\n          break;\n        case 'error':\n          circle.innerHTML = '✗';\n          break;\n        case 'active':\n          circle.innerHTML = step.dataset.stepNumber || '';\n          break;\n        default:\n          circle.innerHTML = step.dataset.stepNumber || '';\n      }\n    }\n  }\n\n  /**\n   * Hide progress overlay\n   */\n  hideProgressOverlay() {\n    if (this.loadingOverlay) {\n      // Return focus to the previously focused element\n      const previouslyFocused = document.querySelector('[data-was-focused]');\n      if (previouslyFocused) {\n        previouslyFocused.focus();\n        previouslyFocused.removeAttribute('data-was-focused');\n      }\n\n      this.loadingOverlay.style.opacity = '0';\n      setTimeout(() => {\n        if (this.loadingOverlay && this.loadingOverlay.parentNode) {\n          this.loadingOverlay.parentNode.removeChild(this.loadingOverlay);\n        }\n        this.loadingOverlay = null;\n      }, 300);\n    }\n  }\n\n  /**\n   * Show inline loading spinner\n   * @param {HTMLElement|string} container - Container element or selector\n   * @param {string} type - Spinner type ('default', 'dots', 'pulse', 'bars')\n   * @param {string} message - Loading message\n   */\n  showInlineLoader(container, type = 'default', message = 'Loading...') {\n    const element = typeof container === 'string' ? document.querySelector(container) : container;\n    if (!element) return null;\n\n    const loaderId = `loader-${Date.now()}`;\n    const spinnerHtml = this.generateSpinnerHtml(type, message);\n\n    // Store original content\n    this.activeLoadings.set(loaderId, {\n      element,\n      originalContent: element.innerHTML,\n      type: 'inline',\n    });\n\n    // Show loader\n    element.innerHTML = spinnerHtml;\n    element.classList.add('inline-loading');\n\n    return loaderId;\n  }\n\n  /**\n   * Hide inline loading spinner\n   * @param {string} loaderId - Loader ID returned from showInlineLoader\n   * @param {boolean} restoreContent - Whether to restore original content\n   */\n  hideInlineLoader(loaderId, restoreContent = false) {\n    const loading = this.activeLoadings.get(loaderId);\n    if (!loading) return;\n\n    if (restoreContent) {\n      loading.element.innerHTML = loading.originalContent;\n    }\n\n    loading.element.classList.remove('inline-loading');\n    this.activeLoadings.delete(loaderId);\n  }\n\n  /**\n   * Generate skeleton HTML based on type\n   * @param {string} type - Skeleton type\n   * @param {Object} options - Additional options\n   * @returns {string} Skeleton HTML\n   */\n  generateSkeletonHtml(type, options = {}) {\n    switch (type) {\n      case 'results':\n        return this.generateResultsSkeleton(options);\n      case 'table':\n        return this.generateTableSkeleton(options);\n      case 'chart':\n        return this.generateChartSkeleton(options);\n      case 'form':\n        return this.generateFormSkeleton(options);\n      default:\n        return this.generateResultsSkeleton(options);\n    }\n  }\n\n  /**\n   * Generate results skeleton HTML\n   * @param {Object} options - Options\n   * @returns {string} HTML\n   */\n  generateResultsSkeleton(options = {}) {\n    const { items = 8 } = options;\n\n    return `\n      <div class=\"skeleton-results\">\n        <div class=\"skeleton-summary\">\n          ${Array(items).fill(0).map(() => `\n            <div class=\"skeleton-summary-item\">\n              <div class=\"skeleton-summary-label skeleton\"></div>\n              <div class=\"skeleton-summary-value skeleton\"></div>\n            </div>\n          `).join('')}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Generate table skeleton HTML\n   * @param {Object} options - Options\n   * @returns {string} HTML\n   */\n  generateTableSkeleton(options = {}) {\n    const { rows = 10, columns = 5 } = options;\n\n    return `\n      <table class=\"skeleton-table\">\n        <thead>\n          <tr>\n            ${Array(columns).fill(0).map(() => `\n              <th><div class=\"skeleton-table-header skeleton\"></div></th>\n            `).join('')}\n          </tr>\n        </thead>\n        <tbody>\n          ${Array(rows).fill(0).map(() => `\n            <tr class=\"skeleton-row\">\n              ${Array(columns).fill(0).map((_, i) => `\n                <td><div class=\"skeleton-cell ${this.getSkeletonCellClass(i, columns)} skeleton\"></div></td>\n              `).join('')}\n            </tr>\n          `).join('')}\n        </tbody>\n      </table>\n    `;\n  }\n\n  /**\n   * Generate chart skeleton HTML\n   * @param {Object} options - Options\n   * @returns {string} HTML\n   */\n  generateChartSkeleton(options = {}) {\n    const { title = true, legend = true } = options;\n\n    return `\n      <div class=\"skeleton-chart\">\n        ${title ? '<div class=\"skeleton-chart-title skeleton\"></div>' : ''}\n        ${legend ? `\n          <div class=\"skeleton-chart-legend\">\n            <div class=\"skeleton-legend-item\">\n              <div class=\"skeleton-legend-color skeleton\"></div>\n              <div class=\"skeleton-legend-text skeleton\"></div>\n            </div>\n            <div class=\"skeleton-legend-item\">\n              <div class=\"skeleton-legend-color skeleton\"></div>\n              <div class=\"skeleton-legend-text skeleton\"></div>\n            </div>\n          </div>\n        ` : ''}\n      </div>\n    `;\n  }\n\n  /**\n   * Generate form skeleton HTML\n   * @param {Object} options - Options\n   * @returns {string} HTML\n   */\n  generateFormSkeleton(options = {}) {\n    const { fields = 6 } = options;\n\n    return `\n      <div class=\"skeleton-form\">\n        ${Array(fields).fill(0).map(() => `\n          <div class=\"skeleton-form-group\">\n            <div class=\"skeleton-form-label skeleton\"></div>\n            <div class=\"skeleton-form-input skeleton\"></div>\n            <div class=\"skeleton-form-slider skeleton\"></div>\n          </div>\n        `).join('')}\n      </div>\n    `;\n  }\n\n  /**\n   * Get skeleton cell class based on column index\n   * @param {number} columnIndex - Column index\n   * @param {number} totalColumns - Total number of columns\n   * @returns {string} CSS class name\n   */\n  getSkeletonCellClass(columnIndex, totalColumns) {\n    if (columnIndex === totalColumns - 1) {\n      return 'number';\n    }\n    return columnIndex % 3 === 0 ? 'short' : 'medium';\n  }\n\n  /**\n   * Generate spinner HTML\n   * @param {string} type - Spinner type\n   * @param {string} message - Loading message\n   * @returns {string} HTML\n   */\n  generateSpinnerHtml(type, message) {\n    let spinnerHtml = '';\n\n    switch (type) {\n      case 'dots':\n        spinnerHtml = `\n          <div class=\"loading-spinner-dots\">\n            <div class=\"loading-dot\"></div>\n            <div class=\"loading-dot\"></div>\n            <div class=\"loading-dot\"></div>\n          </div>\n        `;\n        break;\n      case 'pulse':\n        spinnerHtml = '<div class=\"loading-spinner-pulse\"></div>';\n        break;\n      case 'bars':\n        spinnerHtml = `\n          <div class=\"loading-spinner-bars\">\n            <div class=\"loading-bar\"></div>\n            <div class=\"loading-bar\"></div>\n            <div class=\"loading-bar\"></div>\n            <div class=\"loading-bar\"></div>\n            <div class=\"loading-bar\"></div>\n          </div>\n        `;\n        break;\n      default:\n        spinnerHtml = '<div class=\"loading-spinner\"></div>';\n    }\n\n    return `\n      <div class=\"component-loading\">\n        ${spinnerHtml}\n        <div class=\"loading-text\">${message}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get step icon based on status\n   * @param {string} status - Step status\n   * @param {number} stepNumber - Step number\n   * @returns {string} Icon or number\n   */\n  getStepIcon(status, stepNumber) {\n    if (status === 'completed') return '✓';\n    if (status === 'error') return '✗';\n    return stepNumber;\n  }\n\n  /**\n   * Generate progress steps HTML\n   * @param {Array} steps - Array of step objects\n   * @returns {string} HTML\n   */\n  generateProgressSteps(steps) {\n    return `\n      <div class=\"progress-steps\">\n        ${steps.map((step, index) => `\n          <div class=\"progress-step ${step.status || 'pending'}\" data-step-id=\"${step.id}\" data-step-number=\"${index + 1}\">\n            <div class=\"progress-step-circle\">${this.getStepIcon(step.status, index + 1)}</div>\n            <div class=\"progress-step-line\"></div>\n            <div class=\"progress-step-label\">${step.label}</div>\n          </div>\n        `).join('')}\n      </div>\n    `;\n  }\n\n  /**\n   * Clear all active loadings\n   */\n  clearAll() {\n    // Hide progress overlay\n    this.hideProgressOverlay();\n\n    // Clear all active loadings\n    this.activeLoadings.forEach((loading, id) => {\n      if (loading.type === 'skeleton') {\n        this.hideSkeleton(id, true);\n      } else if (loading.type === 'inline') {\n        this.hideInlineLoader(id, true);\n      }\n    });\n\n    this.activeLoadings.clear();\n  }\n}\n\n// Create singleton instance\nconst loadingManager = new LoadingManager();\n\nexport default loadingManager;\n","/**\n * Formatters Utility\n * Provides formatting functions for numbers, currencies, dates, etc.\n * Enhanced with internationalization support\n */\n\n/**\n * Get locale string based on language code\n * @param {string} language - Language code (e.g., 'en', 'es')\n * @returns {string} Locale string (e.g., 'en-US', 'es-ES')\n */\nexport function getLocaleFromLanguage(language) {\n  const localeMap = {\n    en: 'en-US',\n    es: 'es-ES',\n  };\n  return localeMap[language] || 'en-US';\n}\n\n/**\n * Get date format based on locale\n * @param {string} locale - Locale string (e.g., 'en-US', 'es-ES')\n * @returns {string} Date format string\n */\nexport function getDateFormatForLocale(locale) {\n  const formatMap = {\n    'en-US': 'MM/DD/YYYY',\n    'es-ES': 'DD/MM/YYYY',\n  };\n  return formatMap[locale] || 'MM/DD/YYYY';\n}\n\n/**\n * Format a number with specified decimal places and locale\n * @param {number} value - The number to format\n * @param {number} decimals - Number of decimal places\n * @param {string} locale - Locale for formatting (e.g., 'en-US', 'es-ES')\n * @returns {string} Formatted number\n */\nexport function formatNumber(value, decimals = 2, locale = 'en-US') {\n  return new Intl.NumberFormat(locale, {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals,\n  }).format(value);\n}\n\n/**\n * Format a value as currency\n * @param {number} value - The value to format\n * @param {string} currencyCode - Currency code (e.g., 'USD', 'EUR')\n * @param {string} locale - Locale for formatting (e.g., 'en-US', 'es-ES')\n * @returns {string} Formatted currency\n */\nexport function formatCurrency(value, currencyCode = 'USD', locale = 'en-US') {\n  return new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency: currencyCode,\n  }).format(value);\n}\n\n/**\n * Format a date\n * @param {Date|string} date - The date to format\n * @param {string} format - Format string (e.g., 'MM/DD/YYYY')\n * @param {string} locale - Locale for formatting (e.g., 'en-US', 'es-ES')\n * @returns {string} Formatted date\n */\nexport function formatDate(date, format = null, locale = 'en-US') {\n  const dateObj = date instanceof Date ? date : new Date(date);\n\n  // Use Intl.DateTimeFormat for locale-aware formatting\n  if (!format) {\n    return new Intl.DateTimeFormat(locale).format(dateObj);\n  }\n\n  // Use custom format if specified\n  format = format || getDateFormatForLocale(locale);\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n  const day = String(dateObj.getDate()).padStart(2, '0');\n  const year = dateObj.getFullYear();\n\n  let formatted = format;\n  formatted = formatted.replace('MM', month);\n  formatted = formatted.replace('DD', day);\n  formatted = formatted.replace('YYYY', year);\n\n  return formatted;\n}\n\n/**\n * Format a percentage\n * @param {number} value - The value to format as percentage\n * @param {number} decimals - Number of decimal places\n * @returns {string} Formatted percentage\n */\nexport function formatPercentage(value, decimals = 2) {\n  return `${Number(value * 100).toFixed(decimals)}%`;\n}\n\n/**\n * Format a duration in months to years and months\n * @param {number} months - Number of months\n * @returns {string} Formatted duration\n */\nexport function formatDuration(months) {\n  const years = Math.floor(months / 12);\n  const remainingMonths = months % 12;\n\n  let result = '';\n  if (years > 0) {\n    result += `${years} year${years !== 1 ? 's' : ''}`;\n  }\n\n  if (remainingMonths > 0) {\n    if (result.length > 0) {\n      result += ' and ';\n    }\n    result += `${remainingMonths} month${remainingMonths !== 1 ? 's' : ''}`;\n  }\n\n  return result;\n}\n","/**\n * Translations Utility\n * Provides translations for the application in different languages\n */\n\n// English translations (default)\nconst en = {\n  // Calculator form\n  form: {\n    title: 'Loan Calculator',\n    loanAmount: 'Loan Amount',\n    interestRate: 'Interest Rate',\n    loanTerm: 'Loan Term',\n    loanType: 'Loan Type',\n    paymentFrequency: 'Payment Frequency',\n    downPayment: 'Down Payment',\n    additionalPayment: 'Additional Payment',\n    startDate: 'Start Date',\n    calculate: 'Calculate',\n    reset: 'Reset',\n    years: 'Years',\n    months: 'Months',\n    mortgage: 'Mortgage',\n    auto: 'Auto',\n    personal: 'Personal',\n    student: 'Student',\n    monthly: 'Monthly',\n    biWeekly: 'Bi-Weekly',\n    weekly: 'Weekly',\n  },\n\n  // Market rates\n  marketRates: {\n    title: 'Current Market Rates',\n    disclaimer: 'Rates are estimates based on national averages and may vary by location, credit score, and other factors.',\n    averageRate: 'Average Rate',\n    rateRange: 'Rate Range',\n    yourRate: 'Your Rate',\n    difference: 'Difference',\n    belowAverage: 'below average',\n    aboveAverage: 'above average',\n    sameAsAverage: 'same as average',\n    useAverageRate: 'Use Average Rate',\n    lastUpdated: 'Last Updated',\n    viewTrends: 'View Rate Trends',\n    compareRates: 'Compare Your Rate',\n  },\n\n  // Glossary\n  glossary: {\n    title: 'Financial Terms Glossary',\n    openGlossary: 'Open Financial Terms Glossary',\n    close: 'Close Glossary',\n    search: 'Search glossary terms',\n    searchPlaceholder: 'Search for terms...',\n    noResults: 'No matching terms found',\n    searchResults: '{count} terms found',\n    opened: 'Financial glossary opened',\n    closed: 'Financial glossary closed',\n  },\n\n  // Results display\n  results: {\n    monthlyPayment: 'Monthly Payment',\n    totalPayment: 'Total Payment',\n    totalInterest: 'Total Interest',\n    payoffDate: 'Payoff Date',\n    interestSavings: 'Interest Savings',\n    timeReduction: 'Time Reduction',\n    saveCalculation: 'Save Calculation',\n    share: 'Share',\n    export: 'Export',\n    print: 'Print',\n  },\n\n  // Amortization table\n  amortization: {\n    title: 'Amortization Schedule',\n    paymentNumber: 'Payment #',\n    paymentDate: 'Date',\n    payment: 'Payment',\n    principal: 'Principal',\n    interest: 'Interest',\n    balance: 'Balance',\n    totalPrincipal: 'Total Principal',\n    totalInterest: 'Total Interest',\n    filter: 'Filter',\n    showAll: 'Show All',\n    annual: 'Annual Summary',\n    noData: 'No data available',\n  },\n\n  // Charts\n  charts: {\n    title: 'Payment Charts',\n    principalVsInterest: 'Principal vs Interest',\n    paymentBreakdown: 'Payment Breakdown',\n    amortizationSchedule: 'Amortization Schedule',\n    principal: 'Principal',\n    interest: 'Interest',\n    balance: 'Balance',\n    time: 'Time',\n  },\n\n  // Saved calculations\n  savedCalculations: {\n    title: 'Saved Calculations',\n    noSavedCalculations: 'No saved calculations',\n    load: 'Load',\n    delete: 'Delete',\n    compare: 'Compare',\n    rename: 'Rename',\n    confirmDelete: 'Are you sure you want to delete this calculation?',\n    enterName: 'Enter a name for this calculation',\n    defaultName: 'Calculation',\n  },\n\n  // Settings\n  settings: {\n    title: 'Settings',\n    theme: 'Theme',\n    language: 'Language',\n    currency: 'Currency',\n    light: 'Light',\n    dark: 'Dark',\n    dateFormat: 'Date Format',\n    numberFormat: 'Number Format',\n  },\n\n  // Comparison view\n  comparison: {\n    title: 'Loan Comparison',\n    scenario: 'Scenario',\n    difference: 'Difference',\n    savings: 'Savings',\n  },\n\n  // Common\n  common: {\n    yes: 'Yes',\n    no: 'No',\n    ok: 'OK',\n    cancel: 'Cancel',\n    save: 'Save',\n    close: 'Close',\n    loading: 'Loading...',\n    error: 'An error occurred',\n    success: 'Success',\n    warning: 'Warning',\n    info: 'Information',\n  },\n\n  // Tooltips and guidance\n  tooltips: {\n    loanType: 'Select the type of loan you need. Different loan types have different default values and limits.',\n    loanAmount: 'Enter the total amount you wish to borrow.',\n    interestRate: 'The annual interest rate for your loan. Higher rates mean higher monthly payments.',\n    loanTerm: 'The length of time to repay the loan. Longer terms mean lower monthly payments but more interest paid overall.',\n    downPayment: 'Initial payment made upfront. A larger down payment reduces your loan amount and monthly payments.',\n    additionalPayment: 'Extra amount paid each period beyond the required payment. This reduces your loan term and total interest.',\n    paymentFrequency: 'How often you make payments. More frequent payments can reduce total interest paid.',\n    startDate: 'The date when your loan begins and first payment is due.',\n\n    // Results tooltips\n    monthlyPayment: 'The amount you need to pay each period to repay the loan on schedule.',\n    totalPayment: 'The total amount you will pay over the life of the loan, including principal and interest.',\n    totalInterest: 'The total amount of interest you will pay over the life of the loan.',\n    payoffDate: 'The date when your loan will be fully paid off if you make all scheduled payments.',\n    interestSavings: 'The amount of interest you save by making additional payments.',\n\n    // Tutorial\n    startTutorial: 'Start a guided tour of the loan calculator features.',\n    showGuidance: 'Show guidance for interpreting your loan results.',\n\n    // Guidance\n    interpretingResults: 'How to interpret your loan calculation results',\n    affordabilityGuidance: 'Understanding loan affordability',\n    refinanceGuidance: 'When to consider refinancing',\n  },\n\n  // Guidance\n  guidance: {\n    title: 'Loan Calculator Guidance',\n    help: 'Help & Tips',\n    tutorial: 'Interactive Tutorial',\n\n    interpretingResultsTitle: 'Interpreting Your Results',\n    interpretingResultsContent: 'Your loan calculation results show the monthly payment, total payment, total interest, and payoff date. The monthly payment is the amount you need to pay each period to repay the loan on schedule. The total payment is the sum of all payments over the life of the loan. The total interest is the cost of borrowing the money.',\n\n    affordabilityTitle: 'Understanding Loan Affordability',\n    affordabilityContent: 'When determining how much you can afford to borrow, consider the following:',\n    affordabilityTip1: 'Your monthly loan payment should ideally be less than 28% of your gross monthly income.',\n    affordabilityTip2: 'Consider all other debts and expenses when determining affordability.',\n    affordabilityTip3: 'Remember to account for taxes, insurance, and maintenance costs for mortgages.',\n\n    additionalPaymentsTitle: 'Benefits of Additional Payments',\n    additionalPaymentsContent: 'Making additional payments can significantly reduce your loan term and the total interest paid. Even small additional payments can make a big difference over time.',\n\n    refinanceTitle: 'When to Consider Refinancing',\n    refinanceContent: 'Refinancing may be beneficial in the following situations:',\n    refinanceTip1: 'When interest rates have dropped significantly since you obtained your loan.',\n    refinanceTip2: 'When you want to change the term of your loan (shorter or longer).',\n    refinanceTip3: 'When you want to switch from a variable to a fixed-rate loan or vice versa.',\n  },\n\n  // Tutorial\n  tutorial: {\n    loanTypeTitle: 'Loan Type',\n    loanTypeContent: 'Start by selecting the type of loan you need. This will set appropriate defaults for your loan calculation.',\n\n    loanAmountTitle: 'Loan Amount',\n    loanAmountContent: 'Enter the total amount you wish to borrow. You can use the slider or type the exact amount.',\n\n    interestRateTitle: 'Interest Rate',\n    interestRateContent: 'Enter the annual interest rate for your loan. This is the cost of borrowing the money, expressed as a percentage.',\n\n    loanTermTitle: 'Loan Term',\n    loanTermContent: 'Enter the length of time to repay the loan in months. Longer terms mean lower monthly payments but more interest paid overall.',\n\n    termPresetsTitle: 'Term Presets',\n    termPresetsContent: 'Click these buttons to quickly set common loan terms like 5, 15, or 30 years.',\n\n    additionalPaymentTitle: 'Additional Payment',\n    additionalPaymentContent: 'Enter any extra amount you plan to pay each period. This can significantly reduce your loan term and total interest.',\n\n    calculateTitle: 'Calculate',\n    calculateContent: 'Click this button to calculate your loan based on the entered parameters.',\n\n    resultsTitle: 'Results Summary',\n    resultsContent: 'This section shows your monthly payment, total payment, total interest, and payoff date.',\n\n    amortizationTitle: 'Amortization Schedule',\n    amortizationContent: 'This table shows the breakdown of each payment over the life of the loan, including how much goes to principal and interest.',\n\n    chartsTitle: 'Payment Charts',\n    chartsContent: 'These charts visualize your loan data, showing the breakdown of principal vs. interest and the amortization schedule over time.',\n\n    completedTitle: 'Tutorial Completed',\n    completedContent: 'You\\'ve completed the tutorial! You now know how to use the loan calculator to make informed financial decisions.',\n  },\n};\n\n// Spanish translations\nconst es = {\n  // Calculator form\n  form: {\n    title: 'Calculadora de Préstamos',\n    loanAmount: 'Monto del Préstamo',\n    interestRate: 'Tasa de Interés',\n    loanTerm: 'Plazo del Préstamo',\n    loanType: 'Tipo de Préstamo',\n    paymentFrequency: 'Frecuencia de Pago',\n    downPayment: 'Pago Inicial',\n    additionalPayment: 'Pago Adicional',\n    startDate: 'Fecha de Inicio',\n    calculate: 'Calcular',\n    reset: 'Reiniciar',\n    years: 'Años',\n    months: 'Meses',\n    mortgage: 'Hipoteca',\n    auto: 'Auto',\n    personal: 'Personal',\n    student: 'Estudiantil',\n    monthly: 'Mensual',\n    biWeekly: 'Quincenal',\n    weekly: 'Semanal',\n  },\n\n  // Market rates\n  marketRates: {\n    title: 'Tasas Actuales del Mercado',\n    disclaimer: 'Las tasas son estimaciones basadas en promedios nacionales y pueden variar según la ubicación, puntaje crediticio y otros factores.',\n    averageRate: 'Tasa Promedio',\n    rateRange: 'Rango de Tasas',\n    yourRate: 'Su Tasa',\n    difference: 'Diferencia',\n    belowAverage: 'por debajo del promedio',\n    aboveAverage: 'por encima del promedio',\n    sameAsAverage: 'igual al promedio',\n    useAverageRate: 'Usar Tasa Promedio',\n    lastUpdated: 'Última Actualización',\n    viewTrends: 'Ver Tendencias de Tasas',\n    compareRates: 'Comparar Su Tasa',\n  },\n\n  // Glossary\n  glossary: {\n    title: 'Glosario de Términos Financieros',\n    openGlossary: 'Abrir Glosario de Términos Financieros',\n    close: 'Cerrar Glosario',\n    search: 'Buscar términos en el glosario',\n    searchPlaceholder: 'Buscar términos...',\n    noResults: 'No se encontraron términos coincidentes',\n    searchResults: '{count} términos encontrados',\n    opened: 'Glosario financiero abierto',\n    closed: 'Glosario financiero cerrado',\n  },\n\n  // Results display\n  results: {\n    monthlyPayment: 'Pago Mensual',\n    totalPayment: 'Pago Total',\n    totalInterest: 'Interés Total',\n    payoffDate: 'Fecha de Liquidación',\n    interestSavings: 'Ahorro de Intereses',\n    timeReduction: 'Reducción de Tiempo',\n    saveCalculation: 'Guardar Cálculo',\n    share: 'Compartir',\n    export: 'Exportar',\n    print: 'Imprimir',\n  },\n\n  // Amortization table\n  amortization: {\n    title: 'Tabla de Amortización',\n    paymentNumber: '# de Pago',\n    paymentDate: 'Fecha',\n    payment: 'Pago',\n    principal: 'Capital',\n    interest: 'Interés',\n    balance: 'Saldo',\n    totalPrincipal: 'Capital Total',\n    totalInterest: 'Interés Total',\n    filter: 'Filtrar',\n    showAll: 'Mostrar Todo',\n    annual: 'Resumen Anual',\n    noData: 'No hay datos disponibles',\n  },\n\n  // Charts\n  charts: {\n    title: 'Gráficos de Pago',\n    principalVsInterest: 'Capital vs Interés',\n    paymentBreakdown: 'Desglose de Pagos',\n    amortizationSchedule: 'Calendario de Amortización',\n    principal: 'Capital',\n    interest: 'Interés',\n    balance: 'Saldo',\n    time: 'Tiempo',\n  },\n\n  // Saved calculations\n  savedCalculations: {\n    title: 'Cálculos Guardados',\n    noSavedCalculations: 'No hay cálculos guardados',\n    load: 'Cargar',\n    delete: 'Eliminar',\n    compare: 'Comparar',\n    rename: 'Renombrar',\n    confirmDelete: '¿Está seguro de que desea eliminar este cálculo?',\n    enterName: 'Ingrese un nombre para este cálculo',\n    defaultName: 'Cálculo',\n  },\n\n  // Settings\n  settings: {\n    title: 'Configuración',\n    theme: 'Tema',\n    language: 'Idioma',\n    currency: 'Moneda',\n    light: 'Claro',\n    dark: 'Oscuro',\n    dateFormat: 'Formato de Fecha',\n    numberFormat: 'Formato de Número',\n  },\n\n  // Comparison view\n  comparison: {\n    title: 'Comparación de Préstamos',\n    scenario: 'Escenario',\n    difference: 'Diferencia',\n    savings: 'Ahorros',\n  },\n\n  // Common\n  common: {\n    yes: 'Sí',\n    no: 'No',\n    ok: 'Aceptar',\n    cancel: 'Cancelar',\n    save: 'Guardar',\n    close: 'Cerrar',\n    loading: 'Cargando...',\n    error: 'Ocurrió un error',\n    success: 'Éxito',\n    warning: 'Advertencia',\n    info: 'Información',\n  },\n\n  // Tooltips and guidance\n  tooltips: {\n    loanType: 'Seleccione el tipo de préstamo que necesita. Diferentes tipos de préstamos tienen diferentes valores y límites predeterminados.',\n    loanAmount: 'Ingrese el monto total que desea pedir prestado.',\n    interestRate: 'La tasa de interés anual de su préstamo. Tasas más altas significan pagos mensuales más altos.',\n    loanTerm: 'El período de tiempo para pagar el préstamo. Plazos más largos significan pagos mensuales más bajos pero más intereses pagados en general.',\n    downPayment: 'Pago inicial realizado por adelantado. Un pago inicial más grande reduce el monto de su préstamo y los pagos mensuales.',\n    additionalPayment: 'Cantidad adicional pagada en cada período más allá del pago requerido. Esto reduce el plazo de su préstamo y el interés total.',\n    paymentFrequency: 'Con qué frecuencia realiza los pagos. Pagos más frecuentes pueden reducir el interés total pagado.',\n    startDate: 'La fecha en que comienza su préstamo y vence el primer pago.',\n\n    // Results tooltips\n    monthlyPayment: 'La cantidad que debe pagar en cada período para pagar el préstamo según lo programado.',\n    totalPayment: 'El monto total que pagará durante la vida del préstamo, incluido el capital y los intereses.',\n    totalInterest: 'El monto total de interés que pagará durante la vida del préstamo.',\n    payoffDate: 'La fecha en que su préstamo se pagará por completo si realiza todos los pagos programados.',\n    interestSavings: 'La cantidad de interés que ahorra al realizar pagos adicionales.',\n\n    // Tutorial\n    startTutorial: 'Inicie un recorrido guiado por las funciones de la calculadora de préstamos.',\n    showGuidance: 'Mostrar orientación para interpretar los resultados de su préstamo.',\n\n    // Guidance\n    interpretingResults: 'Cómo interpretar los resultados del cálculo de su préstamo',\n    affordabilityGuidance: 'Comprender la asequibilidad del préstamo',\n    refinanceGuidance: 'Cuándo considerar la refinanciación',\n  },\n\n  // Guidance\n  guidance: {\n    title: 'Guía de la Calculadora de Préstamos',\n    help: 'Ayuda y Consejos',\n    tutorial: 'Tutorial Interactivo',\n\n    interpretingResultsTitle: 'Interpretando Sus Resultados',\n    interpretingResultsContent: 'Los resultados del cálculo de su préstamo muestran el pago mensual, el pago total, el interés total y la fecha de liquidación. El pago mensual es la cantidad que debe pagar en cada período para pagar el préstamo según lo programado. El pago total es la suma de todos los pagos durante la vida del préstamo. El interés total es el costo de pedir prestado el dinero.',\n\n    affordabilityTitle: 'Entendiendo la Asequibilidad del Préstamo',\n    affordabilityContent: 'Al determinar cuánto puede permitirse pedir prestado, considere lo siguiente:',\n    affordabilityTip1: 'Su pago mensual del préstamo debería ser idealmente menos del 28% de su ingreso mensual bruto.',\n    affordabilityTip2: 'Considere todas las otras deudas y gastos al determinar la asequibilidad.',\n    affordabilityTip3: 'Recuerde tener en cuenta los impuestos, el seguro y los costos de mantenimiento para las hipotecas.',\n\n    additionalPaymentsTitle: 'Beneficios de los Pagos Adicionales',\n    additionalPaymentsContent: 'Hacer pagos adicionales puede reducir significativamente el plazo de su préstamo y el interés total pagado. Incluso pequeños pagos adicionales pueden hacer una gran diferencia con el tiempo.',\n\n    refinanceTitle: 'Cuándo Considerar la Refinanciación',\n    refinanceContent: 'La refinanciación puede ser beneficiosa en las siguientes situaciones:',\n    refinanceTip1: 'Cuando las tasas de interés han bajado significativamente desde que obtuvo su préstamo.',\n    refinanceTip2: 'Cuando desea cambiar el plazo de su préstamo (más corto o más largo).',\n    refinanceTip3: 'Cuando desea cambiar de un préstamo de tasa variable a uno de tasa fija o viceversa.',\n  },\n\n  // Tutorial\n  tutorial: {\n    loanTypeTitle: 'Tipo de Préstamo',\n    loanTypeContent: 'Comience seleccionando el tipo de préstamo que necesita. Esto establecerá los valores predeterminados apropiados para su cálculo de préstamo.',\n\n    loanAmountTitle: 'Monto del Préstamo',\n    loanAmountContent: 'Ingrese el monto total que desea pedir prestado. Puede usar el control deslizante o escribir el monto exacto.',\n\n    interestRateTitle: 'Tasa de Interés',\n    interestRateContent: 'Ingrese la tasa de interés anual para su préstamo. Este es el costo de pedir prestado el dinero, expresado como un porcentaje.',\n\n    loanTermTitle: 'Plazo del Préstamo',\n    loanTermContent: 'Ingrese el período de tiempo para pagar el préstamo en meses. Plazos más largos significan pagos mensuales más bajos pero más intereses pagados en general.',\n\n    termPresetsTitle: 'Plazos Preestablecidos',\n    termPresetsContent: 'Haga clic en estos botones para establecer rápidamente plazos comunes de préstamos como 5, 15 o 30 años.',\n\n    additionalPaymentTitle: 'Pago Adicional',\n    additionalPaymentContent: 'Ingrese cualquier cantidad adicional que planea pagar en cada período. Esto puede reducir significativamente el plazo de su préstamo y el interés total.',\n\n    calculateTitle: 'Calcular',\n    calculateContent: 'Haga clic en este botón para calcular su préstamo según los parámetros ingresados.',\n\n    resultsTitle: 'Resumen de Resultados',\n    resultsContent: 'Esta sección muestra su pago mensual, pago total, interés total y fecha de liquidación.',\n\n    amortizationTitle: 'Tabla de Amortización',\n    amortizationContent: 'Esta tabla muestra el desglose de cada pago durante la vida del préstamo, incluido cuánto va al capital y al interés.',\n\n    chartsTitle: 'Gráficos de Pago',\n    chartsContent: 'Estos gráficos visualizan los datos de su préstamo, mostrando el desglose de capital versus interés y el calendario de amortización a lo largo del tiempo.',\n\n    completedTitle: 'Tutorial Completado',\n    completedContent: '¡Ha completado el tutorial! Ahora sabe cómo usar la calculadora de préstamos para tomar decisiones financieras informadas.',\n  },\n};\n\n// Available translations\nconst translations = {\n  en,\n  es,\n};\n\n/**\n * Get translation for a key\n * @param {string} key - Translation key in dot notation (e.g., 'form.title')\n * @param {string} language - Language code\n * @returns {string} Translated text or key if translation not found\n */\nexport function getTranslation(key, language = 'en') {\n  const keys = key.split('.');\n  let translation = translations[language] || translations.en;\n\n  for (const k of keys) {\n    translation = translation[k];\n    if (translation === undefined) {\n      return key; // Return key if translation not found\n    }\n  }\n\n  return translation;\n}\n\n/**\n * Get all translations for a language\n * @param {string} language - Language code\n * @returns {Object} Translations object\n */\nexport function getTranslations(language = 'en') {\n  return translations[language] || translations.en;\n}\n\n/**\n * Get available languages\n * @returns {Array} Array of language objects with code and name\n */\nexport function getAvailableLanguages() {\n  return [\n    { code: 'en', name: 'English' },\n    { code: 'es', name: 'Español' },\n  ];\n}\n\nexport default {\n  getTranslation,\n  getTranslations,\n  getAvailableLanguages,\n};\n","/**\n * Tooltips Utility\n * Provides tooltip and guidance functionality for the application\n * Implements requirement 5.2\n */\n\n/**\n * Initialize tooltips for elements with data-tooltip attribute\n * @param {HTMLElement} container - Container element to search for tooltips\n */\nexport function initTooltips(container = document) {\n  const tooltipElements = container.querySelectorAll('[data-tooltip]');\n\n  tooltipElements.forEach((element) => {\n    // Create tooltip element if it doesn't exist\n    let tooltip = element.querySelector('.tooltip');\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.className = 'tooltip';\n      tooltip.setAttribute('role', 'tooltip');\n      tooltip.setAttribute('aria-hidden', 'true');\n\n      // Add tooltip content\n      const tooltipContent = element.getAttribute('data-tooltip');\n      tooltip.textContent = tooltipContent;\n\n      // Add tooltip to element\n      element.appendChild(tooltip);\n\n      // Set position relative for proper tooltip positioning\n      if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n      }\n    }\n\n    // Add event listeners\n    element.addEventListener('mouseenter', showTooltip);\n    element.addEventListener('mouseleave', hideTooltip);\n    element.addEventListener('focus', showTooltip);\n    element.addEventListener('blur', hideTooltip);\n\n    // Add accessibility attributes\n    if (!element.hasAttribute('tabindex')) {\n      element.setAttribute('tabindex', '0');\n    }\n\n    const tooltipId = `tooltip-${Math.random().toString(36).substr(2, 9)}`;\n    tooltip.id = tooltipId;\n    element.setAttribute('aria-describedby', tooltipId);\n  });\n}\n\n/**\n * Show tooltip\n * @param {Event} event - Mouse or focus event\n */\nfunction showTooltip(event) {\n  const element = event.currentTarget;\n  const tooltip = element.querySelector('.tooltip');\n\n  if (tooltip) {\n    // Position tooltip\n    positionTooltip(element, tooltip);\n\n    // Show tooltip\n    tooltip.classList.add('visible');\n    tooltip.setAttribute('aria-hidden', 'false');\n\n    // Announce tooltip for screen readers\n    const tooltipContent = element.getAttribute('data-tooltip');\n    announceTooltip(tooltipContent);\n  }\n}\n\n/**\n * Hide tooltip\n * @param {Event} event - Mouse or blur event\n */\nfunction hideTooltip(event) {\n  const element = event.currentTarget;\n  const tooltip = element.querySelector('.tooltip');\n\n  if (tooltip) {\n    tooltip.classList.remove('visible');\n    tooltip.setAttribute('aria-hidden', 'true');\n  }\n}\n\n/**\n * Position tooltip relative to its parent element\n * @param {HTMLElement} element - Parent element\n * @param {HTMLElement} tooltip - Tooltip element\n */\nfunction positionTooltip(element, tooltip) {\n  // Get position preference from data attribute\n  const position = element.getAttribute('data-tooltip-position') || 'top';\n\n  // Remove all position classes\n  tooltip.classList.remove('tooltip-top', 'tooltip-bottom', 'tooltip-left', 'tooltip-right');\n\n  // Add position class\n  tooltip.classList.add(`tooltip-${position}`);\n\n  // Adjust position if tooltip would go off screen\n  setTimeout(() => {\n    const tooltipRect = tooltip.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    // Check if tooltip is off screen\n    if (tooltipRect.left < 0) {\n      tooltip.classList.remove(`tooltip-${position}`);\n      tooltip.classList.add('tooltip-right');\n    } else if (tooltipRect.right > viewportWidth) {\n      tooltip.classList.remove(`tooltip-${position}`);\n      tooltip.classList.add('tooltip-left');\n    } else if (tooltipRect.top < 0) {\n      tooltip.classList.remove(`tooltip-${position}`);\n      tooltip.classList.add('tooltip-bottom');\n    } else if (tooltipRect.bottom > viewportHeight) {\n      tooltip.classList.remove(`tooltip-${position}`);\n      tooltip.classList.add('tooltip-top');\n    }\n  }, 0);\n}\n\n/**\n * Announce tooltip content to screen readers\n * @param {string} content - Tooltip content\n */\nfunction announceTooltip(content) {\n  // Create or get the announcement element\n  let announcer = document.getElementById('tooltip-announcer');\n\n  if (!announcer) {\n    announcer = document.createElement('div');\n    announcer.id = 'tooltip-announcer';\n    announcer.setAttribute('aria-live', 'polite');\n    announcer.setAttribute('aria-atomic', 'true');\n    announcer.classList.add('sr-only');\n    document.body.appendChild(announcer);\n  }\n\n  // Set the message\n  announcer.textContent = '';\n\n  // Force a DOM reflow\n  void announcer.offsetWidth;\n\n  // Set the message\n  announcer.textContent = content;\n}\n\n/**\n * Add guidance tooltip to an element\n * @param {HTMLElement} element - Element to add tooltip to\n * @param {string} content - Tooltip content\n * @param {string} position - Tooltip position (top, bottom, left, right)\n */\nexport function addTooltip(element, content, position = 'top') {\n  if (!element) return;\n\n  element.setAttribute('data-tooltip', content);\n  element.setAttribute('data-tooltip-position', position);\n\n  // Initialize tooltip\n  initTooltips(element.parentNode);\n}\n\n/**\n * Create a guidance panel with detailed information\n * @param {HTMLElement} container - Container to append guidance panel to\n * @param {string} title - Guidance panel title\n * @param {string} content - Guidance panel content (can include HTML)\n * @param {string} id - Unique ID for the guidance panel\n * @returns {HTMLElement} The created guidance panel\n */\nexport function createGuidancePanel(container, title, content, id) {\n  if (!container) return null;\n\n  // Create guidance panel\n  const panel = document.createElement('div');\n  panel.className = 'guidance-panel';\n  panel.id = id || `guidance-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Create panel content\n  panel.innerHTML = `\n    <div class=\"guidance-header\">\n      <h3>${title}</h3>\n      <button class=\"guidance-close\" aria-label=\"Close guidance\">×</button>\n    </div>\n    <div class=\"guidance-content\">\n      ${content}\n    </div>\n  `;\n\n  // Add event listener for close button\n  const closeButton = panel.querySelector('.guidance-close');\n  if (closeButton) {\n    closeButton.addEventListener('click', () => {\n      panel.classList.add('guidance-hidden');\n\n      // Remove panel after animation\n      setTimeout(() => {\n        panel.remove();\n      }, 300);\n    });\n  }\n\n  // Add panel to container\n  container.appendChild(panel);\n\n  // Show panel with animation\n  setTimeout(() => {\n    panel.classList.add('guidance-visible');\n  }, 10);\n\n  return panel;\n}\n\n/**\n * Create an interactive tutorial\n * @param {Array} steps - Array of tutorial steps\n * @param {Function} onComplete - Callback function when tutorial is complete\n */\nexport function createTutorial(steps, onComplete) {\n  if (!steps || !steps.length) return;\n\n  let currentStep = 0;\n\n  // Create tutorial overlay\n  const overlay = document.createElement('div');\n  overlay.className = 'tutorial-overlay';\n  document.body.appendChild(overlay);\n\n  // Show first step\n  showTutorialStep(steps[currentStep]);\n\n  /**\n   * Show a tutorial step\n   * @param {Object} step - Tutorial step\n   */\n  function showTutorialStep(step) {\n    // Find target element\n    const target = document.querySelector(step.selector);\n    if (!target) {\n      console.error(`Tutorial target not found: ${step.selector}`);\n      nextStep();\n      return;\n    }\n\n    // Position highlight around target\n    positionHighlight(target);\n\n    // Create tooltip\n    const tooltip = document.createElement('div');\n    tooltip.className = 'tutorial-tooltip';\n    tooltip.innerHTML = `\n      <div class=\"tutorial-content\">\n        <h3>${step.title}</h3>\n        <p>${step.content}</p>\n      </div>\n      <div class=\"tutorial-controls\">\n        <button class=\"tutorial-prev\" ${currentStep === 0 ? 'disabled' : ''}>Previous</button>\n        <span class=\"tutorial-progress\">${currentStep + 1}/${steps.length}</span>\n        <button class=\"tutorial-next\">${currentStep === steps.length - 1 ? 'Finish' : 'Next'}</button>\n      </div>\n    `;\n\n    // Position tooltip\n    positionTooltipNearTarget(tooltip, target, step.position || 'bottom');\n\n    // Add tooltip to document\n    document.body.appendChild(tooltip);\n\n    // Add event listeners\n    const prevButton = tooltip.querySelector('.tutorial-prev');\n    const nextButton = tooltip.querySelector('.tutorial-next');\n\n    if (prevButton) {\n      prevButton.addEventListener('click', prevStep);\n    }\n\n    if (nextButton) {\n      nextButton.addEventListener('click', nextStep);\n    }\n\n    // Execute step action if provided\n    if (step.action && typeof step.action === 'function') {\n      step.action(target);\n    }\n  }\n\n  /**\n   * Position highlight around target element\n   * @param {HTMLElement} target - Target element\n   */\n  function positionHighlight(target) {\n    const rect = target.getBoundingClientRect();\n\n    // Create highlight element if it doesn't exist\n    let highlight = document.querySelector('.tutorial-highlight');\n    if (!highlight) {\n      highlight = document.createElement('div');\n      highlight.className = 'tutorial-highlight';\n      overlay.appendChild(highlight);\n    }\n\n    // Position highlight\n    highlight.style.top = `${rect.top - 10}px`;\n    highlight.style.left = `${rect.left - 10}px`;\n    highlight.style.width = `${rect.width + 20}px`;\n    highlight.style.height = `${rect.height + 20}px`;\n  }\n\n  /**\n   * Position tooltip near target element\n   * @param {HTMLElement} tooltip - Tooltip element\n   * @param {HTMLElement} target - Target element\n   * @param {string} position - Position (top, bottom, left, right)\n   */\n  function positionTooltipNearTarget(tooltip, target, position) {\n    const rect = target.getBoundingClientRect();\n    const tooltipRect = tooltip.getBoundingClientRect();\n\n    // Set initial position\n    switch (position) {\n      case 'top':\n        tooltip.style.top = `${rect.top - tooltipRect.height - 20}px`;\n        tooltip.style.left = `${rect.left + (rect.width / 2) - (tooltipRect.width / 2)}px`;\n        break;\n      case 'bottom':\n        tooltip.style.top = `${rect.bottom + 20}px`;\n        tooltip.style.left = `${rect.left + (rect.width / 2) - (tooltipRect.width / 2)}px`;\n        break;\n      case 'left':\n        tooltip.style.top = `${rect.top + (rect.height / 2) - (tooltipRect.height / 2)}px`;\n        tooltip.style.left = `${rect.left - tooltipRect.width - 20}px`;\n        break;\n      case 'right':\n        tooltip.style.top = `${rect.top + (rect.height / 2) - (tooltipRect.height / 2)}px`;\n        tooltip.style.left = `${rect.right + 20}px`;\n        break;\n      default:\n        tooltip.style.top = `${rect.bottom + 20}px`;\n        tooltip.style.left = `${rect.left + (rect.width / 2) - (tooltipRect.width / 2)}px`;\n    }\n\n    // Adjust if tooltip is off screen\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    if (parseFloat(tooltip.style.left) < 20) {\n      tooltip.style.left = '20px';\n    } else if (parseFloat(tooltip.style.left) + tooltipRect.width > viewportWidth - 20) {\n      tooltip.style.left = `${viewportWidth - tooltipRect.width - 20}px`;\n    }\n\n    if (parseFloat(tooltip.style.top) < 20) {\n      tooltip.style.top = '20px';\n    } else if (parseFloat(tooltip.style.top) + tooltipRect.height > viewportHeight - 20) {\n      tooltip.style.top = `${viewportHeight - tooltipRect.height - 20}px`;\n    }\n  }\n\n  /**\n   * Go to previous step\n   */\n  function prevStep() {\n    if (currentStep > 0) {\n      // Remove current tooltip\n      const tooltip = document.querySelector('.tutorial-tooltip');\n      if (tooltip) {\n        tooltip.remove();\n      }\n\n      // Go to previous step\n      currentStep--;\n      showTutorialStep(steps[currentStep]);\n    }\n  }\n\n  /**\n   * Go to next step\n   */\n  function nextStep() {\n    // Remove current tooltip\n    const tooltip = document.querySelector('.tutorial-tooltip');\n    if (tooltip) {\n      tooltip.remove();\n    }\n\n    // Check if tutorial is complete\n    if (currentStep === steps.length - 1) {\n      completeTutorial();\n      return;\n    }\n\n    // Go to next step\n    currentStep++;\n    showTutorialStep(steps[currentStep]);\n  }\n\n  /**\n   * Complete tutorial\n   */\n  function completeTutorial() {\n    // Remove overlay and highlight\n    overlay.remove();\n\n    // Call onComplete callback\n    if (onComplete && typeof onComplete === 'function') {\n      onComplete();\n    }\n  }\n}\n\nexport default {\n  initTooltips,\n  addTooltip,\n  createGuidancePanel,\n  createTutorial,\n};\n","/**\n * Animation Manager Utility\n * Manages smooth animations and transitions for UI elements\n * Implements requirements 3.1, 3.4\n */\n\nclass AnimationManager {\n  constructor() {\n    this.animationQueue = [];\n    this.isAnimating = false;\n    this.observers = new Map();\n  }\n\n  /**\n   * Animate results appearing with staggered effect\n   * @param {HTMLElement|string} container - Container element or selector\n   * @param {Object} options - Animation options\n   */\n  animateResultsReveal(container, options = {}) {\n    const element = typeof container === 'string' ? document.querySelector(container) : container;\n    if (!element) return;\n\n    const {\n      stagger = true,\n      delay = 0,\n      duration = 500,\n      easing = 'cubic-bezier(0.4, 0, 0.2, 1)',\n    } = options;\n\n    // Find all animatable children\n    const children = element.querySelectorAll('.summary-item, .breakdown-chart, .chart-item, .results-summary > *, .results-breakdown > *');\n\n    if (children.length === 0) return;\n\n    // Reset any existing animations\n    children.forEach((child) => {\n      child.classList.remove('results-enter', 'results-enter-stagger');\n      child.style.opacity = '0';\n      child.style.transform = 'translateY(30px)';\n    });\n\n    // Start animation after a brief delay\n    setTimeout(() => {\n      if (stagger) {\n        children.forEach((child, index) => {\n          setTimeout(() => {\n            child.classList.add('results-enter-stagger');\n          }, index * 100);\n        });\n      } else {\n        children.forEach((child) => {\n          child.classList.add('results-enter');\n        });\n      }\n    }, delay);\n  }\n\n  /**\n   * Animate chart reveal with scale effect\n   * @param {HTMLElement|string} container - Container element or selector\n   * @param {Object} options - Animation options\n   */\n  animateChartReveal(container, options = {}) {\n    const element = typeof container === 'string' ? document.querySelector(container) : container;\n    if (!element) return;\n\n    const { delay = 300 } = options;\n\n    // Reset animation state\n    element.classList.remove('chart-reveal', 'chart-reveal-delayed');\n    element.style.opacity = '0';\n    element.style.transform = 'scale(0.8)';\n\n    // Start animation\n    setTimeout(() => {\n      element.classList.add(delay > 0 ? 'chart-reveal-delayed' : 'chart-reveal');\n    }, delay);\n  }\n\n  /**\n   * Animate table rows appearing\n   * @param {HTMLElement|string} table - Table element or selector\n   * @param {Object} options - Animation options\n   */\n  animateTableRows(table, options = {}) {\n    const element = typeof table === 'string' ? document.querySelector(table) : table;\n    if (!element) return;\n\n    const { delay = 0, staggerDelay = 50 } = options;\n    const rows = element.querySelectorAll('tbody tr');\n\n    if (rows.length === 0) return;\n\n    // Reset animation state\n    rows.forEach((row) => {\n      row.classList.remove('table-row-enter');\n      row.style.opacity = '0';\n      row.style.transform = 'translateX(-20px)';\n    });\n\n    // Start animation\n    setTimeout(() => {\n      rows.forEach((row, index) => {\n        setTimeout(() => {\n          row.classList.add('table-row-enter');\n        }, index * staggerDelay);\n      });\n    }, delay);\n  }\n\n  /**\n   * Animate number changes with counter effect\n   * @param {HTMLElement} element - Element containing the number\n   * @param {number} from - Starting number\n   * @param {number} to - Ending number\n   * @param {Object} options - Animation options\n   */\n  animateNumber(element, from, to, options = {}) {\n    if (!element) return;\n\n    const {\n      duration = 1000,\n      formatter = (num) => num.toLocaleString(),\n      easing = 'easeOutCubic',\n    } = options;\n\n    const startTime = performance.now();\n    const difference = to - from;\n\n    const easingFunctions = {\n      linear: (t) => t,\n      easeOutCubic: (t) => 1 - (1 - t) ** 3,\n      easeInOutCubic: (t) => (t < 0.5 ? 4 * t * t * t : 1 - (-2 * t + 2) ** 3 / 2),\n    };\n\n    const easingFunction = easingFunctions[easing] || easingFunctions.easeOutCubic;\n\n    element.classList.add('number-counter', 'updating');\n\n    const animate = (currentTime) => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easedProgress = easingFunction(progress);\n\n      const currentValue = from + (difference * easedProgress);\n      element.textContent = formatter(currentValue);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        element.classList.remove('updating');\n        element.textContent = formatter(to);\n      }\n    };\n\n    requestAnimationFrame(animate);\n  }\n\n  /**\n   * Animate progress bar fill\n   * @param {HTMLElement|string} progressBar - Progress bar element or selector\n   * @param {number} percentage - Target percentage (0-100)\n   * @param {Object} options - Animation options\n   */\n  animateProgressBar(progressBar, percentage, options = {}) {\n    const element = typeof progressBar === 'string' ? document.querySelector(progressBar) : progressBar;\n    if (!element) return;\n\n    const { duration = 1000, delay = 0 } = options;\n    const fill = element.querySelector('.breakdown-principal, .breakdown-interest, .progress-fill');\n\n    if (!fill) return;\n\n    setTimeout(() => {\n      fill.style.transition = `width ${duration}ms cubic-bezier(0.25, 0.46, 0.45, 0.94)`;\n      fill.style.width = `${Math.min(100, Math.max(0, percentage))}%`;\n    }, delay);\n  }\n\n  /**\n   * Add hover animations to elements\n   * @param {HTMLElement|string} container - Container element or selector\n   * @param {string} selector - Selector for elements to animate\n   */\n  addHoverAnimations(container, selector) {\n    const element = typeof container === 'string' ? document.querySelector(container) : container;\n    if (!element) return;\n\n    const targets = element.querySelectorAll(selector);\n\n    targets.forEach((target) => {\n      target.addEventListener('mouseenter', () => {\n        target.style.transform = 'translateY(-2px)';\n        target.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      });\n\n      target.addEventListener('mouseleave', () => {\n        target.style.transform = '';\n        target.style.boxShadow = '';\n      });\n    });\n  }\n\n  /**\n   * Create ripple effect on button click\n   * @param {HTMLElement} button - Button element\n   * @param {Event} event - Click event\n   */\n  createRippleEffect(button, event) {\n    if (!button || !event) return;\n\n    const rect = button.getBoundingClientRect();\n    const size = Math.max(rect.width, rect.height);\n    const x = event.clientX - rect.left - size / 2;\n    const y = event.clientY - rect.top - size / 2;\n\n    const ripple = document.createElement('div');\n    ripple.style.cssText = `\n      position: absolute;\n      width: ${size}px;\n      height: ${size}px;\n      left: ${x}px;\n      top: ${y}px;\n      background: rgba(255, 255, 255, 0.3);\n      border-radius: 50%;\n      transform: scale(0);\n      animation: ripple 0.6s linear;\n      pointer-events: none;\n    `;\n\n    button.style.position = 'relative';\n    button.style.overflow = 'hidden';\n    button.appendChild(ripple);\n\n    setTimeout(() => {\n      ripple.remove();\n    }, 600);\n  }\n\n  /**\n   * Animate element entrance with intersection observer\n   * @param {string} selector - Selector for elements to observe\n   * @param {Object} options - Animation options\n   */\n  observeAndAnimate(selector, options = {}) {\n    const {\n      threshold = 0.1,\n      rootMargin = '0px 0px -50px 0px',\n      animationClass = 'results-enter',\n    } = options;\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(animationClass);\n          observer.unobserve(entry.target);\n        }\n      });\n    }, {\n      threshold,\n      rootMargin,\n    });\n\n    const elements = document.querySelectorAll(selector);\n    elements.forEach((element) => {\n      observer.observe(element);\n    });\n\n    this.observers.set(selector, observer);\n  }\n\n  /**\n   * Remove all observers\n   */\n  disconnectObservers() {\n    this.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    this.observers.clear();\n  }\n\n  /**\n   * Queue animation for sequential execution\n   * @param {Function} animationFunction - Function that performs the animation\n   * @param {number} delay - Delay before executing this animation\n   */\n  queueAnimation(animationFunction, delay = 0) {\n    this.animationQueue.push({ fn: animationFunction, delay });\n\n    if (!this.isAnimating) {\n      this.processQueue();\n    }\n  }\n\n  /**\n   * Process animation queue\n   * @private\n   */\n  async processQueue() {\n    if (this.animationQueue.length === 0) {\n      this.isAnimating = false;\n      return;\n    }\n\n    this.isAnimating = true;\n    const { fn, delay } = this.animationQueue.shift();\n\n    if (delay > 0) {\n      await new Promise((resolve) => {\n        setTimeout(resolve, delay);\n      });\n    }\n\n    try {\n      await fn();\n    } catch (error) {\n      console.error('Animation error:', error);\n    }\n\n    // Process next animation\n    this.processQueue();\n  }\n\n  /**\n   * Clear animation queue\n   */\n  clearQueue() {\n    this.animationQueue = [];\n    this.isAnimating = false;\n  }\n\n  /**\n   * Check if user prefers reduced motion\n   * @returns {boolean} True if reduced motion is preferred\n   */\n  prefersReducedMotion() {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n  }\n\n  /**\n   * Animate with respect to user preferences\n   * @param {Function} animationFunction - Animation to run\n   * @param {Function} fallbackFunction - Fallback for reduced motion\n   */\n  respectfulAnimate(animationFunction, fallbackFunction = null) {\n    if (this.prefersReducedMotion()) {\n      if (fallbackFunction) {\n        fallbackFunction();\n      }\n    } else {\n      animationFunction();\n    }\n  }\n}\n\n// Add ripple animation CSS if not already present\nif (!document.querySelector('#ripple-animation-styles')) {\n  const style = document.createElement('style');\n  style.id = 'ripple-animation-styles';\n  style.textContent = `\n    @keyframes ripple {\n      to {\n        transform: scale(4);\n        opacity: 0;\n      }\n    }\n  `;\n  document.head.appendChild(style);\n}\n\n// Create singleton instance\nconst animationManager = new AnimationManager();\n\nexport default animationManager;\n","/**\n * Accessibility Utility\n * Provides functions for improving application accessibility\n * Implements requirements 6.1, 6.2, 6.5, 6.6\n */\n\n/**\n * Set focus to an element\n * @param {HTMLElement} element - Element to focus\n */\nexport function setFocus(element) {\n  if (element && typeof element.focus === 'function') {\n    element.focus();\n  }\n}\n\n/**\n * Add keyboard navigation to a component\n * @param {HTMLElement} container - Container element\n * @param {string} selector - Selector for focusable elements\n * @param {boolean} loop - Whether to loop from last to first element\n */\nexport function addKeyboardNavigation(container, selector = 'a, button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])', loop = true) {\n  if (!container) return;\n\n  const focusableElements = container.querySelectorAll(selector);\n  if (focusableElements.length === 0) return;\n\n  container.addEventListener('keydown', (e) => {\n    // Tab key navigation\n    if (e.key === 'Tab') {\n      const firstElement = focusableElements[0];\n      const lastElement = focusableElements[focusableElements.length - 1];\n\n      // Shift + Tab on first element\n      if (e.shiftKey && document.activeElement === firstElement) {\n        if (loop) {\n          e.preventDefault();\n          lastElement.focus();\n        }\n      } else if (!e.shiftKey && document.activeElement === lastElement) { // Tab on last element\n        if (loop) {\n          e.preventDefault();\n          firstElement.focus();\n        }\n      }\n    }\n  });\n}\n\n/**\n * Make an element announce a message to screen readers\n * @param {string} message - Message to announce\n * @param {string} ariaLive - ARIA live value ('polite' or 'assertive')\n * @param {number} delay - Delay before announcement in milliseconds\n */\nexport function announceToScreenReader(message, ariaLive = 'polite', delay = 100) {\n  // Create or get the announcement element\n  let announcer = document.getElementById('screen-reader-announcer');\n\n  if (!announcer) {\n    announcer = document.createElement('div');\n    announcer.id = 'screen-reader-announcer';\n    announcer.setAttribute('aria-live', ariaLive);\n    announcer.setAttribute('aria-atomic', 'true');\n    announcer.setAttribute('role', 'status');\n    announcer.classList.add('sr-only');\n    document.body.appendChild(announcer);\n  }\n\n  // Clear previous message\n  announcer.textContent = '';\n\n  // Force a DOM reflow and add delay for better screen reader compatibility\n  void announcer.offsetWidth;\n\n  setTimeout(() => {\n    announcer.textContent = message;\n  }, delay);\n}\n\n/**\n * Announce loading states to screen readers\n * @param {string} status - Loading status ('started', 'progress', 'completed', 'error')\n * @param {string} message - Custom message\n * @param {number} progress - Progress percentage (0-100)\n */\nexport function announceLoadingState(status, message = '', progress = null) {\n  let announcement = '';\n\n  switch (status) {\n    case 'started':\n      announcement = message || 'Calculation started. Please wait.';\n      break;\n    case 'progress':\n      if (progress !== null) {\n        announcement = `${message || 'Calculating'} ${Math.round(progress)}% complete.`;\n      } else {\n        announcement = message || 'Calculation in progress.';\n      }\n      break;\n    case 'completed':\n      announcement = message || 'Calculation completed. Results are now available.';\n      break;\n    case 'error':\n      announcement = message || 'An error occurred during calculation. Please try again.';\n      break;\n    default:\n      announcement = message;\n  }\n\n  const ariaLive = status === 'error' ? 'assertive' : 'polite';\n  announceToScreenReader(announcement, ariaLive);\n}\n\n/**\n * Announce form validation errors to screen readers\n * @param {string} fieldName - Name of the field with error\n * @param {string} errorMessage - Error message\n */\nexport function announceValidationError(fieldName, errorMessage) {\n  const announcement = `${fieldName} field error: ${errorMessage}`;\n  announceToScreenReader(announcement, 'assertive');\n}\n\n/**\n * Add internationalization support to an element\n * @param {HTMLElement} element - Element to update\n * @param {string} textContent - Text content to set\n * @param {string} language - Language code\n */\nexport function setInternationalizedText(element, textContent, language = 'en') {\n  if (!element) return;\n\n  element.textContent = textContent;\n  element.setAttribute('lang', language);\n\n  // Set text direction based on language\n  const rtlLanguages = ['ar', 'he', 'fa', 'ur'];\n  if (rtlLanguages.includes(language)) {\n    element.setAttribute('dir', 'rtl');\n  } else {\n    element.setAttribute('dir', 'ltr');\n  }\n}\n\n/**\n * Update document language\n * @param {string} language - Language code\n */\nexport function updateDocumentLanguage(language = 'en') {\n  document.documentElement.setAttribute('lang', language);\n\n  // Set text direction based on language\n  const rtlLanguages = ['ar', 'he', 'fa', 'ur'];\n  if (rtlLanguages.includes(language)) {\n    document.documentElement.setAttribute('dir', 'rtl');\n  } else {\n    document.documentElement.setAttribute('dir', 'ltr');\n  }\n}\n\n/**\n * Add ARIA labels and descriptions to form elements\n * @param {HTMLElement} container - Container with form elements\n */\nexport function enhanceFormAccessibility(container) {\n  if (!container) return;\n\n  // Add ARIA labels to inputs that don't have proper labels\n  const inputs = container.querySelectorAll('input, select, textarea');\n  inputs.forEach((input) => {\n    const label = container.querySelector(`label[for=\"${input.id}\"]`);\n    const ariaLabel = input.getAttribute('aria-label');\n\n    if (!label && !ariaLabel) {\n      // Try to find a nearby label or use placeholder\n      const placeholder = input.getAttribute('placeholder');\n      if (placeholder) {\n        input.setAttribute('aria-label', placeholder);\n      }\n    }\n\n    // Add aria-describedby for error messages\n    const errorElement = container.querySelector(`#${input.id}-error, #${input.name}-error`);\n    if (errorElement) {\n      input.setAttribute('aria-describedby', errorElement.id);\n      errorElement.setAttribute('role', 'alert');\n      errorElement.setAttribute('aria-live', 'polite');\n    }\n\n    // Add aria-invalid for validation states\n    if (input.classList.contains('is-invalid')) {\n      input.setAttribute('aria-invalid', 'true');\n    } else {\n      input.setAttribute('aria-invalid', 'false');\n    }\n  });\n\n  // Enhance sliders with proper ARIA attributes\n  const sliders = container.querySelectorAll('input[type=\"range\"]');\n  sliders.forEach((slider) => {\n    if (!slider.getAttribute('aria-label') && !slider.getAttribute('aria-labelledby')) {\n      const associatedInput = container.querySelector(`#${slider.id.replace('-slider', '')}`);\n      if (associatedInput) {\n        const label = container.querySelector(`label[for=\"${associatedInput.id}\"]`);\n        if (label) {\n          slider.setAttribute('aria-label', `${label.textContent.trim()} slider`);\n        }\n      }\n    }\n\n    // Add value text for screen readers\n    slider.setAttribute('aria-valuetext', `${slider.value} ${slider.getAttribute('aria-label') || ''}`);\n  });\n}\n\n/**\n * Add ARIA attributes to loading states\n * @param {HTMLElement} element - Element with loading state\n * @param {string} loadingText - Text to announce during loading\n */\nexport function enhanceLoadingAccessibility(element, loadingText = 'Loading') {\n  if (!element) return;\n\n  element.setAttribute('aria-busy', 'true');\n  element.setAttribute('aria-live', 'polite');\n  element.setAttribute('aria-label', loadingText);\n\n  // Add role if not present\n  if (!element.getAttribute('role')) {\n    element.setAttribute('role', 'status');\n  }\n}\n\n/**\n * Remove loading accessibility attributes\n * @param {HTMLElement} element - Element to clean up\n */\nexport function removeLoadingAccessibility(element) {\n  if (!element) return;\n\n  element.removeAttribute('aria-busy');\n  element.removeAttribute('aria-live');\n  element.removeAttribute('aria-label');\n\n  // Only remove role if it was 'status'\n  if (element.getAttribute('role') === 'status') {\n    element.removeAttribute('role');\n  }\n}\n\n/**\n * Add ARIA attributes to tables for better screen reader support\n * @param {HTMLElement} table - Table element\n * @param {string} caption - Table caption\n */\nexport function enhanceTableAccessibility(table, caption = '') {\n  if (!table) return;\n\n  // Add table role if not present\n  if (!table.getAttribute('role')) {\n    table.setAttribute('role', 'table');\n  }\n\n  // Add caption if provided\n  if (caption && !table.querySelector('caption')) {\n    const captionElement = document.createElement('caption');\n    captionElement.textContent = caption;\n    captionElement.classList.add('sr-only');\n    table.insertBefore(captionElement, table.firstChild);\n  }\n\n  // Enhance headers\n  const headers = table.querySelectorAll('th');\n  headers.forEach((header, index) => {\n    if (!header.getAttribute('scope')) {\n      // Determine scope based on position\n      const row = header.closest('tr');\n      const isFirstRow = row === table.querySelector('tr');\n      header.setAttribute('scope', isFirstRow ? 'col' : 'row');\n    }\n\n    if (!header.id) {\n      header.id = `table-header-${index}`;\n    }\n  });\n\n  // Add aria-describedby to data cells\n  const cells = table.querySelectorAll('td');\n  cells.forEach((cell) => {\n    const row = cell.closest('tr');\n    const cellIndex = Array.from(row.children).indexOf(cell);\n    const header = table.querySelector(`th:nth-child(${cellIndex + 1})`);\n\n    if (header && header.id) {\n      const existingDescribedBy = cell.getAttribute('aria-describedby');\n      const newDescribedBy = existingDescribedBy ? `${existingDescribedBy} ${header.id}` : header.id;\n      cell.setAttribute('aria-describedby', newDescribedBy);\n    }\n  });\n}\n\n/**\n * Test color contrast ratio\n * @param {string} foreground - Foreground color (hex, rgb, or hsl)\n * @param {string} background - Background color (hex, rgb, or hsl)\n * @returns {Object} Contrast ratio and WCAG compliance info\n */\nexport function testColorContrast(foreground, background) {\n  // Convert colors to RGB\n  const fgRgb = hexToRgb(foreground) || parseRgb(foreground);\n  const bgRgb = hexToRgb(background) || parseRgb(background);\n\n  if (!fgRgb || !bgRgb) {\n    return { error: 'Invalid color format' };\n  }\n\n  // Calculate relative luminance\n  const fgLuminance = getRelativeLuminance(fgRgb);\n  const bgLuminance = getRelativeLuminance(bgRgb);\n\n  // Calculate contrast ratio\n  const lighter = Math.max(fgLuminance, bgLuminance);\n  const darker = Math.min(fgLuminance, bgLuminance);\n  const ratio = (lighter + 0.05) / (darker + 0.05);\n\n  return {\n    ratio: Math.round(ratio * 100) / 100,\n    wcagAA: ratio >= 4.5,\n    wcagAAA: ratio >= 7,\n    wcagAALarge: ratio >= 3,\n    wcagAAALarge: ratio >= 4.5,\n  };\n}\n\n// Helper functions for color contrast testing\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16),\n  } : null;\n}\n\nfunction parseRgb(rgb) {\n  const match = rgb.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n  return match ? {\n    r: parseInt(match[1]),\n    g: parseInt(match[2]),\n    b: parseInt(match[3]),\n  } : null;\n}\n\nfunction getRelativeLuminance(rgb) {\n  const { r, g, b } = rgb;\n  const [rs, gs, bs] = [r, g, b].map((c) => {\n    c /= 255;\n    return c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4;\n  });\n  return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n}\n\nexport default {\n  setFocus,\n  addKeyboardNavigation,\n  announceToScreenReader,\n  announceLoadingState,\n  announceValidationError,\n  setInternationalizedText,\n  updateDocumentLanguage,\n  enhanceFormAccessibility,\n  enhanceLoadingAccessibility,\n  removeLoadingAccessibility,\n  enhanceTableAccessibility,\n  testColorContrast,\n};\n","/**\n * Calculation Manager Service\n * Manages saved loan calculations with naming, organization, and comparison features\n * Implements requirements 1.4, 3.3\n */\n\nimport StorageService from './storage.service.js';\nimport Loan from '../models/loan.model.js';\nimport { AmortizationSchedule } from '../models/amortization.model.js';\n\nclass CalculationManagerService {\n  /**\n   * Create a new calculation manager service\n   * @param {Object} options - Configuration options\n   * @param {StorageService} [options.storageService] - Storage service instance\n   * @param {number} [options.maxComparisons] - Maximum number of calculations that can be compared\n   */\n  constructor(options = {}) {\n    this.storageService = options.storageService || new StorageService();\n    this.maxComparisons = options.maxComparisons || 3;\n    this.selectedCalculations = [];\n  }\n\n  /**\n   * Get all saved calculations with additional metadata\n   * @returns {Array} Array of calculation objects with metadata\n   */\n  getAllCalculations() {\n    const calculations = this.storageService.getCalculations();\n\n    // Add additional metadata and sort by date (newest first)\n    return calculations\n      .map((calc) => ({\n        ...calc,\n        isSelected: this.isSelected(calc.loan.id),\n        formattedDate: this._formatDate(calc.savedAt),\n      }))\n      .sort((a, b) => b.savedAt - a.savedAt);\n  }\n\n  /**\n   * Get a calculation by ID with full details\n   * @param {string} id - Calculation ID\n   * @returns {Object|null} Calculation object with loan and amortization schedule\n   */\n  getCalculation(id) {\n    return this.storageService.getCalculationById(id);\n  }\n\n  /**\n   * Save a calculation with a custom name\n   * @param {Loan} loan - Loan object\n   * @param {AmortizationSchedule} [amortizationSchedule] - Amortization schedule\n   * @param {string} [name] - Custom name for the calculation\n   * @returns {string} ID of the saved calculation\n   */\n  saveCalculation(loan, amortizationSchedule = null, name = null) {\n    // Update the loan name if provided\n    if (name && name.trim()) {\n      loan = loan.update({ name: name.trim() });\n    }\n\n    return this.storageService.saveCalculation(loan, amortizationSchedule);\n  }\n\n  /**\n   * Update an existing calculation\n   * @param {string} id - Calculation ID\n   * @param {Object} updates - Updates to apply\n   * @param {string} [updates.name] - New name\n   * @param {Object} [updates.loanUpdates] - Updates to apply to the loan\n   * @returns {boolean} Success status\n   */\n  updateCalculation(id, updates = {}) {\n    // Get the existing calculation\n    const calculation = this.storageService.getCalculationById(id);\n    if (!calculation) {\n      return false;\n    }\n\n    // Apply updates\n    let updatedLoan = calculation.loan;\n\n    // Update name if provided\n    if (updates.name) {\n      updatedLoan = updatedLoan.update({ name: updates.name.trim() });\n    }\n\n    // Apply other loan updates if provided\n    if (updates.loanUpdates) {\n      updatedLoan = updatedLoan.update(updates.loanUpdates);\n    }\n\n    // Generate new amortization schedule if needed\n    let updatedSchedule = calculation.amortizationSchedule;\n    if (updates.loanUpdates) {\n      updatedSchedule = new AmortizationSchedule(updatedLoan);\n    }\n\n    // Save the updated calculation\n    return this.storageService.updateCalculation(id, updatedLoan, updatedSchedule);\n  }\n\n  /**\n   * Delete a calculation\n   * @param {string} id - Calculation ID\n   * @returns {boolean} Success status\n   */\n  deleteCalculation(id) {\n    // Remove from selected calculations if present\n    this.deselectCalculation(id);\n\n    // Delete from storage\n    return this.storageService.deleteCalculation(id);\n  }\n\n  /**\n   * Select a calculation for comparison\n   * @param {string} id - Calculation ID\n   * @returns {boolean} Success status\n   */\n  selectCalculation(id) {\n    // Check if already selected\n    if (this.isSelected(id)) {\n      return true;\n    }\n\n    // Check if we've reached the maximum number of comparisons\n    if (this.selectedCalculations.length >= this.maxComparisons) {\n      return false;\n    }\n\n    // Add to selected calculations\n    this.selectedCalculations.push(id);\n    return true;\n  }\n\n  /**\n   * Deselect a calculation\n   * @param {string} id - Calculation ID\n   * @returns {boolean} Success status\n   */\n  deselectCalculation(id) {\n    const index = this.selectedCalculations.indexOf(id);\n    if (index !== -1) {\n      this.selectedCalculations.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Check if a calculation is selected\n   * @param {string} id - Calculation ID\n   * @returns {boolean} Whether the calculation is selected\n   */\n  isSelected(id) {\n    return this.selectedCalculations.includes(id);\n  }\n\n  /**\n   * Clear all selected calculations\n   */\n  clearSelection() {\n    this.selectedCalculations = [];\n  }\n\n  /**\n   * Get selected calculations for comparison\n   * @returns {Array} Array of selected calculation objects\n   */\n  getSelectedCalculations() {\n    return this.selectedCalculations.map((id) => {\n      const calculation = this.storageService.getCalculationById(id);\n      return calculation ? {\n        id,\n        loan: calculation.loan,\n        amortizationSchedule: calculation.amortizationSchedule,\n        savedAt: calculation.savedAt,\n      } : null;\n    }).filter((calc) => calc !== null);\n  }\n\n  /**\n   * Compare selected calculations\n   * @returns {Object} Comparison results\n   */\n  compareCalculations() {\n    const selected = this.getSelectedCalculations();\n\n    if (selected.length < 2) {\n      return {\n        success: false,\n        message: 'At least two calculations must be selected for comparison',\n      };\n    }\n\n    // Create comparison data structure\n    const comparison = {\n      calculations: selected,\n      metrics: this._generateComparisonMetrics(selected),\n      differences: this._calculateDifferences(selected),\n    };\n\n    return {\n      success: true,\n      comparison,\n    };\n  }\n\n  /**\n   * Generate metrics for comparison\n   * @param {Array} calculations - Array of calculation objects\n   * @returns {Object} Comparison metrics\n   * @private\n   */\n  _generateComparisonMetrics(calculations) {\n    return calculations.map((calc) => {\n      const { loan } = calc;\n      const schedule = calc.amortizationSchedule;\n\n      return {\n        id: calc.id,\n        name: loan.name,\n        principal: loan.principal,\n        downPayment: loan.downPayment,\n        loanAmount: loan.totalLoanAmount,\n        interestRate: loan.interestRate,\n        term: loan.term,\n        paymentFrequency: loan.paymentFrequency,\n        paymentAmount: loan.paymentAmount,\n        totalInterest: schedule ? schedule.totalInterest : loan.totalInterest,\n        totalPayment: schedule ? schedule.totalPayment : (loan.paymentAmount * loan.numberOfPayments),\n        payoffDate: schedule ? schedule.payoffDate : loan.payoffDate,\n      };\n    });\n  }\n\n  /**\n   * Calculate differences between calculations\n   * @param {Array} calculations - Array of calculation objects\n   * @returns {Object} Differences between calculations\n   * @private\n   */\n  _calculateDifferences(calculations) {\n    if (calculations.length < 2) {\n      return {};\n    }\n\n    // Use the first calculation as the baseline\n    const baseline = calculations[0];\n    const differences = {};\n\n    // Compare each calculation to the baseline\n    for (let i = 1; i < calculations.length; i++) {\n      const current = calculations[i];\n      const diff = {\n        paymentDifference: current.loan.paymentAmount - baseline.loan.paymentAmount,\n        interestDifference: 0,\n        totalPaymentDifference: 0,\n        termDifference: current.loan.term - baseline.loan.term,\n      };\n\n      // Calculate interest and total payment differences if schedules are available\n      if (baseline.amortizationSchedule && current.amortizationSchedule) {\n        diff.interestDifference = current.amortizationSchedule.totalInterest - baseline.amortizationSchedule.totalInterest;\n        diff.totalPaymentDifference = current.amortizationSchedule.totalPayment - baseline.amortizationSchedule.totalPayment;\n      } else {\n        // Estimate if schedules aren't available\n        diff.interestDifference = (current.loan.paymentAmount * current.loan.numberOfPayments)\n          - (baseline.loan.paymentAmount * baseline.loan.numberOfPayments);\n        diff.totalPaymentDifference = diff.interestDifference;\n      }\n\n      differences[current.id] = diff;\n    }\n\n    return differences;\n  }\n\n  /**\n   * Format a date for display\n   * @param {Date} date - Date to format\n   * @returns {string} Formatted date string\n   * @private\n   */\n  _formatDate(date) {\n    if (!date) return '';\n\n    return date.toLocaleDateString(undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  }\n\n  /**\n   * Organize calculations by creating categories/folders (for future implementation)\n   * @param {Array} calculationIds - Array of calculation IDs\n   * @param {string} category - Category name\n   * @returns {boolean} Success status\n   */\n  organizeCalculations(calculationIds, category) {\n    // This is a placeholder for future implementation\n    // Would require extending the storage service to support categories\n    console.log(`Organizing calculations ${calculationIds.join(', ')} into category \"${category}\"`);\n    return true;\n  }\n\n  /**\n   * Get storage statistics\n   * @returns {Object} Storage statistics\n   */\n  getStorageStats() {\n    return this.storageService.getStorageStats();\n  }\n}\n\nexport default CalculationManagerService;\n","/**\n * Language Service\n * Manages language settings and translations for the application\n * Implements requirements 6.3, 6.4\n */\n\nimport { getTranslation, getTranslations, getAvailableLanguages } from '../utils/translations.js';\nimport { getLocaleFromLanguage } from '../utils/formatters.js';\nimport { updateDocumentLanguage } from '../utils/accessibility.js';\n\nclass LanguageService {\n  /**\n   * Create a new language service\n   * @param {Object} options - Configuration options\n   */\n  constructor(options = {}) {\n    this.currentLanguage = options.defaultLanguage || 'en';\n    this.storageKey = 'loan-calculator-language';\n    this.listeners = [];\n\n    // Load saved language\n    this.loadLanguage();\n  }\n\n  /**\n   * Load language from local storage\n   */\n  loadLanguage() {\n    try {\n      const savedLanguage = localStorage.getItem(this.storageKey);\n      if (savedLanguage) {\n        this.currentLanguage = savedLanguage;\n      }\n    } catch (error) {\n      console.error('Error loading language setting:', error);\n    }\n  }\n\n  /**\n   * Save language to local storage\n   */\n  saveLanguage() {\n    try {\n      localStorage.setItem(this.storageKey, this.currentLanguage);\n    } catch (error) {\n      console.error('Error saving language setting:', error);\n    }\n  }\n\n  /**\n   * Get current language\n   * @returns {string} Current language code\n   */\n  getLanguage() {\n    return this.currentLanguage;\n  }\n\n  /**\n   * Get current locale based on language\n   * @returns {string} Current locale\n   */\n  getLocale() {\n    return getLocaleFromLanguage(this.currentLanguage);\n  }\n\n  /**\n   * Set language\n   * @param {string} language - Language code\n   */\n  setLanguage(language) {\n    if (this.currentLanguage !== language) {\n      this.currentLanguage = language;\n      this.saveLanguage();\n\n      // Update document language for accessibility\n      updateDocumentLanguage(language);\n\n      this.notifyListeners();\n\n      // Dispatch a custom event for components to react to language change\n      const languageChangeEvent = new CustomEvent('languagechange', {\n        detail: { language },\n      });\n      document.dispatchEvent(languageChangeEvent);\n    }\n  }\n\n  /**\n   * Get translation for a key\n   * @param {string} key - Translation key\n   * @returns {string} Translated text\n   */\n  translate(key) {\n    return getTranslation(key, this.currentLanguage);\n  }\n\n  /**\n   * Get all translations for current language\n   * @returns {Object} Translations object\n   */\n  getAllTranslations() {\n    return getTranslations(this.currentLanguage);\n  }\n\n  /**\n   * Get available languages\n   * @returns {Array} Array of language objects\n   */\n  getAvailableLanguages() {\n    return getAvailableLanguages();\n  }\n\n  /**\n   * Add language change listener\n   * @param {Function} listener - Callback function\n   */\n  addListener(listener) {\n    if (typeof listener === 'function' && !this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  }\n\n  /**\n   * Remove language change listener\n   * @param {Function} listener - Callback function to remove\n   */\n  removeListener(listener) {\n    const index = this.listeners.indexOf(listener);\n    if (index !== -1) {\n      this.listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners of language change\n   */\n  notifyListeners() {\n    this.listeners.forEach((listener) => {\n      try {\n        listener(this.currentLanguage);\n      } catch (error) {\n        console.error('Error in language change listener:', error);\n      }\n    });\n  }\n}\n\nexport default LanguageService;\n","/**\n * Validators Utility\n * Provides validation functions for form inputs\n */\n\n/**\n * Validate that a value is a number\n * @param {any} value - The value to validate\n * @returns {boolean} True if valid\n */\nexport function isNumber(value) {\n  return !isNaN(parseFloat(value)) && isFinite(value);\n}\n\n/**\n * Validate that a value is a positive number\n * @param {any} value - The value to validate\n * @returns {boolean} True if valid\n */\nexport function isPositiveNumber(value) {\n  return isNumber(value) && parseFloat(value) > 0;\n}\n\n/**\n * Validate that a value is within a range\n * @param {any} value - The value to validate\n * @param {number} min - Minimum value\n * @param {number} max - Maximum value\n * @returns {boolean} True if valid\n */\nexport function isInRange(value, min, max) {\n  return isNumber(value) && parseFloat(value) >= min && parseFloat(value) <= max;\n}\n\n/**\n * Validate that a value is a valid interest rate\n * @param {any} value - The value to validate\n * @returns {boolean} True if valid\n */\nexport function isValidInterestRate(value) {\n  return isInRange(value, 0, 100);\n}\n\n/**\n * Validate that a value is a valid inflation rate\n * @param {any} value - The value to validate\n * @returns {boolean} True if valid\n */\nexport function isValidInflationRate(value) {\n  return isInRange(value, 0, 20);\n}\n\n/**\n * Validate that a value is a valid loan term in months\n * @param {any} value - The value to validate\n * @returns {boolean} True if valid\n */\nexport function isValidLoanTerm(value) {\n  return isNumber(value) && Number.isInteger(parseFloat(value)) && parseFloat(value) > 0;\n}\n\n/**\n * Validate that a value is a valid date\n * @param {any} value - The value to validate\n * @returns {boolean} True if valid\n */\nexport function isValidDate(value) {\n  if (value instanceof Date) {\n    return !isNaN(value.getTime());\n  }\n\n  const date = new Date(value);\n  return !isNaN(date.getTime());\n}\n\n/**\n * Validate that a value is not empty\n * @param {any} value - The value to validate\n * @returns {boolean} True if valid\n */\nexport function isNotEmpty(value) {\n  return value !== null && value !== undefined && String(value).trim() !== '';\n}\n\n/**\n * Get validation error message\n * @param {string} validationType - Type of validation\n * @param {any} value - The value that failed validation\n * @param {Object} options - Additional options for error message\n * @returns {string} Error message\n */\nexport function getValidationErrorMessage(validationType, value, options = {}) {\n  const messages = {\n    isNumber: 'Please enter a valid number.',\n    isPositiveNumber: 'Please enter a positive number.',\n    isInRange: `Please enter a number between ${options.min} and ${options.max}.`,\n    isValidInterestRate: 'Please enter a valid interest rate between 0 and 100.',\n    isValidInflationRate: 'Please enter a valid inflation rate between 0 and 20.',\n    isValidLoanTerm: 'Please enter a valid loan term (positive whole number).',\n    isValidDate: 'Please enter a valid date.',\n    isNotEmpty: 'This field is required.',\n  };\n\n  return messages[validationType] || 'Invalid input.';\n}\n"],"names":["keyboardNavigationManager","constructor","this","focusableElements","currentFocusIndex","keyboardShortcuts","Map","focusTraps","isTestMode","testResults","init","setupGlobalKeyboardHandlers","setupFocusManagement","registerDefaultShortcuts","enhanceFocusIndicators","document","addEventListener","e","handleGlobalKeydown","onFocusChange","target","key","handleEscapeKey","shortcutKey","getShortcutKey","has","shortcut","get","handler","preventDefault","announceToScreenReader","description","handleTabNavigation","includes","handleArrowNavigation","activeElement","container","trap","contains","handleFocusTrapNavigation","getFocusableElements","currentIndex","indexOf","nextIndex","shiftKey","length","nextElement","isElementFocusable","closest","handleTableArrowNavigation","handleFormGroupArrowNavigation","type","table","Array","from","querySelectorAll","rows","currentRow","currentRowIndex","cellsInRow","cellIndexInRow","targetElement","targetRow","targetCells","Math","min","focus","textContent","formGroup","classList","input","querySelector","setTimeout","value","dispatchEvent","Event","bubbles","openModals","openDropdowns","closeButton","click","forEach","dropdown","setAttribute","activeElements","el","remove","addSkipToContentLink","setupFocusRestoration","skipLink","createElement","href","className","mainContent","scrollIntoView","body","insertBefore","firstChild","add","style","head","appendChild","window","id","sessionStorage","setItem","lastFocusedId","getItem","element","getElementById","removeItem","registerShortcut","calculateButton","disabled","resetButton","form","firstInput","results","firstCell","showKeyboardShortcutsHelp","keys","set","parts","ctrlKey","push","altKey","metaKey","toLowerCase","join","helpContent","entries","map","toUpperCase","modal","cssText","content","innerHTML","closeModal","removeChild","trapFocus","firstElement","lastElement","trapHandler","removeFocusTrap","removeEventListener","delete","selector","filter","getComputedStyle","display","visibility","rect","getBoundingClientRect","width","height","overflow","parent","parentElement","parentStyle","timestamp","Date","now","tagName","substring","tabIndex","role","getAttribute","ariaLabel","startTesting","stopTesting","tabOrder","result","index","order","split","text","issues","analyzeTabOrder","issue","totalElements","some","lastFormIndex","formGroupBreaks","testAllKeyboardFunctionality","shortcuts","navigation","isVisible","hasHandler","tables","forms","count","hasArrowNavigation","hasTabNavigation","elementsWithoutFocusStyles","styles","outline","boxShadow","options","storageKey","version","_initializeStorage","data","localStorage","parsedData","JSON","parse","_migrateData","defaultData","lastUpdated","toISOString","calculations","stringify","error","oldData","migratedData","_getData","_saveData","name","code","_handleStorageLimit","sort","a","b","updatedAt","shift","saveCalculation","loan","amortizationSchedule","Error","calculationData","toJSON","savedAt","existingIndex","findIndex","calc","getCalculations","Loan","fromJSON","getCalculationById","find","AmortizationSchedule","updateCalculation","updatedLoan","updatedSchedule","deleteCalculation","splice","clearAllCalculations","isStorageAvailable","testKey","getStorageStats","allData","serializedData","usedBytes","Blob","size","totalBytes","usedKB","round","totalKB","percentUsed","itemCount","isNearingLimit","loadingManager","activeLoadings","loadingOverlay","showSkeleton","skeletonId","skeletonHtml","generateSkeletonHtml","originalContent","hideSkeleton","restoreContent","loading","showProgressOverlay","steps","title","message","cancellable","onCancel","hideProgressOverlay","announceLoadingState","generateProgressSteps","cancelBtn","requestAnimationFrame","opacity","updateProgress","progress","currentStep","progressBar","progressFill","progressText","clampedProgress","max","updateStepStatus","stepId","status","step","circle","dataset","stepNumber","previouslyFocused","removeAttribute","parentNode","showInlineLoader","loaderId","spinnerHtml","generateSpinnerHtml","hideInlineLoader","generateResultsSkeleton","generateTableSkeleton","generateChartSkeleton","generateFormSkeleton","items","fill","columns","_","i","getSkeletonCellClass","legend","fields","columnIndex","totalColumns","getStepIcon","label","clearAll","clear","getLocaleFromLanguage","language","en","es","formatNumber","decimals","locale","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","formatCurrency","currencyCode","currency","formatDate","date","dateObj","DateTimeFormat","getDateFormatForLocale","month","String","getMonth","padStart","day","getDate","year","getFullYear","formatted","replace","formatPercentage","Number","toFixed","formatDuration","months","years","floor","remainingMonths","translations","loanAmount","interestRate","loanTerm","loanType","paymentFrequency","downPayment","additionalPayment","startDate","calculate","reset","mortgage","auto","personal","student","monthly","biWeekly","weekly","marketRates","disclaimer","averageRate","rateRange","yourRate","difference","belowAverage","aboveAverage","sameAsAverage","useAverageRate","viewTrends","compareRates","glossary","openGlossary","close","search","searchPlaceholder","noResults","searchResults","opened","closed","monthlyPayment","totalPayment","totalInterest","payoffDate","interestSavings","timeReduction","share","export","print","amortization","paymentNumber","paymentDate","payment","principal","interest","balance","totalPrincipal","showAll","annual","noData","charts","principalVsInterest","paymentBreakdown","time","savedCalculations","noSavedCalculations","load","compare","rename","confirmDelete","enterName","defaultName","settings","theme","light","dark","dateFormat","numberFormat","comparison","scenario","savings","common","yes","no","ok","cancel","save","success","warning","info","tooltips","startTutorial","showGuidance","interpretingResults","affordabilityGuidance","refinanceGuidance","guidance","help","tutorial","interpretingResultsTitle","interpretingResultsContent","affordabilityTitle","affordabilityContent","affordabilityTip1","affordabilityTip2","affordabilityTip3","additionalPaymentsTitle","additionalPaymentsContent","refinanceTitle","refinanceContent","refinanceTip1","refinanceTip2","refinanceTip3","loanTypeTitle","loanTypeContent","loanAmountTitle","loanAmountContent","interestRateTitle","interestRateContent","loanTermTitle","loanTermContent","termPresetsTitle","termPresetsContent","additionalPaymentTitle","additionalPaymentContent","calculateTitle","calculateContent","resultsTitle","resultsContent","amortizationTitle","amortizationContent","chartsTitle","chartsContent","completedTitle","completedContent","getTranslation","translation","k","undefined","getTranslations","getAvailableLanguages","initTooltips","tooltip","tooltipContent","position","showTooltip","hideTooltip","hasAttribute","tooltipId","random","toString","substr","event","currentTarget","tooltipRect","viewportWidth","innerWidth","viewportHeight","innerHeight","left","right","top","bottom","positionTooltip","announcer","offsetWidth","announceTooltip","createGuidancePanel","panel","createTutorial","onComplete","overlay","showTutorialStep","nextStep","highlight","positionHighlight","parseFloat","positionTooltipNearTarget","prevButton","nextButton","prevStep","action","animationManager","animationQueue","isAnimating","observers","animateResultsReveal","stagger","delay","duration","easing","children","child","transform","animateChartReveal","animateTableRows","staggerDelay","row","animateNumber","to","formatter","num","toLocaleString","startTime","performance","easingFunctions","linear","t","easeOutCubic","easeInOutCubic","easingFunction","animate","currentTime","elapsed","easedProgress","currentValue","animateProgressBar","percentage","transition","addHoverAnimations","createRippleEffect","button","x","clientX","y","clientY","ripple","observeAndAnimate","threshold","rootMargin","animationClass","observer","IntersectionObserver","entry","isIntersecting","unobserve","observe","disconnectObservers","disconnect","queueAnimation","animationFunction","fn","processQueue","Promise","resolve","clearQueue","prefersReducedMotion","matchMedia","matches","respectfulAnimate","fallbackFunction","addKeyboardNavigation","loop","ariaLive","announcement","announceValidationError","fieldName","errorMessage","updateDocumentLanguage","documentElement","enhanceFormAccessibility","placeholder","errorElement","slider","associatedInput","trim","enhanceTableAccessibility","caption","captionElement","header","isFirstRow","cell","cellIndex","existingDescribedBy","newDescribedBy","storageService","StorageService","maxComparisons","selectedCalculations","getAllCalculations","isSelected","formattedDate","_formatDate","getCalculation","update","updates","calculation","loanUpdates","deselectCalculation","selectCalculation","clearSelection","getSelectedCalculations","compareCalculations","selected","metrics","_generateComparisonMetrics","differences","_calculateDifferences","schedule","totalLoanAmount","term","paymentAmount","numberOfPayments","baseline","current","diff","paymentDifference","interestDifference","totalPaymentDifference","termDifference","toLocaleDateString","hour","minute","organizeCalculations","calculationIds","category","currentLanguage","defaultLanguage","listeners","loadLanguage","savedLanguage","saveLanguage","getLanguage","getLocale","setLanguage","notifyListeners","languageChangeEvent","CustomEvent","detail","translate","getAllTranslations","addListener","listener","removeListener","isNumber","isNaN","isFinite","isPositiveNumber","isInRange","isValidInterestRate","isValidInflationRate","isValidLoanTerm","isInteger"],"sourceRoot":""}